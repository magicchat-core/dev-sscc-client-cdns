/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["magicChatCore"] = factory();
	else
		root["magicChatCore"] = factory();
})(this, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@socket.io/component-emitter/lib/esm/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@socket.io/component-emitter/lib/esm/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Emitter: () => (/* binding */ Emitter)\n/* harmony export */ });\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/@socket.io/component-emitter/lib/esm/index.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/has-cors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/has-cors.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasCORS: () => (/* binding */ hasCORS)\n/* harmony export */ });\n// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nconst hasCORS = value;\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-client/build/esm/contrib/has-cors.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/parseqs.js":
/*!********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/parseqs.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nfunction encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nfunction decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-client/build/esm/contrib/parseqs.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/parseuri.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/parseuri.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\n// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nfunction parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-client/build/esm/contrib/parseuri.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/globals.js":
/*!************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/globals.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCookieJar: () => (/* binding */ createCookieJar),\n/* harmony export */   defaultBinaryType: () => (/* binding */ defaultBinaryType),\n/* harmony export */   globalThisShim: () => (/* binding */ globalThisShim),\n/* harmony export */   nextTick: () => (/* binding */ nextTick)\n/* harmony export */ });\nconst nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nconst globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nconst defaultBinaryType = \"arraybuffer\";\nfunction createCookieJar() { }\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-client/build/esm/globals.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Fetch: () => (/* reexport safe */ _transports_polling_fetch_js__WEBPACK_IMPORTED_MODULE_6__.Fetch),\n/* harmony export */   NodeWebSocket: () => (/* reexport safe */ _transports_websocket_node_js__WEBPACK_IMPORTED_MODULE_8__.WS),\n/* harmony export */   NodeXHR: () => (/* reexport safe */ _transports_polling_xhr_node_js__WEBPACK_IMPORTED_MODULE_7__.XHR),\n/* harmony export */   Socket: () => (/* reexport safe */ _socket_js__WEBPACK_IMPORTED_MODULE_0__.Socket),\n/* harmony export */   SocketWithUpgrade: () => (/* reexport safe */ _socket_js__WEBPACK_IMPORTED_MODULE_0__.SocketWithUpgrade),\n/* harmony export */   SocketWithoutUpgrade: () => (/* reexport safe */ _socket_js__WEBPACK_IMPORTED_MODULE_0__.SocketWithoutUpgrade),\n/* harmony export */   Transport: () => (/* reexport safe */ _transport_js__WEBPACK_IMPORTED_MODULE_1__.Transport),\n/* harmony export */   TransportError: () => (/* reexport safe */ _transport_js__WEBPACK_IMPORTED_MODULE_1__.TransportError),\n/* harmony export */   WebSocket: () => (/* reexport safe */ _transports_websocket_node_js__WEBPACK_IMPORTED_MODULE_8__.WS),\n/* harmony export */   WebTransport: () => (/* reexport safe */ _transports_webtransport_js__WEBPACK_IMPORTED_MODULE_9__.WT),\n/* harmony export */   XHR: () => (/* reexport safe */ _transports_polling_xhr_node_js__WEBPACK_IMPORTED_MODULE_7__.XHR),\n/* harmony export */   installTimerFunctions: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_3__.installTimerFunctions),\n/* harmony export */   nextTick: () => (/* reexport safe */ _globals_node_js__WEBPACK_IMPORTED_MODULE_5__.nextTick),\n/* harmony export */   parse: () => (/* reexport safe */ _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_4__.parse),\n/* harmony export */   protocol: () => (/* binding */ protocol),\n/* harmony export */   transports: () => (/* reexport safe */ _transports_index_js__WEBPACK_IMPORTED_MODULE_2__.transports)\n/* harmony export */ });\n/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./socket.js */ \"./node_modules/engine.io-client/build/esm/socket.js\");\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _transports_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transports/index.js */ \"./node_modules/engine.io-client/build/esm/transports/index.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./contrib/parseuri.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseuri.js\");\n/* harmony import */ var _globals_node_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./globals.node.js */ \"./node_modules/engine.io-client/build/esm/globals.js\");\n/* harmony import */ var _transports_polling_fetch_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./transports/polling-fetch.js */ \"./node_modules/engine.io-client/build/esm/transports/polling-fetch.js\");\n/* harmony import */ var _transports_polling_xhr_node_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./transports/polling-xhr.js */ \"./node_modules/engine.io-client/build/esm/transports/polling-xhr.js\");\n/* harmony import */ var _transports_websocket_node_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./transports/websocket.js */ \"./node_modules/engine.io-client/build/esm/transports/websocket.js\");\n/* harmony import */ var _transports_webtransport_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./transports/webtransport.js */ \"./node_modules/engine.io-client/build/esm/transports/webtransport.js\");\n\n\n\nconst protocol = _socket_js__WEBPACK_IMPORTED_MODULE_0__.Socket.protocol;\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-client/build/esm/index.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/socket.js":
/*!***********************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/socket.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Socket: () => (/* binding */ Socket),\n/* harmony export */   SocketWithUpgrade: () => (/* binding */ SocketWithUpgrade),\n/* harmony export */   SocketWithoutUpgrade: () => (/* binding */ SocketWithoutUpgrade)\n/* harmony export */ });\n/* harmony import */ var _transports_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transports/index.js */ \"./node_modules/engine.io-client/build/esm/transports/index.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contrib/parseqs.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseqs.js\");\n/* harmony import */ var _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contrib/parseuri.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseuri.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/lib/esm/index.js\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n/* harmony import */ var _globals_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./globals.node.js */ \"./node_modules/engine.io-client/build/esm/globals.js\");\n\n\n\n\n\n\n\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nclass SocketWithoutUpgrade extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_4__.Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = _globals_node_js__WEBPACK_IMPORTED_MODULE_6__.defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = (0,_contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__.parse)(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = (0,_contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__.parse)(opts.host).host;\n        }\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.installTimerFunctions)(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = (0,_contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_2__.decode)(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = (0,_globals_node_js__WEBPACK_IMPORTED_MODULE_6__.createCookieJar)();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = engine_io_parser__WEBPACK_IMPORTED_MODULE_5__.protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.byteLength)(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            (0,_globals_node_js__WEBPACK_IMPORTED_MODULE_6__.nextTick)(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = engine_io_parser__WEBPACK_IMPORTED_MODULE_5__.protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nclass SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nclass Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => _transports_index_js__WEBPACK_IMPORTED_MODULE_0__.transports[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-client/build/esm/socket.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transport.js":
/*!**************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transport.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transport: () => (/* binding */ Transport),\n/* harmony export */   TransportError: () => (/* binding */ TransportError)\n/* harmony export */ });\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/lib/esm/index.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contrib/parseqs.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseqs.js\");\n\n\n\n\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nclass Transport extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.installTimerFunctions)(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_0__.decodePacket)(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = (0,_contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_3__.encode)(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-client/build/esm/transport.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   transports: () => (/* binding */ transports)\n/* harmony export */ });\n/* harmony import */ var _polling_xhr_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polling-xhr.node.js */ \"./node_modules/engine.io-client/build/esm/transports/polling-xhr.js\");\n/* harmony import */ var _websocket_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./websocket.node.js */ \"./node_modules/engine.io-client/build/esm/transports/websocket.js\");\n/* harmony import */ var _webtransport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./webtransport.js */ \"./node_modules/engine.io-client/build/esm/transports/webtransport.js\");\n\n\n\nconst transports = {\n    websocket: _websocket_node_js__WEBPACK_IMPORTED_MODULE_1__.WS,\n    webtransport: _webtransport_js__WEBPACK_IMPORTED_MODULE_2__.WT,\n    polling: _polling_xhr_node_js__WEBPACK_IMPORTED_MODULE_0__.XHR,\n};\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-client/build/esm/transports/index.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/polling-fetch.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/polling-fetch.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Fetch: () => (/* binding */ Fetch)\n/* harmony export */ });\n/* harmony import */ var _polling_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polling.js */ \"./node_modules/engine.io-client/build/esm/transports/polling.js\");\n\n/**\n * HTTP long-polling based on the built-in `fetch()` method.\n *\n * Usage: browser, Node.js (since v18), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/fetch\n * @see https://caniuse.com/fetch\n * @see https://nodejs.org/api/globals.html#fetch\n */\nclass Fetch extends _polling_js__WEBPACK_IMPORTED_MODULE_0__.Polling {\n    doPoll() {\n        this._fetch()\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch read error\", res.status, res);\n            }\n            res.text().then((data) => this.onData(data));\n        })\n            .catch((err) => {\n            this.onError(\"fetch read error\", err);\n        });\n    }\n    doWrite(data, callback) {\n        this._fetch(data)\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch write error\", res.status, res);\n            }\n            callback();\n        })\n            .catch((err) => {\n            this.onError(\"fetch write error\", err);\n        });\n    }\n    _fetch(data) {\n        var _a;\n        const isPost = data !== undefined;\n        const headers = new Headers(this.opts.extraHeaders);\n        if (isPost) {\n            headers.set(\"content-type\", \"text/plain;charset=UTF-8\");\n        }\n        (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.appendCookies(headers);\n        return fetch(this.uri(), {\n            method: isPost ? \"POST\" : \"GET\",\n            body: isPost ? data : null,\n            headers,\n            credentials: this.opts.withCredentials ? \"include\" : \"omit\",\n        }).then((res) => {\n            var _a;\n            // @ts-ignore getSetCookie() was added in Node.js v19.7.0\n            (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(res.headers.getSetCookie());\n            return res;\n        });\n    }\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-client/build/esm/transports/polling-fetch.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/polling-xhr.js":
/*!***************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/polling-xhr.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseXHR: () => (/* binding */ BaseXHR),\n/* harmony export */   Request: () => (/* binding */ Request),\n/* harmony export */   XHR: () => (/* binding */ XHR)\n/* harmony export */ });\n/* harmony import */ var _polling_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polling.js */ \"./node_modules/engine.io-client/build/esm/transports/polling.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/lib/esm/index.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _globals_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../globals.node.js */ \"./node_modules/engine.io-client/build/esm/globals.js\");\n/* harmony import */ var _contrib_has_cors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../contrib/has-cors.js */ \"./node_modules/engine.io-client/build/esm/contrib/has-cors.js\");\n\n\n\n\n\nfunction empty() { }\nclass BaseXHR extends _polling_js__WEBPACK_IMPORTED_MODULE_0__.Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nclass Request extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.installTimerFunctions)(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.pick)(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in _globals_node_js__WEBPACK_IMPORTED_MODULE_3__.globalThisShim ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nclass XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || _contrib_has_cors_js__WEBPACK_IMPORTED_MODULE_4__.hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new _globals_node_js__WEBPACK_IMPORTED_MODULE_3__.globalThisShim[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-client/build/esm/transports/polling-xhr.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/polling.js":
/*!***********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/polling.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Polling: () => (/* binding */ Polling)\n/* harmony export */ });\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n\n\n\nclass Polling extends _transport_js__WEBPACK_IMPORTED_MODULE_0__.Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_2__.decodePayload)(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_2__.encodePayload)(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.randomString)();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-client/build/esm/transports/polling.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/websocket.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/websocket.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseWS: () => (/* binding */ BaseWS),\n/* harmony export */   WS: () => (/* binding */ WS)\n/* harmony export */ });\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n/* harmony import */ var _globals_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../globals.node.js */ \"./node_modules/engine.io-client/build/esm/globals.js\");\n\n\n\n\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nclass BaseWS extends _transport_js__WEBPACK_IMPORTED_MODULE_0__.Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.pick)(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_2__.encodePacket)(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    (0,_globals_node_js__WEBPACK_IMPORTED_MODULE_3__.nextTick)(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.randomString)();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = _globals_node_js__WEBPACK_IMPORTED_MODULE_3__.globalThisShim.WebSocket || _globals_node_js__WEBPACK_IMPORTED_MODULE_3__.globalThisShim.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nclass WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-client/build/esm/transports/websocket.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/webtransport.js":
/*!****************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/webtransport.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WT: () => (/* binding */ WT)\n/* harmony export */ });\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _globals_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals.node.js */ \"./node_modules/engine.io-client/build/esm/globals.js\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n\n\n\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nclass WT extends _transport_js__WEBPACK_IMPORTED_MODULE_0__.Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_2__.createPacketDecoderStream)(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_2__.createPacketEncoderStream)();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    (0,_globals_node_js__WEBPACK_IMPORTED_MODULE_1__.nextTick)(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-client/build/esm/transports/webtransport.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/util.js":
/*!*********************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/util.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   byteLength: () => (/* binding */ byteLength),\n/* harmony export */   installTimerFunctions: () => (/* binding */ installTimerFunctions),\n/* harmony export */   pick: () => (/* binding */ pick),\n/* harmony export */   randomString: () => (/* binding */ randomString)\n/* harmony export */ });\n/* harmony import */ var _globals_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globals.node.js */ \"./node_modules/engine.io-client/build/esm/globals.js\");\n\nfunction pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = _globals_node_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = _globals_node_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.clearTimeout;\nfunction installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(_globals_node_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(_globals_node_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\n    }\n    else {\n        obj.setTimeoutFn = _globals_node_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.setTimeout.bind(_globals_node_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\n        obj.clearTimeoutFn = _globals_node_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.clearTimeout.bind(_globals_node_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nfunction byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nfunction randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-client/build/esm/util.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/commons.js":
/*!************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/commons.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERROR_PACKET: () => (/* binding */ ERROR_PACKET),\n/* harmony export */   PACKET_TYPES: () => (/* binding */ PACKET_TYPES),\n/* harmony export */   PACKET_TYPES_REVERSE: () => (/* binding */ PACKET_TYPES_REVERSE)\n/* harmony export */ });\nconst PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\n\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-parser/build/esm/commons.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nconst encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nconst decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/decodePacket.browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/decodePacket.browser.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodePacket: () => (/* binding */ decodePacket)\n/* harmony export */ });\n/* harmony import */ var _commons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commons.js */ \"./node_modules/engine.io-parser/build/esm/commons.js\");\n/* harmony import */ var _contrib_base64_arraybuffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contrib/base64-arraybuffer.js */ \"./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js\");\n\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return _commons_js__WEBPACK_IMPORTED_MODULE_0__.ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = (0,_contrib_base64_arraybuffer_js__WEBPACK_IMPORTED_MODULE_1__.decode)(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/encodePacket.browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/encodePacket.browser.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodePacket: () => (/* binding */ encodePacket),\n/* harmony export */   encodePacketToBinary: () => (/* binding */ encodePacketToBinary)\n/* harmony export */ });\n/* harmony import */ var _commons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commons.js */ \"./node_modules/engine.io-parser/build/esm/commons.js\");\n\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(_commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nfunction encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\n\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPacketDecoderStream: () => (/* binding */ createPacketDecoderStream),\n/* harmony export */   createPacketEncoderStream: () => (/* binding */ createPacketEncoderStream),\n/* harmony export */   decodePacket: () => (/* reexport safe */ _decodePacket_js__WEBPACK_IMPORTED_MODULE_1__.decodePacket),\n/* harmony export */   decodePayload: () => (/* binding */ decodePayload),\n/* harmony export */   encodePacket: () => (/* reexport safe */ _encodePacket_js__WEBPACK_IMPORTED_MODULE_0__.encodePacket),\n/* harmony export */   encodePayload: () => (/* binding */ encodePayload),\n/* harmony export */   protocol: () => (/* binding */ protocol)\n/* harmony export */ });\n/* harmony import */ var _encodePacket_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encodePacket.js */ \"./node_modules/engine.io-parser/build/esm/encodePacket.browser.js\");\n/* harmony import */ var _decodePacket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decodePacket.js */ \"./node_modules/engine.io-parser/build/esm/decodePacket.browser.js\");\n/* harmony import */ var _commons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commons.js */ \"./node_modules/engine.io-parser/build/esm/commons.js\");\n\n\n\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        (0,_encodePacket_js__WEBPACK_IMPORTED_MODULE_0__.encodePacket)(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = (0,_decodePacket_js__WEBPACK_IMPORTED_MODULE_1__.decodePacket)(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nfunction createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            (0,_encodePacket_js__WEBPACK_IMPORTED_MODULE_0__.encodePacketToBinary)(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nfunction createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(_commons_js__WEBPACK_IMPORTED_MODULE_2__.ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue((0,_decodePacket_js__WEBPACK_IMPORTED_MODULE_1__.decodePacket)(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(_commons_js__WEBPACK_IMPORTED_MODULE_2__.ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nconst protocol = 4;\n\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/engine.io-parser/build/esm/index.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/contrib/backo2.js":
/*!*******************************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/contrib/backo2.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Backoff: () => (/* binding */ Backoff)\n/* harmony export */ });\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nfunction Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/socket.io-client/build/esm/contrib/backo2.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Fetch: () => (/* reexport safe */ engine_io_client__WEBPACK_IMPORTED_MODULE_4__.Fetch),\n/* harmony export */   Manager: () => (/* reexport safe */ _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager),\n/* harmony export */   NodeWebSocket: () => (/* reexport safe */ engine_io_client__WEBPACK_IMPORTED_MODULE_4__.NodeWebSocket),\n/* harmony export */   NodeXHR: () => (/* reexport safe */ engine_io_client__WEBPACK_IMPORTED_MODULE_4__.NodeXHR),\n/* harmony export */   Socket: () => (/* reexport safe */ _socket_js__WEBPACK_IMPORTED_MODULE_2__.Socket),\n/* harmony export */   WebSocket: () => (/* reexport safe */ engine_io_client__WEBPACK_IMPORTED_MODULE_4__.WebSocket),\n/* harmony export */   WebTransport: () => (/* reexport safe */ engine_io_client__WEBPACK_IMPORTED_MODULE_4__.WebTransport),\n/* harmony export */   XHR: () => (/* reexport safe */ engine_io_client__WEBPACK_IMPORTED_MODULE_4__.XHR),\n/* harmony export */   connect: () => (/* binding */ lookup),\n/* harmony export */   \"default\": () => (/* binding */ lookup),\n/* harmony export */   io: () => (/* binding */ lookup),\n/* harmony export */   protocol: () => (/* reexport safe */ socket_io_parser__WEBPACK_IMPORTED_MODULE_3__.protocol)\n/* harmony export */ });\n/* harmony import */ var _url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url.js */ \"./node_modules/socket.io-client/build/esm/url.js\");\n/* harmony import */ var _manager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./manager.js */ \"./node_modules/socket.io-client/build/esm/manager.js\");\n/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./socket.js */ \"./node_modules/socket.io-client/build/esm/socket.js\");\n/* harmony import */ var socket_io_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/build/esm/index.js\");\n/* harmony import */ var engine_io_client__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! engine.io-client */ \"./node_modules/engine.io-client/build/esm/index.js\");\n\n\n\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = (0,_url_js__WEBPACK_IMPORTED_MODULE_0__.url)(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager: _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager,\n    Socket: _socket_js__WEBPACK_IMPORTED_MODULE_2__.Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\n\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\n\n\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/socket.io-client/build/esm/index.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/manager.js":
/*!************************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/manager.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Manager: () => (/* binding */ Manager)\n/* harmony export */ });\n/* harmony import */ var engine_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! engine.io-client */ \"./node_modules/engine.io-client/build/esm/index.js\");\n/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./socket.js */ \"./node_modules/socket.io-client/build/esm/socket.js\");\n/* harmony import */ var socket_io_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/build/esm/index.js\");\n/* harmony import */ var _on_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./on.js */ \"./node_modules/socket.io-client/build/esm/on.js\");\n/* harmony import */ var _contrib_backo2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./contrib/backo2.js */ \"./node_modules/socket.io-client/build/esm/contrib/backo2.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/lib/esm/index.js\");\n\n\n\n\n\n\nclass Manager extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_5__.Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        (0,engine_io_client__WEBPACK_IMPORTED_MODULE_0__.installTimerFunctions)(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new _contrib_backo2_js__WEBPACK_IMPORTED_MODULE_4__.Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || socket_io_parser__WEBPACK_IMPORTED_MODULE_2__;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new engine_io_client__WEBPACK_IMPORTED_MODULE_0__.Socket(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push((0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"ping\", this.onping.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"data\", this.ondata.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"error\", this.onerror.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        (0,engine_io_client__WEBPACK_IMPORTED_MODULE_0__.nextTick)(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new _socket_js__WEBPACK_IMPORTED_MODULE_1__.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/socket.io-client/build/esm/manager.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/on.js":
/*!*******************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/on.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   on: () => (/* binding */ on)\n/* harmony export */ });\nfunction on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/socket.io-client/build/esm/on.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/socket.js":
/*!***********************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/socket.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Socket: () => (/* binding */ Socket)\n/* harmony export */ });\n/* harmony import */ var socket_io_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/build/esm/index.js\");\n/* harmony import */ var _on_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./on.js */ \"./node_modules/socket.io-client/build/esm/on.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/lib/esm/index.js\");\n\n\n\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nclass Socket extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_2__.Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"open\", this.onopen.bind(this)),\n            (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"packet\", this.onpacket.bind(this)),\n            (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"error\", this.onerror.bind(this)),\n            (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.EVENT:\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.ACK:\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/socket.io-client/build/esm/socket.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/url.js":
/*!********************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/url.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   url: () => (/* binding */ url)\n/* harmony export */ });\n/* harmony import */ var engine_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! engine.io-client */ \"./node_modules/engine.io-client/build/esm/index.js\");\n\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nfunction url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = (0,engine_io_client__WEBPACK_IMPORTED_MODULE_0__.parse)(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/socket.io-client/build/esm/url.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/build/esm/binary.js":
/*!***********************************************************!*\
  !*** ./node_modules/socket.io-parser/build/esm/binary.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deconstructPacket: () => (/* binding */ deconstructPacket),\n/* harmony export */   reconstructPacket: () => (/* binding */ reconstructPacket)\n/* harmony export */ });\n/* harmony import */ var _is_binary_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-binary.js */ \"./node_modules/socket.io-parser/build/esm/is-binary.js\");\n\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if ((0,_is_binary_js__WEBPACK_IMPORTED_MODULE_0__.isBinary)(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/socket.io-parser/build/esm/binary.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/socket.io-parser/build/esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Decoder: () => (/* binding */ Decoder),\n/* harmony export */   Encoder: () => (/* binding */ Encoder),\n/* harmony export */   PacketType: () => (/* binding */ PacketType),\n/* harmony export */   protocol: () => (/* binding */ protocol)\n/* harmony export */ });\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/lib/esm/index.js\");\n/* harmony import */ var _binary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binary.js */ \"./node_modules/socket.io-parser/build/esm/binary.js\");\n/* harmony import */ var _is_binary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is-binary.js */ \"./node_modules/socket.io-parser/build/esm/is-binary.js\");\n\n\n\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nconst protocol = 5;\nvar PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if ((0,_is_binary_js__WEBPACK_IMPORTED_MODULE_2__.hasBinary)(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = (0,_binary_js__WEBPACK_IMPORTED_MODULE_1__.deconstructPacket)(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_0__.Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if ((0,_is_binary_js__WEBPACK_IMPORTED_MODULE_2__.isBinary)(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = (0,_binary_js__WEBPACK_IMPORTED_MODULE_1__.reconstructPacket)(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/socket.io-parser/build/esm/index.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/build/esm/is-binary.js":
/*!**************************************************************!*\
  !*** ./node_modules/socket.io-parser/build/esm/is-binary.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasBinary: () => (/* binding */ hasBinary),\n/* harmony export */   isBinary: () => (/* binding */ isBinary)\n/* harmony export */ });\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nfunction hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n\n\n//# sourceURL=webpack://magicChatCore/./node_modules/socket.io-parser/build/esm/is-binary.js?");

/***/ }),

/***/ "./src/attach.png":
/*!************************!*\
  !*** ./src/attach.png ***!
  \************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"10a30570f3430682b6c7.png\";\n\n//# sourceURL=webpack://magicChatCore/./src/attach.png?");

/***/ }),

/***/ "./src/chat_core.js":
/*!**************************!*\
  !*** ./src/chat_core.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChatCore)\n/* harmony export */ });\n/* harmony import */ var _utility_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utility.js */ \"./src/utility.js\");\n/* harmony import */ var _attach_png__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./attach.png */ \"./src/attach.png\");\n/* harmony import */ var _talk_to_human_png__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./talk_to_human.png */ \"./src/talk_to_human.png\");\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! socket.io-client */ \"./node_modules/socket.io-client/build/esm/index.js\");\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n\nconsole.log(\"laodededc the coreupdatedhis?dsd\");\nvar ChatCore = /*#__PURE__*/function () {\n  function ChatCore(_socket) {\n    var _this = this;\n    _classCallCheck(this, ChatCore);\n    _defineProperty(this, \"MOBILE_WIDTH\", 769);\n    _defineProperty(this, \"closeChatBox\", function () {\n      console.log(\"this.staterfghf\", _this.state.chat_modal_open);\n      if (_this.state.chat_modal_open) {\n        _this.state.chat_modal_open = false;\n      }\n    });\n    _defineProperty(this, \"createToggleButton\", function (view, tooltip, imgSrc, onClick) {\n      var btn = document.createElement(\"button\");\n      btn.className = \"toggleViewBtn\";\n      var img = document.createElement(\"img\");\n      img.className = \"humanImg\";\n      img.src = imgSrc;\n      img.alt = tooltip;\n      var tip = document.createElement(\"div\");\n      tip.className = \"tooltip\";\n      tip.innerText = tooltip;\n      btn.appendChild(img);\n      btn.appendChild(tip);\n      btn.addEventListener(\"click\", onClick);\n      return btn;\n    });\n    _defineProperty(this, \"incrementNotificationsCount\", function () {\n      var notification_num_div = document.getElementById(\"unread_chat_msgs_num\");\n      notification_num_div.textContent = Number(notification_num_div.textContent) + 1;\n    });\n    _defineProperty(this, \"updateAdminLSStatusAtClient\", function (live_status) {\n      // const status = result.is_online\n      var statusElement = document.querySelector(\"#statusElement > .user_status_cir\");\n      console.log(\"gota trigger ls\", statusElement, live_status, _typeof(live_status));\n      if (statusElement) {\n        statusElement.style.width = \"16px\";\n        statusElement.style.height = \"16px\";\n        statusElement.style.borderRadius = \"50%\";\n        if (live_status === \"ONLINE\") {\n          statusElement.textContent = \"\";\n          statusElement.style.background = \"green\";\n        }\n        if (live_status === \"AWAY\") {\n          statusElement.textContent = \"\";\n          statusElement.style.background = \"yellow\";\n        } else if (live_status === \"OFFLINE\") {\n          statusElement.textContent = \"\";\n          statusElement.style.background = \"#a99bbe\";\n          var chat_modal_id = \"chatModal\" + \"__\" + _utility_js__WEBPACK_IMPORTED_MODULE_0__.arbitrary_string_to_diff;\n          var chat_modal = document.getElementById(chat_modal_id);\n          var chatNotice = chat_modal.querySelector(\".chat_notice\");\n          chatNotice.textContent = \"\";\n        }\n      }\n    });\n    _defineProperty(this, \"updateUserListLSStatusAtClient\", function (data) {\n      console.log(\"does it ran when user went away?\", this);\n      if (!this.state.activeWindowObj) {\n        console.log(\"window was not opened!\");\n      } else {\n        console.log(data, _typeof(data), data.live_status, this.state.activeWindowObj, \"will see if the right window is open and will update the cir in it's header\");\n        if (!data || !data.hasOwnProperty(\"frm_user\") || !data.hasOwnProperty(\"live_status\")) {\n          console.error(\"Both are mandatory\", data, _typeof(data), !data.frm_user, data.frm_user);\n        } else {\n          // LET SEE THE OPEN WINDOW\n          console.log(\"sdfsdfsdfsfdata.frm_user1\", data);\n          var frm_user_id = data.frm_user.hasOwnProperty(\"uid\") ? data.frm_user.uid : data.frm_user.id;\n          console.log(\"asfhasdgsadf?\");\n          var crnt_window_id = this.state.activeWindowObj.hasOwnProperty(\"uid\") ? this.state.activeWindowObj.uid : this.state.activeWindowObj.id;\n          console.log(crnt_window_id, \"frm_user_idcrnt_window_id\", frm_user_id);\n          if (frm_user_id == crnt_window_id) {\n            var statusElement = document.querySelector(\"#statusElement > .user_status_cir\");\n            console.log(data.live_status, \"statusElemensdftsdfsdsdf\", statusElement);\n            if (data.live_status === \"AWAY\") {\n              statusElement.textContent = \"\";\n              statusElement.style.background = \"yellow\";\n            } else if (data.live_status === \"ONLINE\") {\n              statusElement.textContent = \"\";\n              statusElement.style.background = \"green\";\n            } else if (data.live_status === \"OFFLINE\") {\n              statusElement.textContent = \"\";\n              statusElement.style.background = \"grey\";\n            }\n          }\n        }\n      }\n    });\n    _defineProperty(this, \"showNoticeMsg\", function (msg, chatNotice) {\n      var chatNoticeCont = document.createElement(\"div\");\n      chatNoticeCont.textContent = msg || \"Feel Free to Shoot what's on your mind!\";\n      chatNotice.appendChild(chatNoticeCont);\n\n      // Initially hidden (opacity 0, display block)\n      chatNotice.style.opacity = \"1\";\n      chatNotice.style.display = \"block\";\n      chatNotice.classList.add(\"welcomemsg\");\n      var opacity = 0;\n\n      // Fade-in effect (gradually increase opacity)\n      var fadeInInterval = setInterval(function () {\n        if (opacity >= 1) {\n          clearInterval(fadeInInterval);\n        } else {\n          opacity += 0.05; // Increase opacity\n          chatNotice.style.opacity = opacity;\n        }\n      }, 50);\n\n      // Hide the notice after 5 seconds with fade-out effect\n      setTimeout(function () {\n        var fadeOutOpacity = 1;\n        var fadeOutInterval = setInterval(function () {\n          if (fadeOutOpacity <= 0) {\n            clearInterval(fadeOutInterval);\n            chatNotice.style.display = \"none\"; // Hide after fade-out\n          } else {\n            fadeOutOpacity -= 0.05; // Reduce opacity gradually\n            chatNotice.style.opacity = fadeOutOpacity;\n          }\n        }, 50);\n      }, 5000);\n    });\n    _defineProperty(this, \"setglobalMsgsBucketInput\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(val, key1) {\n        var keyType,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              keyType = _args.length > 2 && _args[2] !== undefined ? _args[2] : \"input\";\n              console.log(\"what is in is it running!!\", val, key1, keyType, chat_core.state.globalMsgsBucket);\n              if (keyType == \"input\") {\n                chat_core.state.globalMsgsBucket[\"user__\" + key1].input = val;\n              } else {\n                console.error(\"nothing matched! - \" + keyType);\n              }\n              // rerenderRightWrapper(); // Re-render the right wrapper with the updated value\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"updateLiveStatus\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(bodyContent, headersList) {\n        var _this2 = this;\n        var options,\n          tezkit_app_data,\n          tezkit_app_p_data,\n          bodyObj,\n          emit_payload,\n          _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n              tezkit_app_data = localStorage.getItem(\"tezkit_app_data\");\n              console.log(\"edrgndgndfgtezkit_app_datafdg\", tezkit_app_data);\n              tezkit_app_p_data = null;\n              if (tezkit_app_data) {\n                tezkit_app_p_data = JSON.parse(tezkit_app_data);\n              }\n              console.log(\"chat_core.stateGTFHDFGHvsdfsd\", tezkit_app_p_data.tenant_info.id);\n              bodyObj = JSON.parse(bodyContent);\n              console.log(\"chat_core.asgassdfsdbodyObjfsadf\", bodyObj);\n              emit_payload = _objectSpread({\n                app_name: tezkit_app_p_data.app_name,\n                version: tezkit_app_p_data.settings.version,\n                app_type: tezkit_app_p_data.settings.app_type,\n                // 'soc_server_ip':\"122.160.157.99:8022\",\n                tenant_id: tezkit_app_p_data.tenant_info.id\n              }, bodyObj); // console.log(\"sdfleuhrgerrdt\", this.state.socket);\n              // this.state.socket.emit(\"ON_USER_LIVE_STATUS\", emit_payload);\n              if (this.state.socket) {\n                if (this.state.socket.connected) {\n                  this.state.socket.emit(\"ON_USER_LIVE_STATUS\", emit_payload);\n                } else {\n                  this.state.socket.once(\"connect\", function () {\n                    _this2.state.socket.emit(\"ON_USER_LIVE_STATUS\", emit_payload);\n                  });\n                }\n              }\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"setAdminLSData\", /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_ref3, updateLs) {\n        var tenantName, otherUserId, appName, version, current_apptype, api_key, baseUrl, queryParams, url, token, headersList, requestOptions, response, result;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              tenantName = _ref3.tenantName, otherUserId = _ref3.otherUserId, appName = _ref3.appName, version = _ref3.version, current_apptype = _ref3.current_apptype, api_key = _ref3.api_key;\n              console.log(\"current_apptypesdfsdfsdf\", current_apptype);\n              baseUrl = \"https://livestatus.\".concat(\"addchat.tech\", \"/\").concat(\"dev\", \"/get_app\");\n              queryParams = new URLSearchParams({\n                type: \"user_type\",\n                tenant_name: tenantName,\n                user_id: otherUserId,\n                app_name: appName,\n                version: version,\n                app_type: current_apptype\n              }); // const token = localStorage.getItem(\"tezkit_token\");\n              url = \"\".concat(baseUrl, \"?\").concat(queryParams);\n              token = localStorage.getItem(\"tezkit_token\");\n              headersList = {\n                Accept: \"*/*\",\n                \"x-api-key\": api_key //for ALL versions\n\n                // Authorization: `Bearer ${token}`, // Replace or modify if needed\n              };\n              requestOptions = {\n                method: \"GET\",\n                headers: headersList,\n                redirect: \"follow\"\n              };\n              _context3.prev = 8;\n              _context3.next = 11;\n              return fetch(url, requestOptions);\n            case 11:\n              response = _context3.sent;\n              if (response.ok) {\n                _context3.next = 14;\n                break;\n              }\n              throw new Error(\"HTTP error! Status: \".concat(response.status));\n            case 14:\n              _context3.next = 16;\n              return response.json();\n            case 16:\n              result = _context3.sent;\n              console.log(\"Result:\", result);\n              updateLs(result);\n              return _context3.abrupt(\"return\", result);\n            case 22:\n              _context3.prev = 22;\n              _context3.t0 = _context3[\"catch\"](8);\n              console.error(\"Error fetching data:\", _context3.t0);\n              throw _context3.t0;\n            case 26:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[8, 22]]);\n      }));\n      return function (_x5, _x6) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"init\", function (loggedInUser, identifiers) {\n      console.log(\"here is incoing in init?\", loggedInUser, identifiers);\n      var tezkit_app_data = localStorage.getItem(\"tezkit_app_data\");\n      console.log(\"initialized1111111\", tezkit_app_data);\n      if (tezkit_app_data) {\n        var tezkit_app_p_data = JSON.parse(tezkit_app_data);\n        console.log(\"initializetezkit_app_p_datad2222222\", _this.state.loggedInUser.email);\n        var bodyContent = null;\n        bodyContent = JSON.stringify({\n          // ...loggedInUser,\n          live_status: \"ONLINE\",\n          version: tezkit_app_p_data.settings.version,\n          tenant: tezkit_app_p_data.tenant_id,\n          frm_user: {\n            id: _this.state.loggedInUser.uid ? _this.state.loggedInUser.uid : _this.state.loggedInUser.id\n          }\n        });\n        var headersList = {\n          Accept: \"*/*\",\n          \"User-Agent\": \"Thunder Client (https://www.thunderclient.com)\",\n          \"x-api-key\": tezkit_app_p_data.auth_key,\n          \"Content-Type\": \"application/json\"\n        };\n        var client_push_enabled = _this.isFeatureEnabled(tezkit_app_p_data.feature, \"live_status\", \"client_push_admin\");\n        if (client_push_enabled) {\n          console.log(\"arewer erewrsdfsd?\", tezkit_app_p_data);\n          console.log(\"arewer erewr?\", tezkit_app_p_data.settings.version);\n          console.log(\"arewer erewr?\", _this.state.loggedInUser.id);\n          var logg_in_id = _this.state.loggedInUser.hasOwnProperty(\"uid\") ? _this.state.loggedInUser.uid : _this.state.loggedInUser.id;\n          var ls_payload = {\n            app_type: tezkit_app_p_data.settings.app_type,\n            // skip_ls_sending: false,\n            app_name: tezkit_app_p_data.app_name,\n            version: tezkit_app_p_data.settings.version,\n            user_id: logg_in_id\n          };\n          if (tezkit_app_p_data.settings.app_type == \"P2P\") {\n            console.log(\"arewe heredyContent in away handler\", bodyContent);\n          } else if (tezkit_app_p_data.settings.app_type == \"P2A\") {\n            ls_payload.tenant_id = _this.state.loggedInUser.tenant_info.id;\n            console.log(\"here is updatedls_payload\", ls_payload);\n          }\n          _this.updateLiveStatus(bodyContent, headersList, ls_payload);\n        }\n        console.log(\"arwerhere?sdfsadfasd\");\n        _this.initializeSocketConnection(loggedInUser, tezkit_app_p_data, identifiers);\n        console.log(\"exit intit????\");\n      }\n    });\n    _defineProperty(this, \"createChatHeader\", function (arbitraryString) {\n      var tezkit_app_data = localStorage.getItem(\"tezkit_app_data\");\n      if (!tezkit_app_data) return;\n      var tezkit_app_pdata = JSON.parse(tezkit_app_data);\n      var chatWrapper = document.createElement(\"div\");\n      chatWrapper.className = \"chat_header_wrapper\";\n      var chatHeader = document.createElement(\"div\");\n      chatHeader.className = \"chat_header\";\n      var headerContainer = document.createElement(\"div\");\n      headerContainer.style.display = \"flex\";\n      headerContainer.style.alignItems = \"center\";\n      var loginMessage = document.createElement(\"h3\");\n      loginMessage.id = \"loginMessage\";\n      var backBtn = document.createElement(\"button\");\n      backBtn.id = \"backButton\";\n      backBtn.classList = \"back_button\";\n      backBtn.textContent = \"← Back\";\n      var statusElement = document.createElement(\"span\");\n      statusElement.id = \"statusElement\";\n      statusElement.style.marginLeft = \"10px\";\n      var userStatusCir = document.createElement(\"div\");\n      userStatusCir.className = \"user_status_cir\";\n      userStatusCir.style.backgroundColor = \"white\";\n      userStatusCir.style.border = \"1px solid grey\";\n      var userStatusText = document.createElement(\"div\");\n      userStatusText.className = \"user_status_text\";\n      statusElement.appendChild(userStatusCir);\n      statusElement.appendChild(userStatusText);\n      var typingStatusElm = document.createElement(\"span\");\n      typingStatusElm.id = \"typingStatusElm\";\n      headerContainer.appendChild(backBtn);\n      headerContainer.appendChild(loginMessage);\n      headerContainer.appendChild(statusElement);\n      headerContainer.appendChild(typingStatusElm);\n      chatHeader.appendChild(headerContainer);\n      chatWrapper.appendChild(chatHeader);\n\n      // 🟢 Correctly scoped button variable\n      var toggleCloseBtn = null;\n      if (tezkit_app_pdata.settings.app_type === \"P2A\") {\n        console.log(\"heremark1\", _this.state.viewType);\n        toggleCloseBtn = document.createElement(\"button\");\n        toggleCloseBtn.id = \"close-btn__\".concat(arbitraryString);\n        toggleCloseBtn.className = \"toggleViewBtn close_modal\";\n        var img = document.createElement(\"img\");\n        img.className = \"humanImg\";\n        img.src = _this.state.viewType === \"bot_chat\" ? \"https://img.icons8.com/?size=100&id=37628&format=png&color=FFFFFF\" : \"https://img.icons8.com/?size=100&id=TSeTYH0wh948&format=png&color=FFFFFF\";\n        img.alt = \"Talk to live user\";\n        var tip = document.createElement(\"div\");\n        tip.className = \"tooltip\";\n        tip.innerText = \"Talk to live user\";\n        console.log(\"heremark2\", _this.state.viewType);\n        toggleCloseBtn.appendChild(img);\n        toggleCloseBtn.appendChild(tip);\n        console.log(\"whichoneareu?this.state.viewType1\", _this.state.viewType);\n        toggleCloseBtn.addEventListener(\"click\", function () {\n          var newView = _this.state.viewType === \"bot_chat\" ? \"user_chat\" : \"bot_chat\";\n          _this.toggleChatView(newView);\n          img.src = newView === \"bot_chat\" ? \"https://img.icons8.com/?size=100&id=37628&format=png&color=FFFFFF\" : \"https://img.icons8.com/?size=100&id=TSeTYH0wh948&format=png&color=FFFFFF\";\n        });\n        console.log(\"heremark3\", _this.state.viewType);\n      } else if (tezkit_app_pdata.settings.app_type === \"P2P\") {\n        toggleCloseBtn = document.createElement(\"button\");\n        var _img = document.createElement(\"img\");\n        _img.className = \"humanImg\";\n        _img.src = \"https://img.icons8.com/?size=100&id=40665&format=png&color=FFFFFF\";\n        _img.alt = \"Close\";\n        toggleCloseBtn.appendChild(_img);\n        toggleCloseBtn.addEventListener(\"click\", function () {\n          console.log(\"Closing P2P Chat Modal\", _this);\n          _this.minimizeChatModal();\n        });\n      }\n\n      // ✅ Append only if it was created\n      if (toggleCloseBtn) {\n        chatWrapper.appendChild(toggleCloseBtn);\n      }\n      var chatNotice = document.createElement(\"div\");\n      chatNotice.className = \"chat_notice\";\n      chatNotice.id = \"chatNotice\";\n      chatNotice.style.display = \"none\";\n      chatWrapper.appendChild(chatNotice);\n      return chatWrapper;\n    });\n    _defineProperty(this, \"createChatHeaderLogout\", function (arbitraryString) {\n      console.log(\"aerw here?\");\n      var tezkit_app_data = localStorage.getItem(\"tezkit_app_data\");\n      if (!tezkit_app_data) return;\n      var tezkit_app_pdata = JSON.parse(tezkit_app_data);\n      var chatWrapper = document.createElement(\"div\");\n      chatWrapper.className = \"chat_header_wrapper\";\n      var chatHeader = document.createElement(\"div\");\n      chatHeader.className = \"chat_header\";\n      var headerContainer = document.createElement(\"div\");\n      headerContainer.style.display = \"flex\";\n      headerContainer.style.alignItems = \"center\";\n      var headerName = document.createElement(\"h3\");\n      headerName.id = \"loginMessage\";\n      headerName.textContent = \"ChatBot Admin\";\n\n      // const backBtn = document.createElement(\"button\");\n      // backBtn.id = \"backButton\";\n      // backBtn.classList = \"back_button\";\n      // backBtn.textContent = \"← Back\";\n\n      // const statusElement = document.createElement(\"span\");\n      // statusElement.id = \"statusElement\";\n      // statusElement.style.marginLeft = \"10px\";\n\n      // const userStatusCir = document.createElement(\"div\");\n      // userStatusCir.className = \"user_status_cir\";\n      // userStatusCir.style.backgroundColor = \"white\";\n      // userStatusCir.style.border = \"1px solid grey\";\n\n      // const userStatusText = document.createElement(\"div\");\n      // userStatusText.className = \"user_status_text\";\n\n      // statusElement.appendChild(userStatusCir);\n      // statusElement.appendChild(userStatusText);\n\n      var typingStatusElm = document.createElement(\"span\");\n      typingStatusElm.id = \"typingStatusElm\";\n\n      // headerContainer.appendChild(backBtn);\n      headerContainer.appendChild(headerName);\n      // headerContainer.appendChild(statusElement);\n      // headerContainer.appendChild(typingStatusElm);\n\n      chatHeader.appendChild(headerContainer);\n      chatWrapper.appendChild(chatHeader);\n\n      // 🟢 Correctly scoped button variable\n      var toggleCloseBtn = null;\n      console.log(\"heremark1\", _this.state.viewType);\n      toggleCloseBtn = document.createElement(\"button\");\n      toggleCloseBtn.id = \"close-btn__\".concat(arbitraryString);\n      toggleCloseBtn.className = \"toggleViewBtn close_modal\";\n      var img = document.createElement(\"img\");\n      img.className = \"closeBotLGImg\";\n      img.src = \"https://cdn-icons-png.flaticon.com/512/9068/9068678.png\";\n      img.style.height = \"50px\";\n      img.style.width = \"50px\";\n      // img.className = \"humanImg\";\n\n      img.alt = \"closeBot Img\";\n      var tip = document.createElement(\"div\");\n      tip.className = \"tooltip\";\n      tip.innerText = \"closeBot Img\";\n\n      // console.log(\"heremark2\", this.state.viewType);\n\n      toggleCloseBtn.appendChild(img);\n\n      // toggleCloseBtn = document.createElement(\"button\");\n\n      // const img = document.createElement(\"img\");\n      // img.className = \"humanImg\";\n      // img.src =\n      //   \"https://img.icons8.com/?size=100&id=40665&format=png&color=FFFFFF\";\n      // img.alt = \"Close\";\n\n      toggleCloseBtn.addEventListener(\"click\", function () {\n        _this.minimizeChatModal();\n      });\n\n      // ✅ Append only if it was created\n      if (toggleCloseBtn) {\n        chatWrapper.appendChild(toggleCloseBtn);\n      }\n      var chatNotice = document.createElement(\"div\");\n      chatNotice.className = \"chat_notice\";\n      chatNotice.id = \"chatNotice\";\n      chatNotice.style.display = \"none\";\n      chatWrapper.appendChild(chatNotice);\n      return chatWrapper;\n    });\n    _defineProperty(this, \"createMiddleCBWrappers\", function () {\n      console.log(\"here is the middle wrapper?\");\n      var tezkit_app_data = localStorage.getItem(\"tezkit_app_data\");\n      console.log(status, \"initialized1111111\", tezkit_app_data);\n      if (tezkit_app_data) {\n        var tezkit_app_pdata = JSON.parse(tezkit_app_data);\n        console.log(\"tezkit_app_pdatasdf  do we have na app_type\", tezkit_app_pdata.settings.app_type);\n        if (tezkit_app_pdata.settings.app_type == \"P2A\") {\n          console.log(\"arewrwerwer?\", _this.state);\n          var chatBodyBotWrapper = document.createElement(\"div\");\n          chatBodyBotWrapper.className = \"chat_body_and_footer_wrapper_bot\";\n          var botHistory = document.createElement(\"div\");\n          var isThinkingDiv = document.createElement(\"div\");\n          isThinkingDiv.setAttribute(\"id\", \"bot_thinking\");\n          isThinkingDiv.textContent = \"Thinking...\";\n          isThinkingDiv.style.display = \"none\";\n          botHistory.className = \"chat_bot_history\";\n          chatBodyBotWrapper.appendChild(botHistory);\n          chatBodyBotWrapper.appendChild(isThinkingDiv);\n          var chatBodyUserWrapper = document.createElement(\"div\");\n          chatBodyUserWrapper.className = \"chat_body_and_footer_wrapper_user\";\n          var chatBody1 = document.createElement(\"div\");\n          chatBody1.className = \"chat_body\";\n          chatBody1.id = \"chatBody\";\n          chatBodyUserWrapper.appendChild(chatBody1);\n          var chatFooter1 = document.createElement(\"div\");\n          chatFooter1.className = \"chat_footer\";\n          var togglerBtn = document.createElement(\"button\");\n          togglerBtn.className = \"togglerBtn\";\n          togglerBtn.textContent = \"Toggler\";\n          var chatFooterBot = document.createElement(\"div\");\n          chatFooterBot.className = \"bot_chat_footer\";\n          var botBody = document.createElement(\"div\");\n          botBody.className = \"bot_body\";\n          chatFooterBot.appendChild(botBody);\n          chatBodyBotWrapper.appendChild(chatFooterBot);\n          return {\n            chatBodyUserWrapper: chatBodyUserWrapper,\n            chatBodyBotWrapper: chatBodyBotWrapper,\n            chatFooter1: chatFooter1\n          };\n        } else if (tezkit_app_pdata.settings.app_type == \"P2P\") {\n          console.log(\"arewrwerwer?\", _this.state);\n          var _chatBodyUserWrapper = document.createElement(\"div\");\n          _chatBodyUserWrapper.className = \"chat_body_and_footer_wrapper_user\";\n          var _chatBody = document.createElement(\"div\");\n          _chatBody.className = \"chat_body\";\n          _chatBody.id = \"chatBody\";\n          _chatBodyUserWrapper.appendChild(_chatBody);\n          var _chatFooter = document.createElement(\"div\");\n          _chatFooter.className = \"chat_footer\";\n          return {\n            chatBodyUserWrapper: _chatBodyUserWrapper,\n            undefined: undefined,\n            chatFooter1: _chatFooter\n          };\n        }\n      }\n    });\n    // Function to set up user info in chat header\n    _defineProperty(this, \"setupUserInfo\", /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(tezkit_app_pdata) {\n        var chat_modal, loggedInUser, chatHeader, theme, theme_obj, loginMessage, tezkit_me_data, tezkit_me_pdata, userExist, errorDiv, modal, sendButton;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              chat_modal = document.querySelector(\".chat_modal__\" + _utility_js__WEBPACK_IMPORTED_MODULE_0__.arbitrary_string_to_diff);\n              loggedInUser = _this.state.loggedInUser;\n              console.log(\"loggedInUsersdfsdf\", loggedInUser);\n              if (!loggedInUser) {\n                _context4.next = 21;\n                break;\n              }\n              chatHeader = chat_modal.querySelector(\".chat_header\");\n              theme = localStorage.getItem(\"theme\");\n              if (theme) {\n                theme_obj = JSON.parse(theme);\n                if (theme_obj.chat_box_theme) {\n                  if (theme_obj.chat_box_theme.textColor) {\n                    chatHeader.style.color = theme_obj.chat_box_theme.textColor;\n                  }\n                  if (theme_obj.chat_box_theme.backgroundColor) {\n                    chatHeader.style.backgroundColor = theme_obj.chat_box_theme.backgroundColor;\n                  }\n                }\n              }\n              loginMessage = chatHeader.querySelector(\"h3\");\n              if (!tezkit_app_pdata.settings.version) {\n                _context4.next = 21;\n                break;\n              }\n              tezkit_me_data = localStorage.getItem(\"tezkit_me\");\n              if (!tezkit_me_data) {\n                _context4.next = 21;\n                break;\n              }\n              tezkit_me_pdata = JSON.parse(tezkit_me_data);\n              if (!loggedInUser) {\n                _context4.next = 21;\n                break;\n              }\n              if (!(tezkit_app_pdata.settings.version != \"V1\")) {\n                _context4.next = 20;\n                break;\n              }\n              _context4.next = 16;\n              return (0,_utility_js__WEBPACK_IMPORTED_MODULE_0__.check_if_user_exists)(tezkit_app_pdata.auth_key, tezkit_app_pdata.app_name, loggedInUser.uid, tezkit_app_pdata.tenant_id);\n            case 16:\n              userExist = _context4.sent;\n              if (!userExist.success) {\n                loginMessage.textContent = \"Error Loading User\";\n                errorDiv = document.createElement(\"div\");\n                chatBody.textContent = \"\";\n                errorDiv.textContent = \"Invalid User\";\n                errorDiv.style.color = \"red\";\n                chatBody.appendChild(errorDiv);\n                modal = document.querySelector(\".chat_modal__j7hD9nXt3QpLvFz1uY6j7m2\");\n                sendButton = modal.querySelector(\"#sendButton\");\n                if (sendButton) {\n                  sendButton.disabled = true;\n                  sendButton.setAttribute(\"title\", \"✖ disabled\");\n                }\n              } else {\n                loginMessage.textContent = tezkit_me_pdata && tezkit_me_pdata.tenant_info && tezkit_me_pdata.tenant_info.full_name || \"Admin\";\n              }\n              _context4.next = 21;\n              break;\n            case 20:\n              if (tezkit_app_pdata.settings.app_type == \"P2A\") {\n                loginMessage.textContent = tezkit_me_pdata && tezkit_me_pdata.tenant_info && tezkit_me_pdata.tenant_info.full_name || \"Admin\";\n              } else {\n                loginMessage.textContent = _this.state.activeWindowObj.user_name;\n              }\n            case 21:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      return function (_x7) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"initializeMessageLoading\", /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(tezkit_app_pdata, socket) {\n        var self, isLoading, currentPage, totalPages, apiUrlBase, chatBody, loadingElement, showLoader, hideLoader, fetchMessages, loadMoreMessages, scrollObserver, _prv_msgs_ls$chats, initialApiUrl, prv_msgs_ls, messages, _prv_msgs_ls$chats$te, other_uid, pagination, filteredUnreadMessages, children, _i, _children, child;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              self = _this; // Preserve class context\n              isLoading = false;\n              currentPage = 1;\n              totalPages = 0;\n              apiUrlBase = tezkit_app_pdata.settings.app_type === \"P2A\" ? \"https://chats.\".concat(\"addchat.tech\", \"/\").concat(\"dev\", \"/all_chats?app_name=\").concat(self.state.loggedInUser.app_name, \"&app_type=P2A&user_type=CLIENT&page=\") : \"https://chats.\".concat(\"addchat.tech\", \"/\").concat(\"dev\", \"/all_chats?app_name=\").concat(self.state.loggedInUser.app_name, \"&app_type=P2P&user_type=CLIENT&page=\");\n              chatBody = document.getElementById(\"chatBody\"); // Create persistent loading element\n              loadingElement = document.getElementById(\"loading-message\");\n              if (!loadingElement) {\n                loadingElement = document.createElement(\"div\");\n                loadingElement.id = \"loading-message\";\n                loadingElement.style.textAlign = \"center\";\n                loadingElement.style.padding = \"10px\";\n                loadingElement.style.display = \"none\";\n                chatBody.prepend(loadingElement);\n              }\n\n              // Helper functions for loading states\n              showLoader = function showLoader() {\n                var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Loading...\";\n                loadingElement.textContent = text;\n                loadingElement.style.display = \"block\";\n              };\n              hideLoader = function hideLoader() {\n                loadingElement.style.display = \"none\";\n              }; // Function to fetch messages from API\n              fetchMessages = /*#__PURE__*/function () {\n                var _ref7 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(apiUrl) {\n                  var token, response;\n                  return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                    while (1) switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.prev = 0;\n                        token = localStorage.getItem(\"tezkit_token\");\n                        if (!(!token && tezkit_app_pdata.settings.version === \"V1\")) {\n                          _context5.next = 4;\n                          break;\n                        }\n                        throw new Error(\"Token is missing\");\n                      case 4:\n                        response = null;\n                        if (!(tezkit_app_pdata.settings.version === \"V1\")) {\n                          _context5.next = 11;\n                          break;\n                        }\n                        _context5.next = 8;\n                        return fetch(apiUrl, {\n                          method: \"GET\",\n                          headers: {\n                            Authorization: token,\n                            Accept: \"application/json\"\n                          }\n                        });\n                      case 8:\n                        response = _context5.sent;\n                        _context5.next = 14;\n                        break;\n                      case 11:\n                        _context5.next = 13;\n                        return fetch(\"\".concat(apiUrl, \"&uid=\").concat(self.state.loggedInUser.uid, \"&other_user_id=\").concat(self.state.activeWindowObj.uid), {\n                          method: \"GET\",\n                          headers: {\n                            Accept: \"application/json\",\n                            \"x-api-key\": tezkit_app_pdata.auth_key\n                          }\n                        });\n                      case 13:\n                        response = _context5.sent;\n                      case 14:\n                        if (response.ok) {\n                          _context5.next = 16;\n                          break;\n                        }\n                        throw new Error(\"Failed to fetch data\");\n                      case 16:\n                        _context5.next = 18;\n                        return response.json();\n                      case 18:\n                        return _context5.abrupt(\"return\", _context5.sent);\n                      case 21:\n                        _context5.prev = 21;\n                        _context5.t0 = _context5[\"catch\"](0);\n                        console.error(\"Error fetching messages:\", _context5.t0);\n                        throw _context5.t0;\n                      case 25:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }, _callee5, null, [[0, 21]]);\n                }));\n                return function fetchMessages(_x10) {\n                  return _ref7.apply(this, arguments);\n                };\n              }(); // Function to load more messages when scrolling up\n              loadMoreMessages = /*#__PURE__*/function () {\n                var _ref8 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n                  var apiUrl, data, _data$chats, uidKey, msgs, reversedMsgs;\n                  return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n                    while (1) switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (!(isLoading || totalPages > 0 && currentPage >= totalPages)) {\n                          _context6.next = 2;\n                          break;\n                        }\n                        return _context6.abrupt(\"return\");\n                      case 2:\n                        isLoading = true;\n                        showLoader(\"Loading more messages...\");\n                        _context6.prev = 4;\n                        apiUrl = \"\".concat(apiUrlBase).concat(currentPage + 1);\n                        _context6.next = 8;\n                        return fetchMessages(apiUrl);\n                      case 8:\n                        data = _context6.sent;\n                        if (data) {\n                          totalPages = data.pagination.total_pages || totalPages;\n                          currentPage = data.pagination.current_page || currentPage + 1;\n                          if ((_data$chats = data.chats) !== null && _data$chats !== void 0 && _data$chats[tezkit_app_pdata.app_name]) {\n                            uidKey = tezkit_app_pdata.settings.version === \"V1\" ? self.state.activeWindowObj.id : self.state.activeWindowObj.uid;\n                            msgs = data.chats[tezkit_app_pdata.app_name][\"user__\".concat(uidKey)];\n                            if (msgs !== null && msgs !== void 0 && msgs.msgs) {\n                              reversedMsgs = msgs.msgs.reverse();\n                              self.insertBulkChats(reversedMsgs, undefined, true);\n                            }\n                          }\n                        }\n                        _context6.next = 15;\n                        break;\n                      case 12:\n                        _context6.prev = 12;\n                        _context6.t0 = _context6[\"catch\"](4);\n                        console.error(\"Error loading more messages:\", _context6.t0);\n                      case 15:\n                        _context6.prev = 15;\n                        isLoading = false;\n                        hideLoader();\n\n                        // Reattach observer to new first message\n                        if (chatBody.children.length > 1) {\n                          scrollObserver.disconnect();\n                          scrollObserver.observe(chatBody.children[1]);\n                        }\n                        return _context6.finish(15);\n                      case 20:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }, _callee6, null, [[4, 12, 15, 20]]);\n                }));\n                return function loadMoreMessages() {\n                  return _ref8.apply(this, arguments);\n                };\n              }(); // Initialize IntersectionObserver for infinite scroll\n              scrollObserver = new IntersectionObserver(function (entries) {\n                if (entries[0].isIntersecting) {\n                  loadMoreMessages();\n                }\n              }, {\n                root: chatBody,\n                threshold: 0.1 // Trigger when 10% visible\n              }); // Load initial messages\n\n              showLoader(\"Loading initial messages...\");\n              _context7.prev = 14;\n              initialApiUrl = \"\".concat(apiUrlBase).concat(currentPage);\n              _context7.next = 18;\n              return fetchMessages(initialApiUrl);\n            case 18:\n              prv_msgs_ls = _context7.sent;\n              messages = [];\n              console.log(\"self.statesdfsdfs\", self.state);\n              if (prv_msgs_ls !== null && prv_msgs_ls !== void 0 && (_prv_msgs_ls$chats = prv_msgs_ls.chats) !== null && _prv_msgs_ls$chats !== void 0 && _prv_msgs_ls$chats[tezkit_app_pdata.app_name]) {\n                other_uid = tezkit_app_pdata.settings.version != \"V1\" ? self.state.activeWindowObj.uid : self.state.activeWindowObj.id;\n                messages = ((_prv_msgs_ls$chats$te = prv_msgs_ls.chats[tezkit_app_pdata.app_name][\"user__\".concat(other_uid)]) === null || _prv_msgs_ls$chats$te === void 0 ? void 0 : _prv_msgs_ls$chats$te.msgs) || [];\n              }\n              if (messages.length) {\n                pagination = prv_msgs_ls.pagination;\n                totalPages = pagination.total_pages || 1;\n                currentPage = pagination.current_page || 1;\n\n                // Process unread messages\n                filteredUnreadMessages = messages.filter(function (item) {\n                  return item.message.status !== \"READ\";\n                });\n                self.state.unread_messages = filteredUnreadMessages;\n\n                // Mark messages as read if needed\n                if (self.state.viewType === \"user_chat\") {\n                  self.informPeerSysAboutBULKMsgsStatus(socket, messages, \"READ\", self.state.loggedInUser.app_name, self.state.loggedInUser.tenant_info.id);\n                }\n\n                // Clear chat body except loading element\n                children = Array.from(chatBody.children);\n                for (_i = 0, _children = children; _i < _children.length; _i++) {\n                  child = _children[_i];\n                  if (child.id !== \"loading-message\") {\n                    chatBody.removeChild(child);\n                  }\n                }\n\n                // Insert messages\n                self.insertBulkChats(messages);\n\n                // Observe first message (position 1, right after loader)\n                if (chatBody.children.length > 1) {\n                  scrollObserver.observe(chatBody.children[1]);\n                }\n\n                // Scroll to bottom\n                chatBody.scrollTop = chatBody.scrollHeight;\n              }\n              _context7.next = 28;\n              break;\n            case 25:\n              _context7.prev = 25;\n              _context7.t0 = _context7[\"catch\"](14);\n              console.error(\"Initial message load failed:\", _context7.t0);\n            case 28:\n              _context7.prev = 28;\n              hideLoader();\n              return _context7.finish(28);\n            case 31:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, null, [[14, 25, 28, 31]]);\n      }));\n      return function (_x8, _x9) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"initializeLogout\", /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(tezkit_app_pdata, socket, logout_mode) {\n        var self, _prv_msgs_ls$chats2, initialApiUrl, prv_msgs_ls, messages, _prv_msgs_ls$chats$te2, other_uid, pagination, filteredUnreadMessages, children, _i2, _children2, child;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              self = _this; // Preserve class context\n              _context8.prev = 1;\n              initialApiUrl = \"\".concat(apiUrlBase).concat(currentPage);\n              _context8.next = 5;\n              return fetchMessages(initialApiUrl);\n            case 5:\n              prv_msgs_ls = _context8.sent;\n              messages = [];\n              console.log(\"self.statesdfsdfs\", self.state);\n              if (prv_msgs_ls !== null && prv_msgs_ls !== void 0 && (_prv_msgs_ls$chats2 = prv_msgs_ls.chats) !== null && _prv_msgs_ls$chats2 !== void 0 && _prv_msgs_ls$chats2[tezkit_app_pdata.app_name]) {\n                other_uid = tezkit_app_pdata.settings.version != \"V1\" ? self.state.activeWindowObj.uid : self.state.activeWindowObj.id;\n                messages = ((_prv_msgs_ls$chats$te2 = prv_msgs_ls.chats[tezkit_app_pdata.app_name][\"user__\".concat(other_uid)]) === null || _prv_msgs_ls$chats$te2 === void 0 ? void 0 : _prv_msgs_ls$chats$te2.msgs) || [];\n              }\n              if (messages.length) {\n                pagination = prv_msgs_ls.pagination;\n                totalPages = pagination.total_pages || 1;\n                currentPage = pagination.current_page || 1;\n\n                // Process unread messages\n                filteredUnreadMessages = messages.filter(function (item) {\n                  return item.message.status !== \"READ\";\n                });\n                self.state.unread_messages = filteredUnreadMessages;\n\n                // Mark messages as read if needed\n                if (self.state.viewType === \"user_chat\") {\n                  self.informPeerSysAboutBULKMsgsStatus(socket, messages, \"READ\", self.state.loggedInUser.app_name, self.state.loggedInUser.tenant_info.id);\n                }\n\n                // Clear chat body except loading element\n                children = Array.from(chatBody.children);\n                for (_i2 = 0, _children2 = children; _i2 < _children2.length; _i2++) {\n                  child = _children2[_i2];\n                  if (child.id !== \"loading-message\") {\n                    chatBody.removeChild(child);\n                  }\n                }\n\n                // Insert messages\n                self.insertBulkChats(messages);\n\n                // Observe first message (position 1, right after loader)\n                if (chatBody.children.length > 1) {\n                  scrollObserver.observe(chatBody.children[1]);\n                }\n\n                // Scroll to bottom\n                chatBody.scrollTop = chatBody.scrollHeight;\n              }\n              _context8.next = 15;\n              break;\n            case 12:\n              _context8.prev = 12;\n              _context8.t0 = _context8[\"catch\"](1);\n              console.error(\"Initial message load failed:\", _context8.t0);\n            case 15:\n              _context8.prev = 15;\n              hideLoader();\n              return _context8.finish(15);\n            case 18:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, null, [[1, 12, 15, 18]]);\n      }));\n      return function (_x11, _x12, _x13) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"renderChatModal\", /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(tezkit_app_pdata, socket, otherUserId, chatModal, arbitraryString, logout_mode) {\n        var _tezkit_app_pdata$fea;\n        var cstw, loader_div, enableValue, userChatScreenWrap, _this$createChatEleme, chatWrapper, chatBodyUserWrapper, chatBodyBotWrapper, chatFooter1;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              console.log(logout_mode, \"ast it breaks is logout_modesbreandh?\", tezkit_app_pdata);\n              console.log(\"whatewtirdgdviewType\", _this.state.viewType);\n              // dps.remove()\n              cstw = document.querySelector(\".chat_screen_top_wrapper\");\n              console.log(\"cstwsdwsf\", cstw);\n              loader_div = document.createElement(\"div\");\n              loader_div.textContent = \"loading chat window ......\";\n              if (cstw) {\n                cstw.appendChild(loader_div); //WE PROBABLY WANT TO DO IT FOR P2P ONLY!!!\n              }\n              enableValue = (_tezkit_app_pdata$fea = tezkit_app_pdata.feature) === null || _tezkit_app_pdata$fea === void 0 || (_tezkit_app_pdata$fea = _tezkit_app_pdata$fea.live_status) === null || _tezkit_app_pdata$fea === void 0 ? void 0 : _tezkit_app_pdata$fea.enable;\n              if (!(enableValue == true)) {\n                _context9.next = 12;\n                break;\n              }\n              console.log(\"live_status.enable is not strictly boolean\", otherUserId);\n\n              // Process admin live status first\n              _context9.next = 12;\n              return _this.processAdminLiveStatus(tezkit_app_pdata, otherUserId);\n            case 12:\n              // Create main chat container\n              userChatScreenWrap = _this.createChatContainer(tezkit_app_pdata); // Create chat UI elements\n              _this$createChatEleme = _this.createChatElements(arbitraryString, logout_mode), chatWrapper = _this$createChatEleme.chatWrapper, chatBodyUserWrapper = _this$createChatEleme.chatBodyUserWrapper, chatBodyBotWrapper = _this$createChatEleme.chatBodyBotWrapper, chatFooter1 = _this$createChatEleme.chatFooter1; // const dps = document.querySelector(\"#default_p2p_screen\")\n              // console.log(\"dpsfdsaasdfsd\",dps)\n              // dps.remove()\n              loader_div.remove();\n\n              // Assemble chat UI structure\n              _this.assembleChatUI(userChatScreenWrap, chatModal, chatWrapper, chatBodyUserWrapper, chatBodyBotWrapper, chatFooter1);\n\n              // Update live status display\n\n              if (enableValue == true) {\n                console.log(\"live_status.enable is not strictly boolean\");\n\n                // Process admin live status first\n                // await this.processAdminLiveStatus(tezkit_app_pdata, otherUserId);\n                _this.updateAdminLSStatusAtClient(_this.state.activeWindowObj.live_status);\n              }\n              console.log(\"did you fire?2\");\n              // console.log(\"wrtweirwerwerchatBodyUserWrapper1\", chatBodyBotWrapper.style.display);\n\n              // if (chatBodyBotWrapper) {\n              // Handle bot content and input actions\n              _context9.next = 20;\n              return _this.handleBotContentAndInput(tezkit_app_pdata, chatBodyUserWrapper, chatBodyBotWrapper, socket, logout_mode);\n            case 20:\n              if (logout_mode) {\n                _this.toggleChatView(\"bot_chat\");\n              }\n\n              // }\n\n              // await this.handleBotContentAndInput(\n              //   tezkit_app_pdata,\n              //   chatBodyUserWrapper,\n              //   chatBodyBotWrapper,\n              //   socket\n              // );\n              // console.log(\"wrtweirwerwerchatBodyUserWrapper2\", chatBodyBotWrapper.style.display);\n\n              // Final initialization\n              _context9.next = 23;\n              return _this.initializeChatComponents(tezkit_app_pdata, socket, logout_mode);\n            case 23:\n              // console.log(\"wrtweirwerwerchatBodyUserWrapper3\", chatBodyBotWrapper.style.display);\n\n              _this.openChatModal();\n\n              // console.log(\"wrtweirwerwerchatBodyUserWrapper4\", chatBodyBotWrapper.style.display);\n            case 24:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9);\n      }));\n      return function (_x14, _x15, _x16, _x17, _x18, _x19) {\n        return _ref10.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"processAdminLiveStatus\", /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(tezkit_app_pdata, otherUserId) {\n        var clientPullAdminEnabled, payload;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              clientPullAdminEnabled = _this.isFeatureEnabled(tezkit_app_pdata.feature, \"live_status\", \"client_pull_admin\");\n              if (!clientPullAdminEnabled) {\n                _context10.next = 5;\n                break;\n              }\n              payload = {\n                tenantName: tezkit_app_pdata.tenant_id,\n                otherUserId: otherUserId,\n                appName: tezkit_app_pdata.app_name,\n                version: tezkit_app_pdata.settings.version,\n                current_apptype: tezkit_app_pdata.settings.app_type,\n                api_key: tezkit_app_pdata.auth_key\n              };\n              _context10.next = 5;\n              return _this.setAdminLSData(payload, function (result) {\n                return _this.handleAdminStatusUpdate(result, tezkit_app_pdata);\n              });\n            case 5:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10);\n      }));\n      return function (_x20, _x21) {\n        return _ref11.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"handleAdminStatusUpdate\", function (result, tezkit_app_pdata) {\n      console.log(\"did you fire?1\");\n      var statusData = result[0];\n      console.log(\"ewrwerwerresultd\", result);\n      if (!(statusData !== null && statusData !== void 0 && statusData.hasOwnProperty(\"live_status\"))) return;\n      _this.updateAdminLSStatusAtClient(statusData.live_status);\n      _this.state.activeWindowObj.live_status = statusData.live_status;\n    });\n    _defineProperty(this, \"shouldToggleViewType\", function (tezkit_app_pdata) {\n      return tezkit_app_pdata.settings.app_type === \"P2A\" && _this.isFeatureEnabled(tezkit_app_pdata.feature, \"live_status\", \"client_pull_admin\");\n    });\n    _defineProperty(this, \"createChatContainer\", function (tezkit_app_pdata) {\n      var container = tezkit_app_pdata.settings.app_type === \"P2A\" ? document.createElement(\"div\") : document.querySelector(\".chat_screen_top_wrapper\");\n      container.className = \"chat_screen_top_wrapper\";\n      return container;\n    });\n    _defineProperty(this, \"createChatElements\", function (arbitraryString, logout_mode) {\n      console.log(\"arentlogout_mode\", logout_mode);\n      if (!logout_mode) {\n        return _objectSpread({\n          chatWrapper: _this.createChatHeader(arbitraryString)\n        }, _this.createMiddleCBWrappers());\n      } else {\n        console.log(\"going through it?\");\n        return _objectSpread({\n          chatWrapper: _this.createChatHeaderLogout(arbitraryString)\n        }, _this.createMiddleCBWrappers());\n      }\n    });\n    _defineProperty(this, \"assembleChatUI\", function (container, modal, header, userBody, botBody, footer) {\n      modal.appendChild(container);\n      container.append(header, userBody);\n      botBody && container.appendChild(botBody);\n      userBody.appendChild(footer);\n    });\n    _defineProperty(this, \"handleBotContentAndInput\", /*#__PURE__*/function () {\n      var _ref12 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(tezkit_app_pdata, userBody, botBody, socket, logout_mode) {\n        var botData;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              if (!_this.shouldHandleBotContent(tezkit_app_pdata)) {\n                _context11.next = 9;\n                break;\n              }\n              botData = localStorage.getItem(\"tezkit_bot_data\");\n              if (botData) {\n                _context11.next = 4;\n                break;\n              }\n              return _context11.abrupt(\"return\");\n            case 4:\n              console.log(botBody.style.display, \"arew wheresdfsdf\", userBody.style.display);\n              _this.processBotData(botData, userBody, botBody);\n              _this.attachInputAction(\"tenant_info\", socket, logout_mode);\n              _context11.next = 10;\n              break;\n            case 9:\n              _this.attachInputAction(\"active_window\", socket, logout_mode);\n            case 10:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11);\n      }));\n      return function (_x22, _x23, _x24, _x25, _x26) {\n        return _ref12.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"shouldHandleBotContent\", function (tezkit_app_pdata) {\n      return tezkit_app_pdata.enabled_bot_content && tezkit_app_pdata.settings.app_type === \"P2A\";\n    });\n    _defineProperty(this, \"processBotData\", function (botData, userBody, botBody) {\n      var parsedData = JSON.parse(botData);\n      if (parsedData !== null && parsedData !== void 0 && parsedData.FAQ) (0,_utility_js__WEBPACK_IMPORTED_MODULE_0__.renderQNA)(parsedData.FAQ);\n\n      // const displayState = this.state.activeWindowObj.live_status\n      //   ? { show: userBody, hide: botBody }\n      //   : { show: botBody, hide: userBody };\n\n      // displayState.show.style.display = \"flex\";\n      // displayState.hide.style.display = \"none\";\n\n      userBody.style.display = \"flex\";\n      botBody.style.display = \"none\";\n    });\n    _defineProperty(this, \"attachInputAction\", function (idType, socket, logout_mode) {\n      if (logout_mode) {\n        console.log(\"can we load some input box there\");\n        _this.attachInputActionRowLogout(_this.state.globalMsgsBucket,\n        // getNextCorrectLength,\n        // { id },\n        // this.state.loggedInUser,\n        socket, _this);\n      } else {\n        var id = idType === \"tenant_info\" ? String(_this.state.loggedInUser.tenant_info.id) : String(_this.state.activeWindowObj.id);\n        _this.attachInputActionRow(_this.state.globalMsgsBucket, _utility_js__WEBPACK_IMPORTED_MODULE_0__.getNextCorrectLength, {\n          id: id\n        }, _this.state.loggedInUser, socket, _this);\n      }\n    });\n    _defineProperty(this, \"initializeChatComponents\", /*#__PURE__*/function () {\n      var _ref13 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(tezkit_app_pdata, socket, logout_mode) {\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              if (logout_mode) {\n                _context12.next = 5;\n                break;\n              }\n              _context12.next = 3;\n              return Promise.all([_this.initializeMessageLoading(tezkit_app_pdata, socket), _this.setupUserInfo(tezkit_app_pdata)]);\n            case 3:\n              _context12.next = 7;\n              break;\n            case 5:\n              _context12.next = 7;\n              return Promise.all([\n              // this.initializeLogout(tezkit_app_pdata, socket,logout_mode),\n              _this.setupUserInfo(tezkit_app_pdata)]);\n            case 7:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12);\n      }));\n      return function (_x27, _x28, _x29) {\n        return _ref13.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"getMessageElementFromChatBox\", function (msg_id) {\n      console.log(\"msg_idsdfsfsdfsdmsg_id\", msg_id);\n      var msgElm = document.getElementById(msg_id);\n      if (msgElm) {\n        return msgElm;\n      }\n    });\n    _defineProperty(this, \"updateDeliveryStatus\", function (ret_id, status) {\n      var msg = document.getElementById(ret_id);\n      if (msg) {\n        var statusDiv = msg.querySelector(\".status\");\n        if (status == \"DELIVERED\") {\n          statusDiv.textContent = \"✓✓\";\n          console.log(\"DELIVERED mess\", status);\n        } else if (status === \"READ\") {\n          statusDiv.textContent = \"✓✓\";\n          statusDiv.style.color = \"green\";\n          console.log(\"READ mess\", status);\n        }\n      }\n    });\n    _defineProperty(this, \"handleMsgUpdatedEvent\", function (p_data) {\n      var _p_data$message = p_data.message,\n        ret_id = _p_data$message.ret_id,\n        message = _p_data$message.message;\n      var msg = message;\n      console.log(\"whatis it now?\", p_data.message);\n      var chatBody = document.getElementById(\"chatBody\");\n\n      // const msgIndex = getMessageIndex(ret_id);\n      // const messageElement = getMessageElement(msgIndex, chatBody);\n\n      // const msg_id = getRightMessageIdByRetId(ret_id);\n      console.log(_this, \"wwhat is ths msg_id when broken1\", ret_id);\n      var messageElement = _this.getMessageElementFromChatBox(ret_id, chatBody);\n      if (messageElement) {\n        console.log(\"messageElementsdfsdf\", messageElement, msg);\n        var messageDiv = messageElement.querySelector(\".mine_message div\");\n        console.log(\"whateriewrmessageText\", messageDiv.textContent);\n        if (messageDiv.textContent) {\n          messageDiv.textContent = msg;\n        }\n      }\n    });\n    _defineProperty(this, \"initializeSocketConnection\", function (loggedInUser, tezkit_app_data, identifiers) {\n      // console.log(\"hewrewrewNO_PORTed\",Boolean(process.env),typeof Boolean(process.env.NO_PORT))\n      var self = _this;\n      // console.log(\"process.env.DEV_WS_PORT\",process.env)\n      if (loggedInUser) {\n        var wsProtocol = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n        // const wsPort =\n        //   window.location.protocol === \"https:\"\n        //     ? \"\"\n        //     : `:${process.env.DEV_WS_PORT}`;\n\n        // const ws_server_ip = Boolean(process.env.NO_PORT)==true ? `${wsProtocol}://${process.env.WS_SERVER}${wsPort}`: `${wsProtocol}://${process.env.WS_SERVER}`;\n        var ws_server_ip = \"\".concat(wsProtocol, \"://\").concat(\"dev.addchat.tech\"); //Boolean(process.env.NO_PORT)==true ? `${wsProtocol}://${process.env.WS_SERVER}${wsPort}`: `${wsProtocol}://${process.env.WS_SERVER}`;\n        var storedUserId = \"dfsdfsdfsddumyhand\"; // Replace with real user logic\n\n        console.log(\"ws_server_ip is sdfhsdfsfere\", ws_server_ip, tezkit_app_data, loggedInUser);\n        var user_id = loggedInUser.hasOwnProperty(\"uid\") ? loggedInUser.uid : loggedInUser.id;\n        console.log(\"wehrwerwerwert_tenant\", loggedInUser);\n        var auth_payload = {\n          user_id: user_id,\n          // Send token in the auth object\n          x_api_key: tezkit_app_data.auth_key,\n          type: \"CLIENT\",\n          tenant: loggedInUser.uid ? loggedInUser.tenant : loggedInUser.tenant_info.tenant,\n          tenant_id: loggedInUser.tenant_info.id,\n          frm_user: {\n            id: user_id\n          },\n          app_name: tezkit_app_data.app_name,\n          app_type: tezkit_app_data.settings.app_type,\n          version: tezkit_app_data.settings.version\n        };\n        console.log(loggedInUser, \"auth_payloadsfsdfsd\", auth_payload);\n        _this.state.socket = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(ws_server_ip, {\n          transports: [\"websocket\"],\n          auth: auth_payload\n        });\n\n        // this.state.socket = socket;\n        // console.log(\"dowe see chatChorehere?\", chat_core);\n\n        //\n\n        // Save auth info for future reconnections\n        // const storedUserId = \"dfsdfsdfsddumyhand\"; // Replace with real user logic\n\n        _this.state.socket.on(\"reconnect_attempt\", function () {\n          socket.auth = {\n            user_id: storedUserId\n          };\n        });\n        if (!identifiers.hasOwnProperty(\"name_idn\")) {\n          console.error(\"`name_idn` does not exist\");\n        } else {\n          if (!loggedInUser.hasOwnProperty(identifiers[\"name_idn\"])) {} else {\n            _this.attachCommonSocks(tezkit_app_data, identifiers);\n\n            //\n            console.log(\"whaweriwerwerwretezkit_app_data\", tezkit_app_data, _typeof(tezkit_app_data));\n            var tezkit_app_pdata = tezkit_app_data; //JSON.parse(tezkit_app_data);\n\n            var admin_push_client_enabled = _this.isFeatureEnabled(tezkit_app_pdata.feature, \"live_status\", \"admin_push_client\");\n            if (admin_push_client_enabled) {\n              console.log(\"arewehever\");\n              _this.state.socket.on(\"ON_USER_LIVE_STATUS_CLIENT_LISTNER\", function (data) {\n                var p_data = data;\n                console.log(\"we are not getting any triggers?\");\n                if (!p_data.hasOwnProperty(\"live_status\")) {\n                  console.error(\"No status provided!\");\n                } else if (tezkit_app_data.settings.app_type == \"P2P\") {\n                  console.log(\"aewerhercurrent_apptypee?\", tezkit_app_data.settings.app_type);\n                  self.updateUserListLSStatusAtClient(p_data);\n                  if (p_data.live_status) {\n                    console.log(\"diddi you happen3???\");\n                    var chatBotWrapper = document.querySelector(\".chat_body_and_footer_wrapper_bot\");\n                    console.log(\"diddi you happen???\");\n                  } else {\n                    var _chatBotWrapper = document.querySelector(\".chat_body_and_footer_wrapper_user\");\n                  }\n                } else if (tezkit_app_data.settings.app_type == \"P2A\") {\n                  console.log(\"aewerhercurrent_apptypee?\", tezkit_app_data.settings.app_type);\n                  console.log(\"did you fire?3\");\n                  self.updateAdminLSStatusAtClient(p_data.live_status);\n                  if (p_data.status) {\n                    console.log(\"diddi you happen3???\");\n                    var _chatBotWrapper2 = document.querySelector(\".chat_body_and_footer_wrapper_bot\");\n                    console.log(\"diddi you happen???\");\n                  } else {\n                    var _chatBotWrapper3 = document.querySelector(\".chat_body_and_footer_wrapper_user\");\n                  }\n                }\n              });\n            }\n          }\n        }\n      }\n    });\n    _defineProperty(this, \"handleMsgReactionEvent\", function (p_data) {\n      //\n      var _p_data$message2 = p_data.message,\n        ret_id = _p_data$message2.ret_id,\n        message = _p_data$message2.message;\n      console.log(\"ret_idsdfsadfsdf\", p_data.message);\n      var reaction = message;\n      var chatBody = document.getElementById(\"chatBody\");\n      // const msg_id = getRightMessageIdByRetId(ret_id);\n      // const msgIndex = getMessageIndex(ret_id);\n      console.log(\"wwhat is ths msg_id when broken2chatBody\", chatBody);\n      if (chatBody) {\n        var messageElement = _this.getMessageElementFromChatBox(ret_id, chatBody);\n        console.log(\"are we ever hitting it???\", messageElement);\n        if (messageElement) {\n          _this.updateMessageReaction(messageElement, reaction);\n        }\n      }\n    });\n    _defineProperty(this, \"getUnreadMsgsP2A\", /*#__PURE__*/function () {\n      var _ref14 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(token, app_name, app_type) {\n        var app_version,\n          myHeaders,\n          requestOptions,\n          api_url,\n          response,\n          errorMsg,\n          result,\n          total_unread_msgs,\n          tezkit_app_data,\n          tezkit_app_pdata,\n          _args13 = arguments;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              app_version = _args13.length > 3 && _args13[3] !== undefined ? _args13[3] : \"V1\";\n              myHeaders = new Headers();\n              myHeaders.append(\"Authorization\", token);\n              requestOptions = {\n                method: \"GET\",\n                headers: myHeaders,\n                redirect: \"follow\"\n              };\n              api_url = null;\n              if (app_version === \"V1\") {\n                api_url = \"https://chats.\".concat(\"addchat.tech\", \"/\").concat(\"dev\", \"/?app_name=\").concat(app_name, \"&page=1&unread=True&app_type=\").concat(app_type, \"&user_type=CLIENT\");\n                console.log(\"sdlfosildfsdfsdf2\");\n              }\n              if (api_url) {\n                _context13.next = 9;\n                break;\n              }\n              console.error(\"Invalid app version provided!\");\n              return _context13.abrupt(\"return\", null);\n            case 9:\n              _context13.prev = 9;\n              _context13.next = 12;\n              return fetch(api_url, requestOptions);\n            case 12:\n              response = _context13.sent;\n              if (response.ok) {\n                _context13.next = 18;\n                break;\n              }\n              _context13.next = 16;\n              return response.text();\n            case 16:\n              errorMsg = _context13.sent;\n              throw new Error(\"HTTP Error: \".concat(response.status, \" - \").concat(errorMsg));\n            case 18:\n              _context13.next = 20;\n              return response.json();\n            case 20:\n              result = _context13.sent;\n              console.log(\"API Response:\", result);\n\n              // Return 0 if 'chats' is empty or missing\n              if (!(!result.chats || Object.keys(result.chats).length === 0)) {\n                _context13.next = 25;\n                break;\n              }\n              console.log(\"No unread messages found.\");\n              return _context13.abrupt(\"return\", 0);\n            case 25:\n              total_unread_msgs = 0;\n              tezkit_app_data = localStorage.getItem(\"tezkit_app_data\");\n              console.log(status, \"initialized111sdfsd1111\", tezkit_app_data);\n              if (tezkit_app_data) {\n                tezkit_app_pdata = JSON.parse(tezkit_app_data);\n                if (result.chats.hasOwnProperty(tezkit_app_pdata.app_name) && result.chats[tezkit_app_pdata.app_name].hasOwnProperty(\"user__\" + tezkit_app_pdata.tenant_info.id)) {\n                  console.log(\"wehrowereteurto\");\n                  total_unread_msgs = result.chats[tezkit_app_pdata.app_name][\"user__\" + tezkit_app_pdata.tenant_info.id].unread_msgs;\n                }\n              }\n              console.log(\"Total Unread Messages:\", total_unread_msgs);\n              return _context13.abrupt(\"return\", total_unread_msgs);\n            case 33:\n              _context13.prev = 33;\n              _context13.t0 = _context13[\"catch\"](9);\n              console.error(\"Fetch error:\", _context13.t0.message);\n              return _context13.abrupt(\"return\", null);\n            case 37:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, null, [[9, 33]]);\n      }));\n      return function (_x30, _x31, _x32) {\n        return _ref14.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"getUnreadMsgsP2P\", /*#__PURE__*/function () {\n      var _ref15 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(token, app_name) {\n        var app_version,\n          extend,\n          myHeaders,\n          requestOptions,\n          api_url,\n          response,\n          errorMsg,\n          result,\n          totalUnreadMsgs,\n          _args14 = arguments;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              app_version = _args14.length > 2 && _args14[2] !== undefined ? _args14[2] : \"V1\";\n              extend = _args14.length > 3 && _args14[3] !== undefined ? _args14[3] : false;\n              myHeaders = new Headers();\n              myHeaders.append(\"Authorization\", token);\n              requestOptions = {\n                method: \"GET\",\n                headers: myHeaders,\n                redirect: \"follow\"\n              };\n              api_url = null;\n              if (app_version === \"V1\") {\n                api_url = \"https://chats.\".concat(\"addchat.tech\", \"/\").concat(\"dev\", \"/all_chats?app_name=\").concat(app_name, \"&page=1&unread=True&app_type=P2P&user_type=CLIENT\");\n                console.log(\"sdlfosildfsdfsdf3\");\n              }\n              if (api_url) {\n                _context14.next = 10;\n                break;\n              }\n              console.error(\"Invalid app version provided!\");\n              return _context14.abrupt(\"return\", null);\n            case 10:\n              _context14.prev = 10;\n              _context14.next = 13;\n              return fetch(api_url, requestOptions);\n            case 13:\n              response = _context14.sent;\n              if (response.ok) {\n                _context14.next = 19;\n                break;\n              }\n              _context14.next = 17;\n              return response.text();\n            case 17:\n              errorMsg = _context14.sent;\n              throw new Error(\"HTTP Error: \".concat(response.status, \" - \").concat(errorMsg));\n            case 19:\n              _context14.next = 21;\n              return response.json();\n            case 21:\n              result = _context14.sent;\n              console.log(\"API Response:\", result);\n              if (!extend) {\n                _context14.next = 27;\n                break;\n              }\n              return _context14.abrupt(\"return\", result.chats[app_name]);\n            case 27:\n              // Calculate total unread messages\n              totalUnreadMsgs = Object.values(result.chats).flatMap(function (app) {\n                return Object.values(app);\n              }).reduce(function (sum, user) {\n                return sum + (user.unread_msgs || 0);\n              }, 0);\n              return _context14.abrupt(\"return\", totalUnreadMsgs);\n            case 29:\n              _context14.next = 35;\n              break;\n            case 31:\n              _context14.prev = 31;\n              _context14.t0 = _context14[\"catch\"](10);\n              console.error(\"Fetch error:\", _context14.t0.message);\n              return _context14.abrupt(\"return\", null);\n            case 35:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, null, [[10, 31]]);\n      }));\n      return function (_x33, _x34) {\n        return _ref15.apply(this, arguments);\n      };\n    }());\n    _defineProperty(this, \"updateNotificationBell\", function (tezkit_app_data) {\n      console.log(\"tezkit_app_datasdafsdfsd\", _typeof(tezkit_app_data), tezkit_app_data);\n      if (tezkit_app_data) {\n        var tezkit_app_p_data = tezkit_app_data;\n        if (typeof tezkit_app_data === \"string\") {\n          tezkit_app_p_data = JSON.parse(tezkit_app_data);\n        } else {\n          tezkit_app_p_data = tezkit_app_data;\n        }\n        //\n\n        if (tezkit_app_p_data.settings.version == \"V1\") {\n          this.incrementNotificationsCount();\n        }\n      }\n    });\n    _defineProperty(this, \"msgHandler\", function (data, tezkit_app_data) {\n      var msg_type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"REGULAR\";\n      console.log(\"DO WE FIRE IN INCOMING MESSAGES AND OUTGOING BOTH????\", msg_type);\n      var p_data = JSON.parse(data);\n      console.log(\"messagep_data\", p_data);\n      console.log(_this.state.chat_modal_open, \"arenthewehere?\", msg_type, _this.state.viewType);\n      // addToReadMsgsLs(p_data);\n      if (msg_type != \"BOT\") {\n        console.log(\"arent weh ere???\", _this.state.loggedInUser);\n        _this.informPeerSysAboutMsgStatus(_this.state.socket, p_data.message.ret_id, \"DELIVERED\", _this.state.loggedInUser.app_name, p_data.message.frm_user.id);\n      }\n\n      // update notifications bell\n      _this.updateNotificationBell(tezkit_app_data);\n      if (_this.state.chat_modal_open) {\n        console.log(\"sdfasdfsdfthis.state.chat_modal_open\", _this.state.chat_modal_open);\n        console.log(_typeof(tezkit_app_data), \"tezkit_app_datasdfsdf\", tezkit_app_data);\n        var tezkit_app_pdata = typeof tezkit_app_data == \"string\" ? JSON.parse(tezkit_app_data) : tezkit_app_data;\n        console.log(\"tezkit_app_datasdfasdfasdf\", tezkit_app_pdata);\n        if (tezkit_app_pdata.settings.app_type == \"P2A\") {\n          console.log(\"here is p_datasdfsdf\", p_data);\n          if (msg_type == \"REGULAR\") {\n            // addNewElementToChatBody(chatBody, p_data);\n\n            // chat_core.insertBulkChats([p_data]);\n            _this.addMessageToUserChatBox(p_data, p_data.type, undefined, \"INCOMING\");\n          } else if (msg_type == \"REPLY\") {\n            // addNewElementToChatBody(chatBody, p_data, \"REPLY\");\n            _this.addMessageToUserChatBox(p_data, p_data.type, undefined, \"INCOMING\");\n          } else if (msg_type == \"BOT\") {\n            // addNewElementToChatBody(chatBody, p_data, \"BOT\");\n\n            console.log(\"arew wehere here for logout bot case?\");\n            _this.addMessageToBotChatBox(p_data, p_data.type, undefined, \"INCOMING\");\n          } else if (msg_type == \"NEW_FILE_MIXED_V1\") {\n            console.log(\"ihopedoc is uploading throughSDFSDFSDF it??\");\n            // addNewElementToChatBody(chatBody, p_data, \"NEW_FILE_MIXED_V1\");\n            _this.addMessageToUserChatBox(p_data, p_data.type, undefined, \"INCOMING\");\n          }\n          // this.informPeerSysAboutMsgStatus(\n          //       this.state.socket,\n          //       p_data.message.ret_id,\n          //       \"DELIVERED\",\n          //       this.state.loggedInUser.app_name,\n          //       p_data.message.to_user.id\n          //     );\n          //     console.log(\"what is it mode\",this.state.viewType)\n          if (_this.state.viewType == \"user_chat\") {\n            console.log(\"ehre can wer seechat_\");\n            _this.informPeerSysAboutMsgStatus(_this.state.socket, p_data.message.ret_id, \"READ\", _this.state.loggedInUser.app_name, p_data.message.to_user.id);\n          } else {\n            console.log(\"heorjowerwerwer?\", data);\n            _this.state.unread_messages = [].concat(_toConsumableArray(_this.state.unread_messages), [JSON.parse(data)]);\n          }\n        } else {\n          console.log(_this.state.activeWindowObj, \"datasdsdfytjytjytjfsadfsd\", p_data);\n          var right_uid = tezkit_app_pdata.settings.version == \"V1\" ? \"id\" : \"uid\";\n          if (_this.state.activeWindowObj[right_uid] == p_data.message.frm_user.id) {\n            console.log(\"here is p_datassdfdfsdf\", p_data);\n            if (msg_type == \"REGULAR\") {\n              // addNewElementToChatBody(chatBody, p_data);\n              // chat_core.insertBulkChats([p_data]);\n              _this.addMessageToUserChatBox(p_data, p_data.type, undefined, \"INCOMING\");\n            } else if (msg_type == \"REPLY\") {\n              // addNewElementToChatBody(chatBody, p_data, \"REPLY\");\n              _this.addMessageToUserChatBox(p_data, p_data.type, undefined, \"INCOMING\");\n            } else if (msg_type == \"BOT\") {\n              // addNewElementToChatBody(chatBody, p_data, \"BOT\");\n            } else if (msg_type == \"NEW_FILE_MIXED_V1\") {\n              console.log(\"ihopedoc is uploading throughSDFSDFSDF it??\");\n              // addNewElementToChatBody(chatBody, p_data, \"NEW_FILE_MIXED_V1\");\n              _this.addMessageToUserChatBox(p_data, p_data.type, undefined, \"INCOMING\");\n            }\n            if (msg_type != \"BOT\") {\n              _this.informPeerSysAboutMsgStatus(_this.state.socket, p_data.message.ret_id, \"READ\", _this.state.loggedInUser.app_name, p_data.message.frm_user.id);\n            }\n          }\n        }\n      } else {\n        console.log(\"if we going this way may be we can load things in unread_messages?\");\n      }\n    });\n    // Function to update the reaction\n    _defineProperty(this, \"updateMessageReaction\", function (messageElement, reaction) {\n      console.log(\"arewenoteven calling th?what is the diff\", messageElement);\n      var reactionElement = messageElement.querySelector(\".reaction\");\n      if (!reactionElement) {\n        reactionElement = document.createElement(\"div\");\n        reactionElement.classList.add(\"reaction\");\n        reactionElement.style.visibility = \"visible\";\n        messageElement.appendChild(reactionElement);\n      }\n      reactionElement.textContent = reaction;\n    });\n    _defineProperty(this, \"attachCommonSocks\", function (tezkit_app_data, identifiers) {\n      console.log(identifiers, \"sdfsdidentifierssdfsddffsd\", identifiers, this);\n      var self = this;\n      console.log(\"hwere waht isself.state?\", self);\n      this.state.socket.emit(\"join_room\", {\n        room: \"global_for__\" + self.state.loggedInUser[identifiers[\"name_idn\"]]\n      });\n      this.state.socket.on(\"ON_MESSAGE_ARRIVAL_BOT\", function (data) {\n        console.log(\"tezkit_app_datasdfsadfsasdfsdd\", tezkit_app_data);\n        self.msgHandler(data, JSON.stringify(tezkit_app_data));\n      });\n\n      // bot_server_send_room\n      //\n\n      this.state.socket.on(\"TYPING_INDICATOR\", function (data) {\n        var right_uid_key = data.frm_user.id;\n        console.log(right_uid_key, \"here we recifed ls from adming\", data, _typeof(data));\n        console.log(\"whaetwerthis?\", this);\n        var updateAdminTypingStatusAtClient = function updateAdminTypingStatusAtClient(isTyping) {\n          console.log(\"typing statusisTyping\", isTyping);\n          var chatHeader = document.querySelector(\".chat_header\");\n          if (chatHeader) {\n            var typingStatusElm = chatHeader.querySelector(\"#typingStatusElm\");\n            console.log(typingStatusElm, \"chatHeadersdasfdasdfa\", chatHeader);\n            if (typingStatusElm) {\n              typingStatusElm.textContent = \"\";\n              typingStatusElm.textContent = isTyping ? \"typing...\" : \"\";\n            }\n          }\n        };\n        updateAdminTypingStatusAtClient(data.typing);\n      });\n      this.state.socket.on(\"BOT_MSG_ARRIVAL\", function (data) {\n        // this.msgHandler(socket, data, tezkit_app_data);\n        console.log(\"go some bot data???\", data);\n        self.msgHandler(data, tezkit_app_data, \"BOT\");\n      });\n      this.state.socket.on(\"ON_REPLY_ARRIVAL\", function (data) {\n        self.msgHandler(data, JSON.stringify(tezkit_app_data), \"REPLY\");\n      });\n\n      // Main socket event handler\n      this.state.socket.on(\"ON_MESSAGE_STATUS_CHANGED\", function (data) {\n        console.log(\"any halchal??\");\n        var p_data = JSON.parse(data);\n        if (!p_data.message.action) {\n          console.error(\"No action provided!\");\n          return;\n        }\n        if (p_data.message.action === \"MSG_STATUS_CHANGE_EVENT\") {\n          console.log(\"dsafsadfasdfsadf\", p_data.message.ret_id, p_data.message.status);\n          console.log(\"here can we see bot_view??\");\n          self.updateDeliveryStatus(p_data.message.ret_id, p_data.message.status);\n        }\n        if (p_data.message.action === \"MSG_UPDATED_EVENT\") {\n          self.handleMsgUpdatedEvent(p_data);\n        } else if (p_data.message.action === \"MSG_REACTION_EVENT\") {\n          self.handleMsgReactionEvent(p_data);\n        } else {\n          console.error(\"Action Not Yet Handled:\", p_data.message.action);\n        }\n      });\n      this.state.socket.on(\"ON_MESSAGE_BULK_STATUS_UPDATE\", function (data) {\n        var p_data = JSON.parse(data);\n        console.log(\"do we have the msg_ids there???\", p_data, this);\n        var app_name = p_data.message.app_name;\n        var msg_status = p_data.message.status;\n        var ret_ids = p_data.message.ret_ids; // HERE WE SWITCH\n        // const user_id = p_data.message.user_id\n\n        self.updateMultipleChatStatus({\n          msg_id: ret_ids\n        }, msg_status);\n      });\n      this.state.socket.on(\"ON_FILE_UPLOAD\", function (p_data) {\n        self.msgHandler(JSON.stringify(p_data), tezkit_app_data, \"NEW_FILE_MIXED_V1\");\n      });\n    });\n    _defineProperty(this, \"toggleChatView\", function (viewType) {\n      var userChatWrapper = document.querySelector(\".chat_body_and_footer_wrapper_user\");\n      var botChatWrapper = document.querySelector(\".chat_body_and_footer_wrapper_bot\");\n      if (viewType === \"user_chat\") {\n        console.log(\"Switching to User Chat\");\n        botChatWrapper.style.display = \"none\";\n        userChatWrapper.style.display = \"flex\";\n        if (viewType == \"user_chat\") {\n          console.log(\"ARNTWEHERE?is this good???this.state.unread_messages\", _this.state.unread_messages);\n          _this.informPeerSysAboutBULKMsgsStatus(_this.state.socket, _this.state.unread_messages, \"READ\", _this.state.loggedInUser.app_name, _this.state.loggedInUser.tenant_info.id);\n        }\n      } else if (viewType === \"bot_chat\") {\n        console.log(\"Switching to Bot Chat\");\n        userChatWrapper.style.display = \"none\";\n        botChatWrapper.style.display = \"flex\";\n      } else if (viewType === null) {\n        console.log(\"Hiding both chat views\");\n        console.error(\"Unknown viewType!\");\n      }\n      _this.state.viewType = viewType;\n    });\n    console.log(\"aswerwerenwrer?\");\n    this.state = {\n      // replying: false,\n      // activeMsgId: null,\n      // to_user_id:null,\n      activeWindowObj: null,\n      globalMsgsBucket: {},\n      prv_inp: null,\n      prv_send_btn: null,\n      loggedInUser: null,\n      socket: _socket,\n      chat_modal_open: false,\n      viewType: \"user_chat\",\n      unread_messages: []\n    };\n  }\n  return _createClass(ChatCore, [{\n    key: \"openChatModal\",\n    value: // Function to toggle the modal visibility\n    function () {\n      var _openChatModal = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {\n        var chat_modal, width;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              chat_modal = document.querySelector(\".chat_modal__\" + _utility_js__WEBPACK_IMPORTED_MODULE_0__.arbitrary_string_to_diff);\n              if (!this.state.chat_modal_open) {\n                // Get the width and height of the window\n                this.state.chat_modal_open = true;\n                width = window.innerWidth;\n                if (width < this.MOBILE_WIDTH) {\n                  chat_modal.style.display = \"flex\";\n                }\n              }\n              console.log(\"safasdfsdfsadfthis.chat_modal_open\", this.state.chat_modal_open);\n            case 3:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this);\n      }));\n      function openChatModal() {\n        return _openChatModal.apply(this, arguments);\n      }\n      return openChatModal;\n    }()\n  }, {\n    key: \"isFeatureEnabled\",\n    value: function isFeatureEnabled(toggleObj, parentProperty) {\n      var subProperty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      // console.log(\"sdfoho;sgdsfsdf\",process.env.production)\n      if (!toggleObj.hasOwnProperty(parentProperty)) {\n        return false;\n      }\n      var parent = toggleObj[parentProperty];\n      if (subProperty === null) {\n        return !!parent.enable;\n      }\n      if (!parent.settings || !parent.settings.hasOwnProperty(subProperty)) {\n        return false;\n      }\n      return !!parent.settings[subProperty].enable;\n    }\n  }, {\n    key: \"awayHandler\",\n    value: function awayHandler(loggedInUser, apptyp, version, identifiers, chat_core) {\n      console.log(\"this sis the apptyp, versionsdf\", apptyp, version);\n      console.log(\"what is ths invoking?\", loggedInUser);\n      var socket = this.state.socket;\n      var awayLimit = 1000; // * 60 * 5; // 1 minute in milliseconds\n      var awayTimer = null;\n      var token = localStorage.getItem(\"tezkit_token\");\n\n      // Function to handle user away status\n      function handleUserAway() {\n        console.log(\"User has been away for more than 1 minute; here will send soc status message (OFFLINE)\");\n        console.log(\"Isnt Userddddd just away!\");\n        console.log(token, \"tokensdfasdfdssdaloggedInUser\", loggedInUser);\n        var tezkit_app_data = localStorage.getItem(\"tezkit_app_data\");\n        var tezkit_app_pdata = null;\n        console.log(\"initialized1111111\", tezkit_app_data);\n        if (tezkit_app_data) {\n          tezkit_app_pdata = JSON.parse(tezkit_app_data);\n          if (version == \"V1\") {\n            var headersList = {\n              Accept: \"*/*\",\n              \"User-Agent\": \"Thunder Client (https://www.thunderclient.com)\",\n              \"x-api-key\": tezkit_app_pdata.auth_key,\n              \"Content-Type\": \"application/json\"\n            };\n            console.log(\"arewe here??what is the bodyCoentn\", loggedInUser);\n            // let bodyContent = JSON.stringify({ ...loggedInUser, is_online: false });\n            var bodyContent = JSON.stringify({\n              // is_online: false,\n              live_status: \"AWAY\",\n              tenant: loggedInUser.tenant,\n              frm_user: {\n                id: loggedInUser.uid ? loggedInUser.uid : loggedInUser.id\n              }\n            });\n            var ls_payload = {\n              // skip_ls_sending: false,\n              app_name: tezkit_app_pdata.app_name,\n              version: tezkit_app_pdata.settings.version,\n              app_type: tezkit_app_pdata.settings.app_type,\n              user_id: loggedInUser.uid ? loggedInUser.uid : loggedInUser.id\n            };\n            if (tezkit_app_pdata.settings.app_type == \"P2P\") {\n              console.log(\"arewe heredyContent in away handler\", bodyContent);\n            } else if (tezkit_app_pdata.settings.app_type == \"P2A\") {\n              ls_payload.tenant_id = loggedInUser.tenant_info.id;\n              console.log(\"here is updatedls_payload\", ls_payload);\n            }\n            chat_core.updateLiveStatus(bodyContent, headersList, ls_payload);\n          } else if (version == \"V2\" || version == \"V3\" || version == \"V4\") {\n            var _tezkit_app_data = localStorage.getItem(\"tezkit_app_data\");\n            var _tezkit_app_pdata = JSON.parse(_tezkit_app_data);\n            var _headersList = {\n              Accept: \"*/*\",\n              \"User-Agent\": \"Thunder Client (https://www.thunderclient.com)\",\n              \"x-api-key\": _tezkit_app_pdata.auth_key,\n              \"Content-Type\": \"application/json\"\n            };\n            console.log(\"ahere is p2a v2.1\", loggedInUser);\n            var _bodyContent = JSON.stringify(_objectSpread(_objectSpread({}, loggedInUser), {}, {\n              // is_online: false,\n              live_status: \"AWAY\",\n              frm_user: {\n                uid: loggedInUser.uid ? loggedInUser.uid : loggedInUser.id\n              }\n            }));\n            console.log(\"arewe heredyContent in handlerUseraway\", _bodyContent, loggedInUser);\n            var _ls_payload = {\n              app_type: _tezkit_app_pdata.settings.app_type,\n              // skip_ls_sending: false,\n              app_name: _tezkit_app_pdata.app_name,\n              version: _tezkit_app_pdata.settings.version,\n              user_id: loggedInUser.uid ? loggedInUser.uid : loggedInUser.id\n            };\n            if (_tezkit_app_pdata.settings.app_type == \"P2P\") {\n              console.log(\"arewe heredyContent in away handler\", _bodyContent);\n            } else if (_tezkit_app_pdata.settings.app_type == \"P2A\") {\n              _ls_payload.tenant_id = loggedInUser.tenant_info.id;\n              console.log(\"here is updatedls_payload\", _ls_payload);\n            }\n            chat_core.updateLiveStatus(_bodyContent, _headersList, _ls_payload);\n          }\n        }\n      }\n\n      // Event listeners for user activity\n      function resetAwayTimer() {\n        clearTimeout(awayTimer);\n      }\n      document.addEventListener(\"visibilitychange\", function () {\n        console.log(\"is it there alright?\", apptyp);\n        var tezkit_app_data = localStorage.getItem(\"tezkit_app_data\");\n        var tezkit_app_pdata = JSON.parse(tezkit_app_data);\n        var feature = tezkit_app_pdata.feature;\n        var client_push_enabled = chat_core.isFeatureEnabled(feature, \"live_status\", \"client_push_admin\");\n        if (client_push_enabled) {\n          if (document.hidden) {\n            // Start away timer if the tab becomes hidden\n            awayTimer = setTimeout(handleUserAway, awayLimit);\n          } else {\n            // Clear away timer if the tab becomes visible again\n            resetAwayTimer();\n            var chat_type = \"PEER2ADMINBOT\";\n            //later on this above hardcoded chat type will be real app setting data??\n\n            if (chat_type == \"PEER2ADMINBOT\") {\n              console.log(\"Isnt Userddddd just Back!\");\n              var _token = localStorage.getItem(\"tezkit_token\");\n              console.log(_token, \"tokensdfasdfsdaloggedInUser\", loggedInUser);\n              var headersList = {};\n              if (version == \"V1\") {\n                headersList = {\n                  Accept: \"*/*\",\n                  \"User-Agent\": \"Thunder Client (https://www.thunderclient.com)\",\n                  \"x-api-key\": tezkit_app_pdata.auth_key,\n                  \"Content-Type\": \"application/json\"\n                };\n                console.log(\"arewe here??what is the bodyCoentn\", loggedInUser);\n\n                // let bodyContent = JSON.stringify({ ...loggedInUser, is_online: false });\n\n                var bodyContent = JSON.stringify({\n                  // is_online: true,\n                  live_status: \"ONLINE\",\n                  tenant: loggedInUser.tenant,\n                  frm_user: {\n                    id: loggedInUser.uid ? loggedInUser.uid : loggedInUser.id\n                  }\n                });\n                console.log(\"arewe heredyContent when document is visibl3e\", bodyContent, loggedInUser.tenant_info.id);\n                console.log(this, \"sdfsdsdfchat_csdforesdf\", chat_core);\n                var ls_payload = {\n                  app_type: tezkit_app_pdata.settings.app_type,\n                  // skip_ls_sending: false,\n                  app_name: tezkit_app_pdata.app_name,\n                  version: tezkit_app_pdata.settings.version,\n                  user_id: loggedInUser.uid ? loggedInUser.uid : loggedInUser.id\n                };\n                if (tezkit_app_pdata.settings.app_type == \"P2P\") {\n                  console.log(\"arewe heredyContent in away handler\", bodyContent);\n                } else if (tezkit_app_pdata.settings.app_type == \"P2A\") {\n                  ls_payload.tenant_id = loggedInUser.tenant_info.id;\n                  console.log(\"here is updatedls_payload\", ls_payload);\n                }\n                chat_core.updateLiveStatus(bodyContent, headersList, ls_payload);\n              } else if (version == \"V2\" || version == \"V3\" || version == \"V4\") {\n                var _headersList2 = {\n                  Accept: \"*/*\",\n                  \"User-Agent\": \"Thunder Client (https://www.thunderclient.com)\",\n                  \"x-api-key\": tezkit_app_pdata.auth_key,\n                  \"Content-Type\": \"application/json\"\n                };\n                console.log(\"ahere is p2a v2.1\", loggedInUser);\n                var logg_in_id = loggedInUser.hasOwnProperty(\"uid\") ? loggedInUser.uid : loggedInUser.id;\n                var _bodyContent2 = JSON.stringify(_objectSpread(_objectSpread({}, loggedInUser), {}, {\n                  // is_online: true,\n                  live_status: \"ONLINE\",\n                  frm_user: {\n                    uid: logg_in_id\n                  }\n                }));\n                console.log(\"do we really have uid in there id???\", loggedInUser);\n                var _ls_payload2 = {\n                  app_type: tezkit_app_pdata.settings.app_type,\n                  // skip_ls_sending: false,\n                  app_name: tezkit_app_pdata.app_name,\n                  version: tezkit_app_pdata.settings.version,\n                  user_id: logg_in_id\n                };\n                if (tezkit_app_pdata.settings.app_type == \"P2P\") {\n                  console.log(\"arewe heredyContent in away handler\", _bodyContent2);\n                } else if (tezkit_app_pdata.settings.app_type == \"P2A\") {\n                  _ls_payload2.tenant_id = loggedInUser.tenant_info.id;\n                  console.log(\"here is updatedls_payload\", _ls_payload2);\n                }\n                chat_core.updateLiveStatus(_bodyContent2, _headersList2, _ls_payload2);\n              }\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"minimizeChatModal\",\n    value: // closeModal = (loggedInUser, tezkit_app_pdata) => {\n    //   console.log(\"dowserjwqerweqrhaveit\", loggedInUser, tezkit_app_pdata);\n    //   // this.openChatModal(loggedInUser, tezkit_app_pdata);\n    // };\n    // Function to toggle the modal visibility\n    function () {\n      var _minimizeChatModal = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {\n        var chat_modal;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              console.log(\"werwqerin hdsf?\");\n              console.log(\"close just the open window\");\n              chat_modal = document.querySelector(\".chat_modal__\" + _utility_js__WEBPACK_IMPORTED_MODULE_0__.arbitrary_string_to_diff);\n              console.log(this.state.chat_modal_open, \"chat_screensdfdsddsf\");\n              this.state.chat_modal_open = false;\n              chat_modal.style.display = \"None\";\n            case 6:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function minimizeChatModal() {\n        return _minimizeChatModal.apply(this, arguments);\n      }\n      return minimizeChatModal;\n    }()\n  }, {\n    key: \"uploadMFiles\",\n    value: function () {\n      var _uploadMFiles = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(requestOptions) {\n        var response, result;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.prev = 0;\n              _context17.next = 3;\n              return fetch(\"https://mmmanager.\".concat(\"addchat.tech\", \"/\").concat(\"dev\", \"/put_object\"), requestOptions);\n            case 3:\n              response = _context17.sent;\n              _context17.next = 6;\n              return response.json();\n            case 6:\n              result = _context17.sent;\n              console.log(\"adsfasdfresult\", result);\n              return _context17.abrupt(\"return\", result);\n            case 11:\n              _context17.prev = 11;\n              _context17.t0 = _context17[\"catch\"](0);\n              console.error(\"Error:\", _context17.t0);\n            case 14:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17, null, [[0, 11]]);\n      }));\n      function uploadMFiles(_x35) {\n        return _uploadMFiles.apply(this, arguments);\n      }\n      return uploadMFiles;\n    }()\n  }, {\n    key: \"prepareFUpayload\",\n    value: function prepareFUpayload(textDataPayload, res) {\n      // Function to extract the filename from the full URL\n      var getFileName = function getFileName(url) {\n        // Match everything after the last '/' and before the last '.'\n        var match = url.match(/\\/([^/]+)$/); // Match filename with extension\n        return match ? decodeURIComponent(match[1]) : null; // Return the decoded file name\n      };\n\n      // Create a new finalPayload to hold the modified data\n      var finalPayload = textDataPayload.map(function (paragraph) {\n        return paragraph.map(function (node) {\n          // If the node is an image, find the full path from res\n          if (node.type === \"img\") {\n            var filename = decodeURIComponent(node.value); // Decode filename from the original payload\n\n            // Find the matching full URL in the res object\n            var fullPath = res.files.find(function (filePath) {\n              var resFileName = getFileName(filePath);\n              return resFileName === filename; // Check for equality\n            });\n\n            // If a match is found, update the value with the full path\n            if (fullPath) {\n              return _objectSpread(_objectSpread({}, node), {}, {\n                value: fullPath\n              }); // Replace the value with the full URL\n            }\n          }\n\n          // Return the node as-is if it's not an image or no match is found\n          return node;\n        });\n      });\n\n      // Return the updated finalPayload\n      return finalPayload;\n    }\n  }, {\n    key: \"setChatInputUI\",\n    value: function setChatInputUI(tezkit_app_data) {\n      var _this3 = this;\n      console.log(\"notwitsmbe surproer\");\n      var self = this;\n      var state = this.state;\n      var activeWindowObj = state.activeWindowObj,\n        loggedInUser = state.loggedInUser,\n        socket = state.socket,\n        globalMsgsBucket = state.globalMsgsBucket;\n      var getRightUID = function getRightUID() {\n        return activeWindowObj.hasOwnProperty(\"uid\") ? activeWindowObj.uid : activeWindowObj.id;\n      };\n      var getGlobalInput = function getGlobalInput() {\n        var _globalMsgsBucket;\n        var uid = getRightUID();\n        return (globalMsgsBucket === null || globalMsgsBucket === void 0 || (_globalMsgsBucket = globalMsgsBucket[\"user__\".concat(uid)]) === null || _globalMsgsBucket === void 0 ? void 0 : _globalMsgsBucket.input) || \"\";\n      };\n      var typingTimeout,\n        isTyping = false;\n\n      // const runIndicatorHandler = () => {\n      //   if (!runIndicatorHandler.isTyping) {\n      //     runIndicatorHandler.isTyping = true;\n      //     socket.emit(\"TYPING_INDICATOR\", {\n      //       typing: true,\n      //       room: \"global_for__\" + getRightUID(),\n      //       frm_user: { id: loggedInUser.id },\n      //     });\n      //   }\n      // };\n\n      // Typing indicator handler (original logic preserved)\n      var runIndicatorHandler = function runIndicatorHandler() {\n        if (!isTyping) {\n          isTyping = true;\n          // const room = `global_for__${active_window.id || active_window.uid}`;\n          // this.state.socket.emit(\"TYPING_INDICATOR\", {\n          //   typing: true,\n          //   room,\n          //   frm_user: { id: loggedInUser.id }\n          // });\n\n          socket.emit(\"TYPING_INDICATOR\", {\n            typing: true,\n            room: \"global_for__\" + getRightUID(),\n            frm_user: {\n              id: loggedInUser.id\n            }\n          });\n        }\n        clearTimeout(typingTimeout);\n        typingTimeout = setTimeout(function () {\n          isTyping = false;\n          socket.emit(\"TYPING_INDICATOR\", {\n            typing: false,\n            room: \"global_for__\" + getRightUID(),\n            frm_user: {\n              id: loggedInUser.id\n            }\n          });\n          // this.state.socket.emit(\"TYPING_INDICATOR\", {\n          //   typing: false,\n          //   room: `global_for__${active_window.id || active_window.uid}`,\n          //   frm_user: { id: loggedInUser.id }\n          // });\n        }, 5000);\n      };\n      var createBotInputWrapper = function createBotInputWrapper() {\n        console.log(\"whichone1\", _this3.state.viewType);\n        var wrapper = document.createElement(\"div\");\n        wrapper.id = \"input-act-bot-wrap\";\n        wrapper.className = \"bot_input_wrapper_div\";\n        var inner = document.createElement(\"div\");\n        inner.className = \"bot_input_inner_wrap\";\n        var input = document.createElement(\"input\");\n        input.type = \"text\";\n        input.className = \"chat_input\";\n        input.placeholder = \"Type a message here for bot...\";\n        var sendBtn = document.createElement(\"button\");\n        sendBtn.className = \"sendbtn\";\n        // sendBtn.innerText = \"Send\";\n        sendBtn.innerHTML = sendbtnIcon;\n        sendBtn.addEventListener(\"click\", function () {\n          var botThinking = document.getElementById(\"bot_thinking\");\n          botThinking.style.display = \"block\";\n          fetch(\"https://djangoboy-hf-bot-backend.hf.space/qa\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-api-key\": tezkit_app_data.auth_key\n            },\n            body: JSON.stringify({\n              question: input.value,\n              app_name: tezkit_app_data.app_name,\n              tenant_id: tezkit_app_data.tenant_id\n            })\n          }).then(function (res) {\n            return res.json();\n          }).then(function (data) {\n            var botSendObj = {\n              type: \"BOT\",\n              message: {\n                msg_id: \"msg_id__95265433\",\n                message: data.answer,\n                status: \"SENT\",\n                timestamp: Date.now(),\n                frm_user: {\n                  id: \"1\",\n                  user: \"deepak singh\"\n                },\n                to_user: {\n                  id: \"2\",\n                  user: \"newuserp2a1\"\n                },\n                ret_id: \"msg_id__95265433\"\n              }\n            };\n            botThinking.style.display = \"none\";\n            self.msgHandler(JSON.stringify(botSendObj), tezkit_app_data, \"BOT\");\n          })[\"catch\"](console.error);\n        });\n        inner.appendChild(input);\n        inner.appendChild(sendBtn);\n        wrapper.appendChild(inner);\n        return {\n          wrapper: wrapper,\n          inputBox: input\n        };\n      };\n      var sendbtnIcon = \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <path d=\\\"M20 0C8.95469 0 0 8.95469 0 20C0 31.0453 8.95469 40 20 40C31.0453 40 40 31.0453 40 20C40 8.95469 31.0453 0 20 0ZM29.3664 11.9031L23.0156 30.0203C22.9329 30.258 22.7911 30.4707 22.6036 30.6386C22.4161 30.8064 22.189 30.9238 21.9436 30.9797C21.6983 31.0356 21.4427 31.0283 21.201 30.9583C20.9592 30.8883 20.7393 30.758 20.5617 30.5797L17.0672 22.3078L8.79531 18.8133C8.61696 18.6357 8.48668 18.4158 8.4167 18.174C8.34673 17.9323 8.33936 17.6767 8.39529 17.4314C8.45122 17.186 8.56861 16.9589 8.73644 16.7714C8.90427 16.5839 9.11701 16.4421 9.35469 16.3594L27.4719 10.0086C27.7361 9.91508 28.0214 9.89831 28.2948 9.9602C28.5682 10.0221 28.8185 10.1601 29.0167 10.3583C29.2149 10.5565 29.3529 10.8068 29.4148 11.0802C29.4767 11.3536 29.4599 11.6389 29.3664 11.9031Z\\\" fill=\\\"#4A7FEB\\\"/>\\n    </svg>\\n    \";\n      var createUserInputWrapper = function createUserInputWrapper() {\n        console.log(\"aeroiwerngsdf?\");\n        var wrapper = document.createElement(\"div\");\n        wrapper.id = \"input-act-wrap\";\n        wrapper.className = \"input-act-wrap\";\n        var inputDiv = document.createElement(\"div\");\n        inputDiv.id = \"input-box-div-wrapper\";\n        inputDiv.className = \"input-box-div-wrapper\";\n        inputDiv.addEventListener(\"input\", runIndicatorHandler);\n        var inputBox = document.createElement(\"input\");\n        inputBox.type = \"text\";\n        inputBox.className = \"input-box\";\n        inputBox.placeholder = \"Type here...\";\n        inputBox.value = getGlobalInput();\n\n        // inputBox.addEventListener(\"focus\", () => {\n        //   inputBox.style.border = \"1px solid rgb(74, 122, 255)\";\n        // });\n\n        var _this3$createAttachme = _this3.createAttachmentButton(inputBox),\n          multiFileuploadBtn = _this3$createAttachme.button,\n          m_fileInput = _this3$createAttachme.fileInput;\n        inputDiv.appendChild(multiFileuploadBtn);\n        m_fileInput.addEventListener(\"change\", function () {\n          _this3.handleFileInputChange(m_fileInput, inputDiv, _this3.state.activeWindowObj, _this3, _utility_js__WEBPACK_IMPORTED_MODULE_0__.getNextCorrectLength, loggedInUser);\n        });\n        document.body.appendChild(m_fileInput);\n        var sendBtn = document.createElement(\"button\");\n        sendBtn.className = \"sendbtn\";\n        // sendBtn.textContent = \"Send\";\n        sendBtn.innerHTML = sendbtnIcon;\n        sendBtn.addEventListener(\"click\", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {\n          var _loggedInUser$id;\n          var rightUID, msgId, msgObj;\n          return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n            while (1) switch (_context18.prev = _context18.next) {\n              case 0:\n                rightUID = getRightUID();\n                console.log(activeWindowObj, \"soerewrightUID\", rightUID);\n                if (inputBox.value) {\n                  _context18.next = 4;\n                  break;\n                }\n                return _context18.abrupt(\"return\");\n              case 4:\n                msgId = (0,_utility_js__WEBPACK_IMPORTED_MODULE_0__.getNextCorrectLength)(\"chat_box_inner_wrapper\");\n                msgObj = {\n                  app_name: loggedInUser.app_name,\n                  room: \"global_for__\" + rightUID,\n                  type: \"REGULAR\",\n                  message: {\n                    msg_id: msgId,\n                    ret_id: msgId,\n                    message: inputBox.value,\n                    status: \"SENT\",\n                    timestamp: Date.now(),\n                    frm_user: {\n                      id: (_loggedInUser$id = loggedInUser.id) !== null && _loggedInUser$id !== void 0 ? _loggedInUser$id : loggedInUser.uid\n                    },\n                    to_user: {\n                      id: rightUID\n                    }\n                  }\n                };\n                self.addMessageToUserChatBox(msgObj);\n                _context18.next = 9;\n                return (0,_utility_js__WEBPACK_IMPORTED_MODULE_0__.addChatToDB)(msgObj, loggedInUser);\n              case 9:\n                console.log(\"may i kno wwhat is thiss \", _typeof(msgObj), msgObj);\n                socket.emit(\"ON_MESSAGE_ARRIVAL_BOT\", msgObj);\n                inputBox.value = \"\";\n              case 12:\n              case \"end\":\n                return _context18.stop();\n            }\n          }, _callee18);\n        })));\n        inputDiv.appendChild(inputBox);\n        inputDiv.appendChild(sendBtn);\n        wrapper.appendChild(inputDiv);\n        return wrapper;\n      };\n      console.log(\"weranteh enve here?\");\n      // ----- DOM Insert Logic -----\n      var userInputWrapper = createUserInputWrapper();\n      var _createBotInputWrappe = createBotInputWrapper(),\n        botInputWrapper = _createBotInputWrappe.wrapper;\n      var chatUserFooter = document.querySelector(\".chat_body_and_footer_wrapper_user .chat_footer\");\n      var chatBotFooter = document.querySelector(\".chat_body_and_footer_wrapper_bot .bot_chat_footer\");\n      if (chatBotFooter) chatBotFooter.appendChild(botInputWrapper);\n      if (chatUserFooter) chatUserFooter.appendChild(userInputWrapper);\n    }\n  }, {\n    key: \"setChatInputLogoutUI\",\n    value: function setChatInputLogoutUI(tezkit_app_data) {\n      var _this4 = this;\n      console.log(\"notwitsmbe surproer\");\n      var self = this;\n      var state = this.state;\n      var activeWindowObj = state.activeWindowObj,\n        loggedInUser = state.loggedInUser,\n        socket = state.socket,\n        globalMsgsBucket = state.globalMsgsBucket;\n\n      // const getRightUID = () =>\n      //   activeWindowObj.hasOwnProperty(\"uid\")\n      //     ? activeWindowObj.uid\n      //     : activeWindowObj.id;\n\n      var getGlobalInput = function getGlobalInput() {\n        var _globalMsgsBucket2;\n        var uid = getRightUID();\n        return (globalMsgsBucket === null || globalMsgsBucket === void 0 || (_globalMsgsBucket2 = globalMsgsBucket[\"user__\".concat(uid)]) === null || _globalMsgsBucket2 === void 0 ? void 0 : _globalMsgsBucket2.input) || \"\";\n      };\n      var typingTimeout,\n        isTyping = false;\n\n      // const runIndicatorHandler = () => {\n      //   if (!runIndicatorHandler.isTyping) {\n      //     runIndicatorHandler.isTyping = true;\n      //     socket.emit(\"TYPING_INDICATOR\", {\n      //       typing: true,\n      //       room: \"global_for__\" + getRightUID(),\n      //       frm_user: { id: loggedInUser.id },\n      //     });\n      //   }\n      // };\n\n      // Typing indicator handler (original logic preserved)\n      // const runIndicatorHandler = () => {\n      //   if (!isTyping) {\n      //     isTyping = true;\n      //     // const room = `global_for__${active_window.id || active_window.uid}`;\n      //     // this.state.socket.emit(\"TYPING_INDICATOR\", {\n      //     //   typing: true,\n      //     //   room,\n      //     //   frm_user: { id: loggedInUser.id }\n      //     // });\n\n      //     socket.emit(\"TYPING_INDICATOR\", {\n      //       typing: true,\n      //       room: \"global_for__\" + getRightUID(),\n      //       frm_user: { id: loggedInUser.id },\n      //     });\n      //   }\n      //   clearTimeout(typingTimeout);\n      //   typingTimeout = setTimeout(() => {\n      //     isTyping = false;\n\n      //     socket.emit(\"TYPING_INDICATOR\", {\n      //       typing: false,\n      //       room: \"global_for__\" + getRightUID(),\n      //       frm_user: { id: loggedInUser.id },\n      //     });\n      //     // this.state.socket.emit(\"TYPING_INDICATOR\", {\n      //     //   typing: false,\n      //     //   room: `global_for__${active_window.id || active_window.uid}`,\n      //     //   frm_user: { id: loggedInUser.id }\n      //     // });\n      //   }, 5000);\n      // };\n\n      var createBotInputWrapperLogout = function createBotInputWrapperLogout() {\n        console.log(\"thissfsdfdfgviewType whichone2\", _this4.state.viewType);\n        var wrapper = document.createElement(\"div\");\n        wrapper.id = \"input-act-bot-wrap\";\n        wrapper.className = \"bot_input_wrapper_div\";\n        var inner = document.createElement(\"div\");\n        inner.className = \"bot_input_inner_wrap\";\n        var input = document.createElement(\"input\");\n        input.type = \"text\";\n        input.className = \"chat_input\";\n        input.placeholder = \"Type a message here for bot...\";\n        var sendBtn = document.createElement(\"button\");\n        sendBtn.className = \"sendbtn\";\n        // sendBtn.innerText = \"Send\";\n        sendBtn.innerHTML = sendbtnIcon;\n        sendBtn.addEventListener(\"click\", function () {\n          var botThinking = document.getElementById(\"bot_thinking\");\n          botThinking.style.display = \"block\";\n          fetch(\"https://djangoboy-hf-bot-backend.hf.space/qa\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-api-key\": tezkit_app_data.auth_key\n            },\n            body: JSON.stringify({\n              question: input.value,\n              app_name: tezkit_app_data.app_name,\n              tenant_id: tezkit_app_data.tenant_id\n            })\n          }).then(function (res) {\n            return res.json();\n          }).then(function (data) {\n            var botSendObj = {\n              type: \"BOT\",\n              message: {\n                msg_id: \"msg_id__95265433\",\n                message: data.answer,\n                status: \"SENT\",\n                timestamp: Date.now(),\n                frm_user: {\n                  id: \"1\",\n                  user: \"deepak singh\"\n                },\n                to_user: {\n                  id: \"2\",\n                  user: \"newuserp2a1\"\n                },\n                ret_id: \"msg_id__95265433\"\n              }\n            };\n            botThinking.style.display = \"none\";\n            self.msgHandler(JSON.stringify(botSendObj), tezkit_app_data, \"BOT\");\n          })[\"catch\"](console.error);\n        });\n        inner.appendChild(input);\n        inner.appendChild(sendBtn);\n        wrapper.appendChild(inner);\n        return {\n          wrapper: wrapper,\n          inputBox: input\n        };\n      };\n      var sendbtnIcon = \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <path d=\\\"M20 0C8.95469 0 0 8.95469 0 20C0 31.0453 8.95469 40 20 40C31.0453 40 40 31.0453 40 20C40 8.95469 31.0453 0 20 0ZM29.3664 11.9031L23.0156 30.0203C22.9329 30.258 22.7911 30.4707 22.6036 30.6386C22.4161 30.8064 22.189 30.9238 21.9436 30.9797C21.6983 31.0356 21.4427 31.0283 21.201 30.9583C20.9592 30.8883 20.7393 30.758 20.5617 30.5797L17.0672 22.3078L8.79531 18.8133C8.61696 18.6357 8.48668 18.4158 8.4167 18.174C8.34673 17.9323 8.33936 17.6767 8.39529 17.4314C8.45122 17.186 8.56861 16.9589 8.73644 16.7714C8.90427 16.5839 9.11701 16.4421 9.35469 16.3594L27.4719 10.0086C27.7361 9.91508 28.0214 9.89831 28.2948 9.9602C28.5682 10.0221 28.8185 10.1601 29.0167 10.3583C29.2149 10.5565 29.3529 10.8068 29.4148 11.0802C29.4767 11.3536 29.4599 11.6389 29.3664 11.9031Z\\\" fill=\\\"#4A7FEB\\\"/>\\n    </svg>\\n    \";\n      // const createUserInputWrapper = () => {\n      //   console.log(\"aeroiwerngsdf?\");\n      //   const wrapper = document.createElement(\"div\");\n      //   wrapper.id = \"input-act-wrap\";\n      //   wrapper.className = \"input-act-wrap\";\n\n      //   const inputDiv = document.createElement(\"div\");\n      //   inputDiv.id = \"input-box-div-wrapper\";\n      //   inputDiv.className = \"input-box-div-wrapper\";\n      //   inputDiv.addEventListener(\"input\", runIndicatorHandler);\n\n      //   const inputBox = document.createElement(\"input\");\n      //   inputBox.type = \"text\";\n      //   inputBox.className = \"input-box\";\n      //   inputBox.placeholder = \"Type here...\";\n      //   inputBox.value = getGlobalInput();\n\n      //   // inputBox.addEventListener(\"focus\", () => {\n      //   //   inputBox.style.border = \"1px solid rgb(74, 122, 255)\";\n      //   // });\n\n      //   const { button: multiFileuploadBtn, fileInput: m_fileInput } =\n      //     this.createAttachmentButton(inputBox);\n\n      //   inputDiv.appendChild(multiFileuploadBtn);\n\n      //   m_fileInput.addEventListener(\"change\", () => {\n      //     this.handleFileInputChange(\n      //       m_fileInput,\n      //       inputDiv,\n      //       this.state.activeWindowObj,\n      //       this,\n      //       getNextCorrectLength,\n      //       loggedInUser\n      //     );\n      //   });\n\n      //   document.body.appendChild(m_fileInput);\n\n      //   const sendBtn = document.createElement(\"button\");\n      //   sendBtn.className = \"sendbtn\";\n      //   // sendBtn.textContent = \"Send\";\n      //   sendBtn.innerHTML = sendbtnIcon;\n      //   sendBtn.addEventListener(\"click\", async () => {\n      //     const rightUID = getRightUID();\n\n      //     console.log(activeWindowObj, \"soerewrightUID\", rightUID);\n      //     if (!inputBox.value) return;\n\n      //     const msgId = getNextCorrectLength(\"chat_box_inner_wrapper\");\n      //     const msgObj = {\n      //       app_name: loggedInUser.app_name,\n      //       room: \"global_for__\" + rightUID,\n      //       type: \"REGULAR\",\n      //       message: {\n      //         msg_id: msgId,\n      //         ret_id: msgId,\n      //         message: inputBox.value,\n      //         status: \"SENT\",\n      //         timestamp: Date.now(),\n      //         frm_user: {\n      //           id: loggedInUser.id ?? loggedInUser.uid,\n      //         },\n      //         to_user: {\n      //           id: rightUID,\n      //         },\n      //       },\n      //     };\n\n      //     self.addMessageToUserChatBox(msgObj);\n      //     await addChatToDB(msgObj, loggedInUser);\n      //     console.log(\"may i kno wwhat is thiss \", typeof msgObj, msgObj);\n      //     socket.emit(\"ON_MESSAGE_ARRIVAL_BOT\", msgObj);\n      //     inputBox.value = \"\";\n      //   });\n\n      //   inputDiv.appendChild(inputBox);\n      //   inputDiv.appendChild(sendBtn);\n\n      //   wrapper.appendChild(inputDiv);\n\n      //   return wrapper;\n      // };\n\n      console.log(\"weranteh enve here?\");\n      // ----- DOM Insert Logic -----\n      // const userInputWrapper = createUserInputWrapper();\n      var _createBotInputWrappe2 = createBotInputWrapperLogout(),\n        botInputWrapper = _createBotInputWrappe2.wrapper;\n      var chatUserFooter = document.querySelector(\".chat_body_and_footer_wrapper_user .chat_footer\");\n      var chatBotFooter = document.querySelector(\".chat_body_and_footer_wrapper_bot .bot_chat_footer\");\n      if (chatBotFooter) chatBotFooter.appendChild(botInputWrapper);\n      // if (chatUserFooter) chatUserFooter.appendChild(userInputWrapper);\n    }\n  }, {\n    key: \"attachInputActionRow\",\n    value: function attachInputActionRow(globalMsgsBucket, getNextCorrectLength, active_window, loggedInUser, socket, chat_core) {\n      var _this5 = this;\n      var tezkit_app_data = JSON.parse(localStorage.getItem(\"tezkit_app_data\"));\n      var self = this;\n      var typingTimeout,\n        isTyping = false;\n      var runIndicatorHandler = function runIndicatorHandler() {\n        return _this5.handleTypingIndicator(active_window, loggedInUser, chat_core, typingTimeout, isTyping);\n      };\n      var inpBCdiv = this.createInputWrapper(runIndicatorHandler);\n      var inputBox = this.createInputBox(globalMsgsBucket, active_window, tezkit_app_data);\n      inputBox.addEventListener(\"focus\", function () {\n        return inputBox.style.border = \"1px solid rgb(74, 122, 255)\";\n      });\n      inpBCdiv.appendChild(inputBox);\n      this.setChatInputUI(tezkit_app_data);\n    }\n  }, {\n    key: \"attachInputActionRowLogout\",\n    value: function attachInputActionRowLogout(globalMsgsBucket,\n    // getNextCorrectLength,\n    // active_window,\n    // loggedInUser,\n    socket, chat_core) {\n      var tezkit_app_data = JSON.parse(localStorage.getItem(\"tezkit_app_data\"));\n      var self = this;\n      // let typingTimeout,\n      //   isTyping = false;\n\n      // const runIndicatorHandler = () =>\n      //   this.handleTypingIndicator(\n      //     active_window,\n      //     loggedInUser,\n      //     chat_core,\n      //     typingTimeout,\n      //     isTyping\n      //   );\n\n      var inpBCdiv = this.createInputWrapperLogout();\n      var inputBox = this.createInputBoxLogout(globalMsgsBucket, \"logout_user\", tezkit_app_data);\n      inputBox.addEventListener(\"focus\", function () {\n        return inputBox.style.border = \"1px solid rgb(74, 122, 255)\";\n      });\n      inpBCdiv.appendChild(inputBox);\n      this.setChatInputLogoutUI(tezkit_app_data);\n    }\n  }, {\n    key: \"greet\",\n    value: function greet() {\n      console.log(\"here updated\");\n    }\n  }, {\n    key: \"anotherFunc\",\n    value: function anotherFunc() {\n      console.log(\"shouuldnot be mocked!\");\n    }\n  }, {\n    key: \"updateChatToDB\",\n    value: function updateChatToDB(reactPayload) {\n      var _this6 = this;\n      var retryCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      console.log(reactPayload, \"Here is the payload11\");\n      var token = localStorage.getItem(\"tezkit_token\");\n\n      // Function to perform the actual fetch request\n      var makeRequest = function makeRequest() {\n        fetch(\"https://chats.\".concat(\"addchat.tech\", \"/\").concat(\"dev\", \"/update_chat\"), {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"\".concat(token) // Replace or modify if needed\n          },\n          body: JSON.stringify(reactPayload)\n        }).then(function (response) {\n          if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n          }\n          return response.json();\n        }).then(function (data) {\n          console.log(\"Reaction updated successfully:\", data);\n        })[\"catch\"](function (error) {\n          console.error(\"Error updating reaction:\", error);\n\n          // Retry the request after 7 seconds if it fails and retryCount is less than 3\n          if (retryCount < 3) {\n            console.log(\"Retrying in 7 seconds...\");\n            setTimeout(function () {\n              _this6.updateChatToDB(reactPayload, retryCount + 1); // Increment retry count\n            }, 7000);\n          } else {\n            console.error(\"Max retries reached, operation failed.\");\n          }\n        });\n      };\n\n      // Initial call to make the request\n\n      if (reactPayload.msg_ids.length > 0) {\n        makeRequest();\n      }\n    }\n  }, {\n    key: \"informPeerSysAboutMsgStatus\",\n    value: function informPeerSysAboutMsgStatus(socket, ret_id) {\n      var status = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"DELIVERED\";\n      var app_name = arguments.length > 3 ? arguments[3] : undefined;\n      var to_user_id = arguments.length > 4 ? arguments[4] : undefined;\n      // console.log(user_id, \"user_idshow me what do e iahve\", loggedInUser);\n\n      // const userKey = !user.hasOwnProperty('uid') ? `user__${user.id}` : `user__${user.uid}`;\n\n      console.log(\"asdfhjosdfisdafsadf\");\n      var tezkit_app_data = localStorage.getItem(\"tezkit_app_data\");\n      console.log(status, \"initialized1111111\", tezkit_app_data);\n      if (tezkit_app_data) {\n        var tezkit_app_pdata = JSON.parse(tezkit_app_data);\n        console.log(this.state, \"initialized2222tezkit_app_pdata222\", this.state.loggedInUser);\n        var right_global_id = tezkit_app_pdata.settings.app_type == \"P2A\" ? this.state.loggedInUser.tenant_info.id : to_user_id;\n        console.log(\"sowe rowerwerwer\");\n        socket.emit(\"ON_MESSAGE_STATUS_CHANGED\", {\n          action: \"MSG_STATUS_CHANGE_EVENT\",\n          ret_id: ret_id,\n          // THIS WILL BE DYNAMIC IN NATURE upda\n          room: \"global_for__\" + right_global_id,\n          status: status,\n          timestamp: Date.now(),\n          app_name: app_name,\n          to_user_id: to_user_id\n        });\n        var deliveryPayload = {\n          type: \"status\",\n          msg_ids: [ret_id],\n          status: status\n        };\n        this.updateChatToDB(deliveryPayload);\n      }\n    }\n  }, {\n    key: \"informPeerSysAboutBULKMsgsStatus\",\n    value: function informPeerSysAboutBULKMsgsStatus(socket, messagesNotRead) {\n      var _this7 = this;\n      var status = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"DELIVERED\";\n      var app_name = arguments.length > 3 ? arguments[3] : undefined;\n      var user_id = arguments.length > 4 ? arguments[4] : undefined;\n      console.log(\"werhwerhewrewrewr?\");\n      // console.log(\"show me what do e iahve\", loggedInUser);\n\n      // const userKey = !user.hasOwnProperty('uid') ? `user__${user.id}` : `user__${user.uid}`;\n\n      var tezkit_app_data = localStorage.getItem(\"tezkit_app_data\");\n      console.log(status, \"initialized1111111\", tezkit_app_data);\n      if (tezkit_app_data) {\n        var tezkit_app_pdata = JSON.parse(tezkit_app_data);\n        if (this.state.loggedInUser) {\n          // Filter messages where the status is not 'READ'\n          console.log(\"messagesNotReadsdfsdf\", messagesNotRead);\n          var unReadMsgs = messagesNotRead.filter(function (message) {\n            return message.message.status !== \"READ\" && _this7.state.loggedInUser[\"id\"] !== message.message.frm_user.id;\n          }).map(function (message) {\n            return message.message.msg_id;\n          });\n          console.log(\"messagesNotReadSDFSD1111\", unReadMsgs);\n          var deliveryPayload = {\n            type: \"status\",\n            msg_ids: unReadMsgs,\n            status: status\n          };\n\n          // console.log(\n          //   loggedInUser,\n          //   unReadMsgs,\n          //   \"SDFHSDAFSDAFSDFCAN WE DECIDE NOT TO FIRE?\",\n          //   user_id\n          // );\n          this.updateChatToDB(deliveryPayload);\n          var right_global_id = null;\n          console.log(this.state.activeWindowObj, \"it's you isn't it?\", tezkit_app_pdata.settings.app_type);\n          if (tezkit_app_pdata.settings.app_type == \"P2A\") {\n            right_global_id = \"global_for__\" + this.state.loggedInUser.tenant_info.id;\n          } else if (tezkit_app_pdata.settings.app_type == \"P2P\") {\n            var correct_id = this.state.activeWindowObj.hasOwnProperty(\"uid\") ? this.state.activeWindowObj.uid : this.state.activeWindowObj.id;\n            right_global_id = \"global_for__\" + correct_id;\n            console.log(\"sdfsdfsfsfright_global_id\", correct_id);\n          }\n          if (unReadMsgs.length) {\n            console.log(\"weruwoeruwer\", right_global_id, this.state.activeWindowObj);\n            this.state.socket.emit(\"ON_MESSAGE_BULK_STATUS_UPDATE\", {\n              ret_ids: unReadMsgs,\n              // THIS WILL BE DYNAMIC IN NATURE upda\n              room: right_global_id,\n              status: status,\n              timestamp: Date.now(),\n              app_name: app_name\n              // user_id,\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"setGlobalSeletedWindowKey\",\n    value: function setGlobalSeletedWindowKey(obj) {\n      console.log(\"setGlobalSeletedWindowKey iddf\", obj);\n      this.state.activeWindowObj = obj;\n    }\n  }, {\n    key: \"insertElmToInpWrapper\",\n    value: function insertElmToInpWrapper(currentElement) {\n      var my_input_div = document.getElementById(\"input-box-div-wrapper\");\n      my_input_div.style.background = \"orange\";\n      if (my_input_div) {\n        var cloned_selected_msg_div = currentElement.cloneNode(true);\n        cloned_selected_msg_div.style.maxHeight = \"70px\";\n        cloned_selected_msg_div.style.overflow = \"hidden\";\n        var inp_elm = my_input_div.firstChild;\n        my_input_div.insertBefore(cloned_selected_msg_div, inp_elm);\n      }\n    }\n  }, {\n    key: \"handleTypingIndicator\",\n    value: function handleTypingIndicator(active_window, loggedInUser, chat_core, typingTimeout, isTyping) {\n      if (!isTyping) {\n        isTyping = true;\n        chat_core.state.socket.emit(\"TYPING_INDICATOR\", {\n          typing: true,\n          room: active_window.id ? \"global_for__\" + active_window.id : \"global_for__\" + active_window.uid,\n          frm_user: {\n            id: loggedInUser.id\n          }\n        });\n      }\n      clearTimeout(typingTimeout);\n      typingTimeout = setTimeout(function () {\n        isTyping = false;\n        chat_core.state.socket.emit(\"TYPING_INDICATOR\", {\n          typing: false,\n          room: active_window.id ? \"global_for__\" + active_window.id : \"global_for__\" + active_window.uid,\n          frm_user: {\n            id: loggedInUser.id\n          }\n        });\n      }, 5000);\n    }\n  }, {\n    key: \"createInputWrapper\",\n    value: function createInputWrapper(runIndicatorHandler) {\n      var wrapper = document.createElement(\"div\");\n      wrapper.id = \"input-box-div-wrapper\";\n      wrapper.classList.add(\"input-box-div-wrapper\");\n      wrapper.addEventListener(\"input\", runIndicatorHandler);\n      return wrapper;\n    }\n  }, {\n    key: \"createInputWrapperLogout\",\n    value: function createInputWrapperLogout() {\n      var wrapper = document.createElement(\"div\");\n      wrapper.id = \"input-box-div-wrapper\";\n      wrapper.classList.add(\"input-box-div-wrapper\");\n      // wrapper.addEventListener(\"input\", runIndicatorHandler);\n      return wrapper;\n    }\n  }, {\n    key: \"createInputBox\",\n    value: function createInputBox(globalMsgsBucket, active_window, tezkit_app_data) {\n      var _globalMsgsBucket$key;\n      var input = document.createElement(\"input\");\n      input.type = \"text\";\n      input.placeholder = \"Type here...\";\n      input.classList.add(\"input-box\");\n      var uid = active_window.uid || active_window.id;\n      var key = \"user__\".concat(uid);\n      var value = (globalMsgsBucket === null || globalMsgsBucket === void 0 || (_globalMsgsBucket$key = globalMsgsBucket[key]) === null || _globalMsgsBucket$key === void 0 ? void 0 : _globalMsgsBucket$key.input) || \"\";\n      input.value = value;\n      return input;\n    }\n  }, {\n    key: \"createInputBoxLogout\",\n    value: function createInputBoxLogout(globalMsgsBucket, input_key, tezkit_app_data) {\n      var _globalMsgsBucket$key2;\n      var input = document.createElement(\"input\");\n      input.type = \"text\";\n      input.placeholder = \"Type here...\";\n      input.classList.add(\"input-box\");\n\n      // const uid = active_window.uid || active_window.id;\n      var key = input_key; //`user__${uid}`;\n      var value = (globalMsgsBucket === null || globalMsgsBucket === void 0 || (_globalMsgsBucket$key2 = globalMsgsBucket[key]) === null || _globalMsgsBucket$key2 === void 0 ? void 0 : _globalMsgsBucket$key2.input) || \"\";\n      input.value = value;\n      return input;\n    }\n  }, {\n    key: \"createAttachmentButton\",\n    value: function createAttachmentButton(wrapper) {\n      var btn = document.createElement(\"button\");\n      btn.classList.add(\"attchementBtn\");\n      var attachmentIc = \"<svg width=\\\"44\\\" height=\\\"50\\\" viewBox=\\\"0 0 44 50\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <path d=\\\"M4 11H39V43H4V11Z\\\" fill=\\\"#B5B0BC\\\"/>\\n    <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M26.8438 0C29.6562 0 32.4688 1.25 34.1875 3.59375L41.8438 13.125C43.0938 14.8437 43.875 16.875 43.875 18.9062V40.625C43.875 45.7812 39.6562 50 34.5 50H9.5C4.34375 50 0.125 45.7812 0.125 40.625V9.375C0.125 4.21875 4.34375 0 9.5 0H26.8438ZM31.6875 17.6562C28.875 14.8438 24.5 14.5312 21.375 17.0312C20.75 17.5 20.5938 18.5938 21.0625 19.2188C21.5312 19.8438 22.625 20 23.25 19.5312C25.125 18.125 27.7813 18.2812 29.3438 20C31.2188 21.875 31.2188 24.8438 29.3438 26.5625L23.875 32.0312L21.2188 34.6875L21.0625 34.8438C19.1875 36.5625 16.375 36.4062 14.6562 34.6875C12.9375 32.9688 12.7812 30.1562 14.5 28.2812L14.6562 28.125L18.25 24.5312L18.4062 24.375C19.0312 23.9062 19.9688 23.9062 20.4375 24.5312C21.0625 25.1562 21.0625 26.0938 20.4375 26.7188L16.8438 30.3125L16.6875 30.4688C16.2188 31.0938 16.2188 32.0312 16.8438 32.5C17.4688 33.125 18.4062 33.125 19.0312 32.5L22.625 28.9062L22.7812 28.75C24.3438 26.875 24.3438 24.0625 22.625 22.3438C20.75 20.4688 17.7812 20.4688 16.0625 22.3438L14.6562 23.75L14.5 23.9062L13.5625 24.8438L12.4687 25.9375C9.34375 29.0625 9.34375 33.9062 12.4687 37.0312C15.5937 40.1562 20.4375 40.1562 23.5625 37.0312L27.1562 33.4375L27.3125 33.2812L31.8437 28.75L32.1562 28.4375C34.6562 25.4688 34.6562 20.625 31.6875 17.6562Z\\\" fill=\\\"white\\\"/>\\n    </svg>\\n    \";\n      btn.innerHTML = attachmentIc;\n      var fileInput = document.createElement(\"input\");\n      fileInput.type = \"file\";\n      fileInput.style.display = \"none\";\n      fileInput.multiple = true;\n      btn.addEventListener(\"click\", function () {\n        return fileInput.click();\n      });\n      return {\n        button: btn,\n        fileInput: fileInput\n      };\n    }\n  }, {\n    key: \"handleFileInputChange\",\n    value: function handleFileInputChange(m_fileInput, wrapper, active_window, chat_core, getNextCorrectLength, loggedInUser) {\n      var _this8 = this;\n      if (m_fileInput.files.length === 0) return;\n      var editableDiv = this.replaceInputWithEditableDiv(m_fileInput, wrapper, chat_core);\n      var proceedBtn = this.createUploadButton();\n      console.log(\"sdfjsoafdsdfsadfsdfproceedBtn\", proceedBtn);\n      console.log(\"sdfohsofsafsdf\", wrapper.lastElementChild);\n      var inputbox = wrapper.removeChild(wrapper.children[wrapper.children.length - 2]);\n      var sendBttn = wrapper.lastElementChild;\n      wrapper.removeChild(wrapper.lastElementChild);\n      wrapper.appendChild(proceedBtn);\n      proceedBtn.addEventListener(\"click\", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {\n        var _this8$collectTextAnd, textData, formData, tn1, res, to_user_id, frm_user_id, payload, tezkit_app_data, tezkit_app_pdata;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              _this8$collectTextAnd = _this8.collectTextAndImagesFromEditable(editableDiv), textData = _this8$collectTextAnd.textData;\n              formData = new FormData();\n              Array.from(m_fileInput.files).forEach(function (file) {\n                return formData.append(\"file\", file, file.name);\n              });\n              formData.append(\"filename\", \"upload Multi\");\n              formData.append(\"sometext_data\", JSON.stringify(textData));\n              formData.append(\"channel_id\", \"\".concat(chat_core.state.loggedInUser.id, \"__to__\").concat(active_window.id));\n              tn1 = getNextCorrectLength(\"chat_box_inner_wrapper\");\n              _context19.next = 9;\n              return _this8.uploadMFiles({\n                method: \"POST\",\n                body: formData\n              });\n            case 9:\n              res = _context19.sent;\n              console.log(\"resterewr\", res);\n              to_user_id = chat_core.state.activeWindowObj.uid || chat_core.state.activeWindowObj.id;\n              frm_user_id = loggedInUser.uid || loggedInUser.id;\n              console.log(to_user_id, \"to_user_idaserweorhworwe\", frm_user_id);\n              payload = {\n                room: \"global_for__\" + to_user_id,\n                type: \"NEW_FILE_MIXED_V1\",\n                message: {\n                  msg_id: tn1,\n                  timestamp: Date.now(),\n                  result: _this8.prepareFUpayload(textData, res),\n                  frm_user: {\n                    id: frm_user_id,\n                    user: loggedInUser.full_name || frm_user_id\n                  },\n                  to_user: {\n                    id: to_user_id\n                  }\n                }\n              };\n              console.log(\"wehrower is the payl\", payload);\n              _this8.state.socket.emit(\"ON_FILE_UPLOAD\", payload);\n              tezkit_app_data = localStorage.getItem(\"tezkit_app_data\");\n              console.log(\"initialized1111111\", tezkit_app_data);\n              if (!tezkit_app_data) {\n                _context19.next = 30;\n                break;\n              }\n              tezkit_app_pdata = JSON.parse(tezkit_app_data);\n              _this8.msgHandler(JSON.stringify(payload), tezkit_app_data, \"NEW_FILE_MIXED_V1\");\n              console.log(\"arew ehrer?fsadfdgrgg\");\n              payload.app_name = tezkit_app_pdata.app_name;\n              _context19.next = 26;\n              return (0,_utility_js__WEBPACK_IMPORTED_MODULE_0__.addChatToDB)(payload, loggedInUser);\n            case 26:\n              // HERE CAN YOU PUT THE sendBttn & inputbox back to the places they were by remove proceedBtn this time\n              wrapper.removeChild(wrapper.firstElementChild);\n              wrapper.removeChild(proceedBtn);\n\n              // Re-insert inputbox and sendBttn\n              wrapper.appendChild(inputbox);\n              wrapper.appendChild(sendBttn);\n            case 30:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19);\n      })));\n    }\n  }, {\n    key: \"replaceInputWithEditableDiv\",\n    value: function replaceInputWithEditableDiv(m_fileInput, wrapper, chat_core) {\n      var input = wrapper.firstElementChild;\n      var editableDiv = document.createElement(\"div\");\n      editableDiv.contentEditable = \"true\";\n      Object.assign(editableDiv.style, {\n        border: \"1px solid #ddd\",\n        padding: \"10px\",\n        borderRadius: \"4px\",\n        overflow: \"auto\",\n        maxHeight: \"300px\",\n        marginBottom: \"10px\",\n        width: \"90%\",\n        display: \"flex\"\n      });\n      Array.from(m_fileInput.files).forEach(function (file) {\n        var reader = new FileReader();\n        reader.onload = function (e) {\n          var img = document.createElement(\"img\");\n          img.src = e.target.result;\n          img.setAttribute(\"data-filename\", file.name);\n          img.style.width = \"100%\";\n          img.style.height = \"100px\";\n          img.style.objectFit = \"cover\";\n          var para = document.createElement(\"p\");\n          para.style.display = \"flex\";\n          para.style.width = \"100%\";\n          para.appendChild(img);\n          editableDiv.appendChild(para);\n        };\n        reader.readAsDataURL(file);\n      });\n      chat_core.state.prv_inp = input;\n      wrapper.replaceChild(editableDiv, input);\n      var attachBtn = wrapper.children[1];\n      if (attachBtn.tagName === \"BUTTON\") {\n        attachBtn.disabled = true;\n        attachBtn.classList.add(\"attachBtns\");\n      }\n      return editableDiv;\n    }\n  }, {\n    key: \"createUploadButton\",\n    value: function createUploadButton() {\n      var btn = document.createElement(\"button\");\n      btn.textContent = \"Proceed_Upload\";\n      Object.assign(btn.style, {\n        padding: \"10px 15px\",\n        background: \"#4CAF50\",\n        outline: \"none\",\n        border: \"none\",\n        borderRadius: \"8px\",\n        height: \"50px\",\n        color: \"#fff\",\n        fontSize: \"18px\",\n        cursor: \"pointer\",\n        width: \"100%\"\n      });\n      return btn;\n    }\n  }, {\n    key: \"collectTextAndImagesFromEditable\",\n    value: function collectTextAndImagesFromEditable(editableDiv) {\n      var textData = [];\n      editableDiv.childNodes.forEach(function (paragraph) {\n        var row = [];\n        if (paragraph.nodeName === \"P\") {\n          paragraph.childNodes.forEach(function (node) {\n            if (node.nodeType === Node.TEXT_NODE) {\n              row.push({\n                value: node.textContent,\n                type: \"text\"\n              });\n            } else if (node.nodeName === \"IMG\") {\n              var filename = node.getAttribute(\"data-filename\");\n              row.push({\n                value: filename,\n                type: \"img\"\n              });\n            }\n          });\n        }\n        textData.push(row);\n      });\n      return {\n        textData: textData\n      };\n    }\n  }, {\n    key: \"addReactionToDB\",\n    value: function addReactionToDB(reactPayload) {\n      console.log(\"sdfsdfreactPayloadsadf\", reactPayload);\n      if (reactPayload.msg_id.length > 0) {\n        console.log(reactPayload, \"Here is the payloadsdf\");\n        var token = localStorage.getItem(\"token\");\n        fetch(\"https://chats.\".concat(\"addchat.tech\", \"/\").concat(\"dev\", \"/update_chat\"), {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"\".concat(token) // Replace or modify if needed\n          },\n          body: JSON.stringify(reactPayload)\n        }).then(function (response) {\n          if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n          }\n          return response.json();\n        }).then(function (data) {\n          console.log(\"Reaction updated successfully:\", data);\n        })[\"catch\"](function (error) {\n          console.error(\"Error updating reaction:\", error);\n        });\n      }\n    }\n  }, {\n    key: \"addReaction\",\n    value: function addReaction(parentElement, emoji) {\n      console.log(\"arewnoterwehere\");\n      var msgCont = parentElement.querySelector('[id^=\"msg_id__\"]');\n      console.log(\"parentElementsdf\", msgCont);\n      var msgText = msgCont.querySelector(\".mine_message > div\");\n      var msgReactionsDiv = document.createElement(\"div\");\n      msgReactionsDiv.textContent = emoji;\n      msgReactionsDiv.classList.add(\"msgReactions\");\n      parentElement.style.position = \"relative\";\n      parentElement.appendChild(msgReactionsDiv);\n    }\n  }, {\n    key: \"addMessageToUserChatBox\",\n    value: function addMessageToUserChatBox(messageObj1) {\n      var _this9 = this;\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"REGULAR\";\n      var frm_top = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      // const empty_chat_screen = document.getElementById(\"empty_chat_screen\")\n      // if (empty_chat_screen){\n      //     empty_chat_screen.remove()\n      // }\n      console.log(\"should be true when data from api comes???frm_toptype\", type);\n      console.log(\"is it missing the messageObj1 msg_id in REPLY case\", messageObj1);\n      console.log(\"directionwhatisgoingon in there?type\", messageObj1);\n      var messageObj = messageObj1;\n\n      // const { loggedInUser } = this.state;\n      // console.log(\n      //   \"is this called everytime a msg is inserted?\",\n      //   messageObj,\n      //   loggedInUser\n      // );\n\n      var container = document.getElementById(\"chatBody\");\n      var who = messageObj.message.frm_user.id === this.state.loggedInUser[\"id\"] ? \"YOuH\" : \"OtherH\";\n      console.log(\"here1\");\n      var messageDivWrapper = this.createMessageDivWrapper(who);\n      var messageDiv = this.outerMsgRowDiv();\n      var messageContentDiv, emojiContentDiv;\n      console.log(\"here2\");\n      var createMessageContentDiv = function createMessageContentDiv(msgDivn) {\n        messageContentDiv = _this9.innerMsgDivWrap(messageObj, msgDivn);\n        emojiContentDiv = _this9.createEmojiContentDiv();\n        console.log(\"here3\");\n      };\n      console.log(\"what erewrsisdf\", type);\n      if ((type === \"BOT\" || type === \"REPLY\" || type === \"REGULAR\" || messageObj.message.frm_user.id === this.state.loggedInUser[\"id\"]) && type !== \"NEW_FILE_MIXED_V1\") {\n        var msgDivn = document.createElement(\"div\");\n        // messageObj.message.msg_type = type\n        // console.log(\"watewrmessageObj\",messageObj)\n        msgDivn.textContent = messageObj.message.message;\n        createMessageContentDiv(msgDivn);\n        if (type === \"REPLY\") {\n          var msg_to_div = document.createElement(\"div\");\n          msg_to_div.classList.add(\"replyMsgdiv\");\n          var rply_to_who = document.createElement(\"div\");\n          rply_to_who.textContent = messageObj.message.to_msg.by_who;\n          rply_to_who.style.color = \"#003299\";\n          rply_to_who.style.fontWeight = \"600\";\n          var msg_to_msg = document.createElement(\"div\");\n          msg_to_msg.textContent = messageObj.message.to_msg.msg;\n          msg_to_msg.style.paddingTop = \"5px\";\n          msg_to_div.append(rply_to_who, msg_to_msg);\n          messageContentDiv.insertBefore(msg_to_div, messageContentDiv.firstChild);\n        }\n      } else if (type === \"NEW_FILE_MIXED_V1\") {\n        createMessageContentDiv(this.createDocumentMsgDiv(messageObj));\n      }\n      messageDivWrapper.appendChild(messageDiv);\n      messageDiv.append(emojiContentDiv, messageContentDiv);\n      if (messageObj.message.frm_user.id === this.state.loggedInUser[\"id\"]) {\n        var statusDiv = messageContentDiv.querySelector(\".status\");\n        var time_status = messageContentDiv.querySelector(\".time_status\");\n        console.log(time_status, \"messageContentDivmessageContentDivmessageContentDiv\", messageContentDiv);\n        statusDiv.innerHTML = messageObj.message.status === \"DELIVERED\" ? \"&#10003;&#10003;\" : messageObj.message.status === \"READ\" ? \"&#10003;&#10003;\" : \"&#10003;\";\n        statusDiv.style.color = messageObj.message.status === \"READ\" ? \"#95FF8F\" : \"#fff\";\n        statusDiv.style.fontSize = \"20px\";\n        // statusDiv.style.marginTop = \"10px\";\n        // messageContentDiv.appendChild(statusDiv);\n        time_status.appendChild(statusDiv);\n      }\n      var downIcon = this.createDownIcon();\n      messageDiv.addEventListener(\"mouseover\", function () {\n        return _this9.handleMouseOver(false, emojiContentDiv, downIcon);\n      });\n      messageDiv.addEventListener(\"mouseout\", function () {\n        return _this9.handleMouseOut(false, emojiContentDiv, downIcon);\n      });\n      messageContentDiv.insertBefore(downIcon, messageContentDiv.firstChild);\n      if (messageObj.message.reaction) {\n        this.addReaction(messageContentDiv.parentElement, messageObj.message.reaction);\n      }\n      var chatBox = document.querySelector(\".chat_body_and_footer_wrapper_user\");\n      console.log(\"chatBoxchatBox\", chatBox);\n      chatBox.addEventListener(\"click\", function (event) {\n        return _this9.handleChatBoxClick(event);\n      });\n      emojiContentDiv.addEventListener(\"click\", function (event) {\n        event.stopPropagation();\n        _this9.toggleEmojiReactions(event);\n      });\n      downIcon.addEventListener(\"click\", function (event) {\n        event.stopPropagation();\n        _this9.handleDownIconClick(event, messageContentDiv, emojiContentDiv, downIcon);\n      });\n      if (frm_top) {\n        container.prepend(messageDivWrapper);\n      } else {\n        container.appendChild(messageDivWrapper);\n      }\n      console.log(\"hereattheend\", container.childElementCount);\n    }\n  }, {\n    key: \"addMessageToBotChatBox\",\n    value: function addMessageToBotChatBox(messageObj1) {\n      var _this10 = this;\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"BOT\";\n      var frm_top = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      // const empty_chat_screen = document.getElementById(\"empty_chat_screen\")\n      // if (empty_chat_screen){\n      //     empty_chat_screen.remove()\n      // }\n      console.log(\"should be true when data from api comes???frm_toptype\", type);\n      console.log(\"is it missing the messageObj1 msg_id in REPLY case\", messageObj1);\n      console.log(\"directionwhatisgoingon in there?type\", messageObj1);\n      var messageObj = messageObj1;\n\n      // const { loggedInUser } = this.state;\n      // console.log(\n      //   \"is this called everytime a msg is inserted?\",\n      //   messageObj,\n      //   loggedInUser\n      // );\n\n      var container = document.querySelector(\".chat_bot_history\");\n      var who = \"OtherH\";\n      console.log(\"here1\");\n      var messageDivWrapper = this.createMessageDivWrapper(who);\n      var messageDiv = this.outerMsgRowDiv();\n      var messageContentDiv, emojiContentDiv;\n      console.log(\"here2\");\n      var createMessageContentDiv = function createMessageContentDiv(msgDivn) {\n        messageContentDiv = _this10.innerMsgDivWrap(messageObj, msgDivn);\n        // emojiContentDiv = this.createEmojiContentDiv();\n        console.log(\"here3\");\n      };\n      console.log(\"what erewrsisdf\", type);\n      if (type === \"BOT\" || messageObj.message.frm_user.id === this.state.loggedInUser[\"id\"]) {\n        var msgDivn = document.createElement(\"div\");\n        // messageObj.message.msg_type = type\n        // console.log(\"watewrmessageObj\",messageObj)\n        msgDivn.textContent = messageObj.message.message;\n        createMessageContentDiv(msgDivn);\n      }\n      messageDivWrapper.appendChild(messageDiv);\n      messageDiv.append(messageContentDiv);\n\n      // if (messageObj.message.frm_user.id === this.state.loggedInUser[\"id\"]) {\n      //   const statusDiv = messageContentDiv.querySelector(\".status\");\n      //   statusDiv.innerHTML =\n      //     messageObj.message.status === \"DELIVERED\"\n      //       ? \"&#10003;&#10003;\"\n      //       : messageObj.message.status === \"READ\"\n      //       ? \"&#10003;&#10003;\"\n      //       : \"&#10003;\";\n      //   statusDiv.style.color =\n      //     messageObj.message.status === \"READ\" ? \"green\" : \"#fff\";\n      //   statusDiv.style.fontSize = \"20px\";\n      //   statusDiv.style.marginTop = \"10px\";\n      //   messageContentDiv.appendChild(statusDiv);\n      // }\n\n      var downIcon = this.createDownIcon();\n      // messageDiv.addEventListener(\"mouseover\", () =>\n      //   this.handleMouseOver(false, emojiContentDiv, downIcon)\n      // );\n      // messageDiv.addEventListener(\"mouseout\", () =>\n      //   this.handleMouseOut(false, emojiContentDiv, downIcon)\n      // );\n      // messageContentDiv.insertBefore(downIcon, messageContentDiv.firstChild);\n\n      // if (messageObj.message.reaction) {\n      //   this.addReaction(\n      //     messageContentDiv.parentElement,\n      //     messageObj.message.reaction\n      //   );\n      // }\n\n      var chatBox = document.querySelector(\".chat_body_and_footer_wrapper_user\");\n      console.log(\"chatBoxchatBox\", chatBox);\n      chatBox.addEventListener(\"click\", function (event) {\n        return _this10.handleChatBoxClick(event);\n      });\n      // emojiContentDiv.addEventListener(\"click\", (event) => {\n      //   event.stopPropagation();\n      //   this.toggleEmojiReactions(event);\n      // });\n      // downIcon.addEventListener(\"click\", (event) => {\n      //   event.stopPropagation();\n      //   this.handleDownIconClick(\n      //     event,\n      //     messageContentDiv,\n      //     emojiContentDiv,\n      //     downIcon\n      //   );\n      // });\n\n      if (frm_top) {\n        container.prepend(messageDivWrapper);\n      } else {\n        container.appendChild(messageDivWrapper);\n      }\n      console.log(\"hereattheend\", container.childElementCount);\n    }\n  }, {\n    key: \"oldCopyaddMessageToBotChatBox\",\n    value: function oldCopyaddMessageToBotChatBox(messageObj1) {\n      var _this11 = this;\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"BOT\";\n      var frm_top = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      // const empty_chat_screen = document.getElementById(\"empty_chat_screen\")\n      // if (empty_chat_screen){\n      //     empty_chat_screen.remove()\n      // }\n      console.log(\"should be true when data from api comes???frm_toptype\", type);\n      console.log(\"is it missing the messageObj1 msg_id in REPLY case\", messageObj1);\n      console.log(\"directionwhatisgoingon in there?type\", messageObj1);\n      var messageObj = messageObj1;\n\n      // const { loggedInUser } = this.state;\n      // console.log(\n      //   \"is this called everytime a msg is inserted?\",\n      //   messageObj,\n      //   loggedInUser\n      // );\n\n      var container = document.querySelector(\".chat_bot_history\");\n      var who = messageObj.message.frm_user.id === this.state.loggedInUser[\"id\"] ? \"YOuH\" : \"OtherH\";\n      console.log(\"here1\");\n      var messageDivWrapper = this.createMessageDivWrapper(who);\n      var messageDiv = this.outerMsgRowDiv();\n      var messageContentDiv, emojiContentDiv;\n      console.log(\"here2\");\n      var createMessageContentDiv = function createMessageContentDiv(msgDivn) {\n        messageContentDiv = _this11.innerMsgDivWrap(messageObj, msgDivn);\n        emojiContentDiv = _this11.createEmojiContentDiv();\n        console.log(\"here3\");\n      };\n      console.log(\"what erewrsisdf\", type);\n      if (type === \"BOT\" || messageObj.message.frm_user.id === this.state.loggedInUser[\"id\"]) {\n        var msgDivn = document.createElement(\"div\");\n        // messageObj.message.msg_type = type\n        // console.log(\"watewrmessageObj\",messageObj)\n        msgDivn.textContent = messageObj.message.message;\n        createMessageContentDiv(msgDivn);\n      }\n      messageDivWrapper.appendChild(messageDiv);\n      messageDiv.append(emojiContentDiv, messageContentDiv);\n      if (messageObj.message.frm_user.id === this.state.loggedInUser[\"id\"]) {\n        var statusDiv = messageContentDiv.querySelector(\".status\");\n        statusDiv.innerHTML = messageObj.message.status === \"DELIVERED\" ? \"&#10003;&#10003;\" : messageObj.message.status === \"READ\" ? \"&#10003;&#10003;\" : \"&#10003;\";\n        statusDiv.style.color = messageObj.message.status === \"READ\" ? \"green\" : \"#fff\";\n        statusDiv.style.fontSize = \"20px\";\n        statusDiv.style.marginTop = \"10px\";\n        messageContentDiv.appendChild(statusDiv);\n      }\n      var downIcon = this.createDownIcon();\n      messageDiv.addEventListener(\"mouseover\", function () {\n        return _this11.handleMouseOver(false, emojiContentDiv, downIcon);\n      });\n      messageDiv.addEventListener(\"mouseout\", function () {\n        return _this11.handleMouseOut(false, emojiContentDiv, downIcon);\n      });\n      messageContentDiv.insertBefore(downIcon, messageContentDiv.firstChild);\n      if (messageObj.message.reaction) {\n        this.addReaction(messageContentDiv.parentElement, messageObj.message.reaction);\n      }\n      var chatBox = document.querySelector(\".chat_body_and_footer_wrapper_user\");\n      console.log(\"chatBoxchatBox\", chatBox);\n      chatBox.addEventListener(\"click\", function (event) {\n        return _this11.handleChatBoxClick(event);\n      });\n      emojiContentDiv.addEventListener(\"click\", function (event) {\n        event.stopPropagation();\n        _this11.toggleEmojiReactions(event);\n      });\n      downIcon.addEventListener(\"click\", function (event) {\n        event.stopPropagation();\n        _this11.handleDownIconClick(event, messageContentDiv, emojiContentDiv, downIcon);\n      });\n      if (frm_top) {\n        container.prepend(messageDivWrapper);\n      } else {\n        container.appendChild(messageDivWrapper);\n      }\n      console.log(\"hereattheend\", container.childElementCount);\n    }\n  }, {\n    key: \"createMessageDivWrapper\",\n    value: function createMessageDivWrapper(who) {\n      console.log(\"dowe have a whoe\", who);\n      var messageDivWrapper = document.createElement(\"div\");\n      messageDivWrapper.style.justifyContent = who == \"YOuH\" ? \"right\" : \"left\"; //WILL MVOE THIS TO CLASSES BELOW\n\n      // Attach class name 'right' if 'YOuH', else 'left'\n      var alignmentClass = who === \"YOuH\" ? \"me-left\" : \"other-right\";\n      messageDivWrapper.classList.add(alignmentClass);\n\n      // messageDivWrapper.style.flexDirection = \"column\"\n\n      return messageDivWrapper;\n    }\n  }, {\n    key: \"createDocumentMsgDiv\",\n    value: function createDocumentMsgDiv(messageObj) {\n      var fileContainer = document.createElement(\"div\");\n      fileContainer.style.display = \"flex\";\n      fileContainer.style.flexDirection = \"column\";\n      fileContainer.style.gap = \"10px\";\n      // fileContainer.textContent = \"all files and text in right order\"\n      console.log(\"wht is this text data\", messageObj);\n      var containerDiv = document.createElement(\"div\");\n      messageObj.message.result.forEach(function (paragraph) {\n        // Create a <p> element for each paragraph\n        var pElement = document.createElement(\"p\");\n\n        // Loop through each node (text or image) in the paragraph\n        paragraph.forEach(function (node) {\n          if (node.type === \"text\") {\n            // Create a text node and append it to the paragraph\n            var textNode = document.createTextNode(node.value);\n            pElement.appendChild(textNode);\n          } else if (node.type === \"img\") {\n            // Create an <img> element and append it to the paragraph\n            var imgElement = document.createElement(\"img\");\n            imgElement.src = node.value;\n            imgElement.alt = \"Image\";\n            imgElement.style.maxWidth = \"100%\"; // To ensure the image fits within the container\n            pElement.appendChild(imgElement);\n          }\n        });\n\n        // Append the constructed <p> element to the container div\n        containerDiv.appendChild(pElement);\n      });\n      fileContainer.appendChild(containerDiv);\n      return fileContainer;\n    }\n  }, {\n    key: \"outerMsgRowDiv\",\n    value: function outerMsgRowDiv() {\n      var messageDiv = document.createElement(\"div\");\n      messageDiv.classList.add(\"outerMsgRowDiv\");\n      // console.log(\"is it not DELIVERED???\", status)\n      return messageDiv;\n    }\n  }, {\n    key: \"innerMsgDivWrap\",\n    value: function innerMsgDivWrap(messageObj, messageContentDivElement) {\n      console.log(\"messageObjsadfsadf\", messageObj);\n      var messageContentDiv = document.createElement(\"div\");\n      console.log(\"arewehere2\", messageObj);\n      var calc_msg_id = messageObj.message.msg_id;\n      messageContentDiv.setAttribute(\"id\", \"\".concat(calc_msg_id));\n      messageContentDiv.classList.add(\"msgDiv\");\n      function convertToIST(timestamp, timeZone) {\n        var date = new Date(timestamp);\n        var istTime = date.toLocaleString(\"en-IN\", {\n          timeZone: timeZone,\n          hour12: true,\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        });\n        return istTime;\n      }\n      var timestamp = 1750766734356;\n      console.log(convertToIST(timestamp));\n\n      // Set up the structure and append the message content div element\n      messageContentDiv.innerHTML = \"\\n            <div class=\\\"showMsgWrap\\\" >\\n                <div class=\\\"mine_message\\\">\\n                </div>\\n                <div class=\\\"time_status\\\">\\n                    <div>\".concat(convertToIST(messageObj.message.timestamp), \"</div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n        \");\n\n      // Append the passed-in message content div element to the target location\n      messageContentDiv.querySelector(\".mine_message\").appendChild(messageContentDivElement);\n      return messageContentDiv;\n    }\n  }, {\n    key: \"createEmojiContentDiv\",\n    value: function createEmojiContentDiv() {\n      var emojiContentDiv = document.createElement(\"div\");\n      emojiContentDiv.classList.add(\"emoji\");\n      emojiContentDiv.innerHTML = \"&#9786\";\n      return emojiContentDiv;\n    }\n  }, {\n    key: \"createDownIcon\",\n    value: function createDownIcon() {\n      var downIcon = document.createElement(\"div\");\n      downIcon.innerHTML = \"&#709\"; // or \"&#x25BC\";\n      downIcon.classList.add(\"downIc\");\n      return downIcon;\n    }\n  }, {\n    key: \"handleMouseOver\",\n    value: function handleMouseOver(isModalVisible, emojiContentDiv, downIcon) {\n      if (!isModalVisible) {\n        emojiContentDiv.style.visibility = \"visible\";\n        downIcon.style.visibility = \"visible\";\n      }\n    }\n  }, {\n    key: \"handleMouseOut\",\n    value: function handleMouseOut(isModalVisible, emojiContentDiv, downIcon) {\n      if (!isModalVisible) {\n        emojiContentDiv.style.visibility = \"hidden\";\n        downIcon.style.visibility = \"hidden\";\n      }\n    }\n  }, {\n    key: \"toggleEmojiReactions\",\n    value: function toggleEmojiReactions(event) {\n      var target = event.target;\n      var parentElement = target.parentElement;\n      console.log(\"target parentElement\", parentElement);\n      var existingWrapper = parentElement.querySelector(\"#open-emoji-wrap\");\n      console.log(\"existingWrapper parentElement\", existingWrapper);\n      if (existingWrapper) {\n        existingWrapper.remove();\n      } else {\n        this.createEmojiReactions(parentElement);\n      }\n    }\n  }, {\n    key: \"createEmojiReactions\",\n    value: function createEmojiReactions(parentElement) {\n      var _this12 = this;\n      console.log(\"whatiesthignparentElement\", parentElement);\n      var reactionsWrapperDiv = document.createElement(\"div\");\n      reactionsWrapperDiv.setAttribute(\"id\", \"open-emoji-wrap\");\n      reactionsWrapperDiv.classList.add(\"all-emoji-wrap\");\n      var emojis = [\"👍\", \"❤️\", \"😂\", \"😮\", \"😢\", \"👏\"];\n      emojis.forEach(function (emoji) {\n        var emojiDiv = document.createElement(\"div\");\n        emojiDiv.textContent = emoji;\n        emojiDiv.style.marginRight = \"8px\";\n        emojiDiv.onclick = function () {\n          return _this12.handleEmojiClick(parentElement, emoji);\n        };\n        reactionsWrapperDiv.appendChild(emojiDiv);\n      });\n      parentElement.appendChild(reactionsWrapperDiv);\n    }\n  }, {\n    key: \"handleEmojiClick\",\n    value: function handleEmojiClick(parentElement, emoji) {\n      console.log(\"arewnoterweheredssdcanwegetapp_name and id here?\", this.state);\n      var msgCont = parentElement.querySelector('[id^=\"msg_id__\"]');\n      console.log(parentElement, \"asdfsadwhewrdflkjgjdfgdfgfasdfd\", msgCont.id);\n      var msgText = msgCont.querySelector(\".mine_message > div\");\n      console.log(\"this.state.activeWindowObjsdfsdf\", this.state);\n      var tezkit_app_data = localStorage.getItem(\"tezkit_app_data\");\n      console.log(\"initialized1111sdf111\", tezkit_app_data);\n      if (tezkit_app_data) {\n        var tezkit_app_pdata = JSON.parse(tezkit_app_data);\n        console.log(\"tezkit_app_pdtezkit_app_pdataatasdfsd\", tezkit_app_pdata.settings.version);\n        var act_wind_id = tezkit_app_pdata.settings.version == \"V1\" ? this.state.activeWindowObj.id : this.state.activeWindowObj.uid;\n        console.log(\"sadfjsdfsadfact_wind_id\", act_wind_id);\n        this.state.socket.emit(\"ON_MESSAGE_STATUS_CHANGED\", {\n          action: \"MSG_REACTION_EVENT\",\n          ret_id: msgCont.id,\n          //AS RECIEVED MESSAGES CUURRENTLY DON'T SEEM TO HAVE A type\n          room: \"global_for__\" + act_wind_id,\n          message: emoji,\n          to_msg: {\n            msg: msgText.textContent\n          },\n          timestamp: Date.now()\n        });\n        var reactPayload = {\n          msg_id: msgCont.id,\n          reaction: emoji,\n          app_name: this.state.loggedInUser.app_name\n        };\n        this.addReactionToDB(reactPayload);\n        var msgReactionsDiv = document.createElement(\"div\");\n        msgReactionsDiv.textContent = emoji;\n        msgReactionsDiv.classList.add(\"msgReactions\");\n        parentElement.style.position = \"relative\";\n        parentElement.appendChild(msgReactionsDiv);\n      }\n    }\n  }, {\n    key: \"handleDownIconClick\",\n    value: function handleDownIconClick(event, messageContentDiv) {\n      var _this13 = this;\n      var target = event.target;\n      var currentElement = target;\n      var isModalVisible = false;\n      var replyModeModal = document.createElement(\"div\");\n      replyModeModal.setAttribute(\"id\", \"dropdown-popup\");\n      replyModeModal.style.position = \"absolute\";\n      replyModeModal.style.top = \"49px\";\n      replyModeModal.style.right = \"-5px\";\n      replyModeModal.style.width = \"150px\";\n      replyModeModal.style.height = \"auto\";\n      replyModeModal.style.backgroundColor = \"#fff\";\n      replyModeModal.style.color = \"#000\";\n      replyModeModal.style.borderRadius = \"5px\";\n      replyModeModal.style.zIndex = 103;\n      replyModeModal.style.boxShadow = \"0px 0px 10px rgba(0, 0, 0, 0.1)\";\n      replyModeModal.style.cursor = \"pointer\";\n      replyModeModal.style.overflow = \"hidden\";\n      messageContentDiv.appendChild(replyModeModal);\n      var replyModeModalContent = document.createElement(\"div\");\n      replyModeModalContent.style.textAlign = \"left\";\n      replyModeModalContent.style.borderRadius = \"10px\";\n      replyModeModal.appendChild(replyModeModalContent);\n      function handleHover(element, enterColor, leaveColor, borderRadius) {\n        element.addEventListener(\"mouseenter\", function () {\n          element.style.backgroundColor = enterColor;\n          element.style.borderRadius = borderRadius;\n        });\n        element.addEventListener(\"mouseleave\", function () {\n          element.style.backgroundColor = leaveColor;\n        });\n      }\n      var infoBtn = document.createElement(\"div\");\n      infoBtn.textContent = \"Info\";\n      infoBtn.style.padding = \"10px 20px 10px 15px\";\n      replyModeModalContent.appendChild(infoBtn);\n      var rplyBtn = document.createElement(\"div\");\n      rplyBtn.textContent = \"Reply\";\n      rplyBtn.style.padding = \"10px 20px 10px 15px\";\n      rplyBtn.addEventListener(\"click\", function (event) {\n        console.log(\"Test click\");\n        _this13.handleReplyButtonClick(event, replyModeModal);\n      });\n      replyModeModalContent.appendChild(rplyBtn);\n      var copyBtn = document.createElement(\"div\");\n      copyBtn.textContent = \"Copy\";\n      copyBtn.style.padding = \"10px 20px 10px 15px\";\n      replyModeModalContent.appendChild(copyBtn);\n      console.log(\"wahteriwe istarget\", target);\n      var editBtn = null;\n      if (target.closest(\".me-left\")) {\n        console.log(target.closest(\".me-left\"), \"target valuevcb\", target);\n        var _editBtn = this.createEditButton(target.parentElement.parentElement.querySelector('[id^=\"msg_id__\"]').id, this, target);\n        if (_editBtn) {\n          _editBtn.style.padding = \"10px 20px 10px 15px\";\n          replyModeModalContent.appendChild(_editBtn);\n          var borderRadiusEditBtn = \"0px 0px 10px 10px\";\n          handleHover(_editBtn, \"#f0f0f0\", \"\", borderRadiusEditBtn);\n        }\n      }\n      var borderRadiusInfoBtn = \"10px 10px 0 0\";\n      // const borderRadiusEditBtn = \"0px 0px 10px 10px\";\n      handleHover(infoBtn, \"#f0f0f0\", \"\", borderRadiusInfoBtn);\n      handleHover(copyBtn, \"#f0f0f0\", \"\", \"0px\");\n      handleHover(rplyBtn, \"#f0f0f0\", \"\", \"0px\");\n      // handleHover(editBtn, \"#f0f0f0\", \"\", borderRadiusEditBtn);\n\n      isModalVisible = !isModalVisible;\n      replyModeModalContent.style.display = isModalVisible ? \"block\" : \"none\";\n      var parentElement = currentElement.parentElement;\n      var reactionsWrapper = parentElement.querySelector(\"#open-emoji-wrap\");\n      if (reactionsWrapper) {\n        reactionsWrapper.style.display = \"none\";\n      }\n      function closeModal() {\n        replyModeModal.style.display = \"none\";\n        replyModeModal.style.border = \"1px solid red\";\n        isModalVisible = false;\n      }\n      replyModeModalContent.addEventListener(\"click\", function (e) {\n        var clickedElement = e.target;\n        if (clickedElement === infoBtn) {\n          console.log(\"Info button clicked\");\n        } else if (clickedElement === rplyBtn) {\n          console.log(\"Reply button clicked\");\n        } else if (clickedElement === copyBtn) {\n          console.log(\"Copy button clicked\");\n        } else if (clickedElement === editBtn) {\n          console.log(\"Edit button clicked\");\n        }\n\n        // closeModal();\n        closeModal();\n      });\n      function handleClickOutside(event) {\n        var isClickInside = replyModeModal.contains(event.target) || currentElement.contains(event.target);\n        if (!isClickInside) {\n          // closeModal();\n          // this.minimizeChatModal()\n          document.removeEventListener(\"click\", handleClickOutside);\n        }\n      }\n      document.addEventListener(\"click\", handleClickOutside);\n    }\n  }, {\n    key: \"handleChatBoxClick\",\n    value: function handleChatBoxClick(event) {\n      var target = event.target;\n      var allPopups = document.querySelectorAll(\"#open-emoji-wrap, #dropdown-popup\");\n      var isInsideMessage = target.closest('[id^=\"msg_id__\"]');\n      if (!isInsideMessage) {\n        allPopups.forEach(function (popup) {\n          return popup.remove();\n        });\n      }\n    }\n  }, {\n    key: \"handleReplyButtonClick\",\n    value: function handleReplyButtonClick(event, replyModeModal) {\n      var _this14 = this;\n      console.log(\"Handle Reply Button Clicked\");\n      console.log(\"Event:\", event);\n      console.log(\"Reply Mode Modal:\", replyModeModal);\n      // event.stopPropagation();\n      var chat_core = this;\n      var inputBoxDivWrapper = document.getElementById(\"input-box-div-wrapper\");\n      inputBoxDivWrapper.classList.add(\"reply_input_box\");\n      var firstChild = inputBoxDivWrapper.firstElementChild;\n      var msgDiv = event.currentTarget.closest('[id^=\"msg_id__\"]');\n      var clonedMsgDiv = msgDiv.cloneNode(true);\n      clonedMsgDiv.removeChild(clonedMsgDiv.lastElementChild); // Remove dropdown popup\n\n      var finalMsgDiv = clonedMsgDiv.querySelector(\"div.mine_message > div\");\n      clonedMsgDiv.innerHTML = \"\";\n      clonedMsgDiv.appendChild(finalMsgDiv);\n      clonedMsgDiv.style.width = \"100%\";\n      clonedMsgDiv.style.maxWidth = \"100%\";\n      clonedMsgDiv.style.border = \"none\";\n      clonedMsgDiv.style.borderLeft = \"10px solid #C887FE\";\n      clonedMsgDiv.style.background = \"#f3f3f3\";\n      clonedMsgDiv.style.color = \"black\";\n      clonedMsgDiv.style.borderRadius = \"5px\";\n      clonedMsgDiv.style.padding = \"10px\";\n      var replyMsgCloseWrap = document.createElement(\"div\");\n      replyMsgCloseWrap.style.display = \"flex\";\n      replyMsgCloseWrap.style.alignItems = \"center\";\n      replyMsgCloseWrap.style.gap = \"10px\";\n      var closeIcToReplyDiv = document.createElement(\"div\");\n      closeIcToReplyDiv.innerHTML = \"&times;\";\n      closeIcToReplyDiv.style.fontSize = \"34px\";\n      closeIcToReplyDiv.style.textAlign = \"center\";\n      closeIcToReplyDiv.style.cursor = \"pointer\";\n      var newDiv = document.createElement(\"div\");\n      newDiv.innerText = msgDiv.parentElement.parentElement.classList.value == \"me-left\" ? \"You\" : \"Other\";\n      // newDiv.innerText = \"justnfornow\";\n      newDiv.style.color = \"#C887FE\";\n      newDiv.style.padding = \"3px 0\";\n      newDiv.style.fontSize = \"16px\";\n      newDiv.style.fontWeight = \"600\";\n      clonedMsgDiv.insertBefore(newDiv, clonedMsgDiv.firstChild);\n      if (firstChild) {\n        var wrapperRplyDiv = document.createElement(\"div\");\n        wrapperRplyDiv.style.background = \"white\";\n        // wrapperRplyDiv.style.border = \"3px solid yellowgreen\";\n        wrapperRplyDiv.style.padding = \"15px\";\n        wrapperRplyDiv.style.width = \"100%\";\n        var editableDiv = document.createElement(\"div\");\n        console.log(firstChild, \"editableDiveditableDiv\", editableDiv);\n        editableDiv.setAttribute(\"contenteditable\", \"true\");\n        editableDiv.style.border = \"1px solid #ddd\";\n        editableDiv.style.padding = \"10px\";\n        editableDiv.style.borderRadius = \"4px\";\n        // editableDiv.style.backgroundColor = \"azure\";\n        editableDiv.style.margin = \"10px 0px\";\n        editableDiv.style.overflow = \"auto\";\n        editableDiv.style.maxHeight = \"300px\";\n        editableDiv.style.outline = \"none\";\n        editableDiv.innerHTML = \"Go A head a update it with your reply\";\n        var replyToMsgDivW = document.createElement(\"div\");\n        replyToMsgDivW.style.width = \"100%\";\n        replyToMsgDivW.style.borderRadius = \"0px\";\n        replyMsgCloseWrap.appendChild(clonedMsgDiv);\n        replyMsgCloseWrap.appendChild(closeIcToReplyDiv);\n        replyToMsgDivW.appendChild(replyMsgCloseWrap);\n        wrapperRplyDiv.appendChild(replyToMsgDivW);\n        replyToMsgDivW.appendChild(editableDiv);\n        console.log(\"this is the inputbox\", firstChild);\n        inputBoxDivWrapper.replaceChild(wrapperRplyDiv, firstChild);\n        var lastChild = inputBoxDivWrapper.lastElementChild;\n        console.log(\"this is the lastChild\", lastChild);\n        if (lastChild) {\n          var newButton = document.createElement(\"button\");\n          newButton.classList.add(\"sendbtn\");\n          newButton.textContent = \"Send\";\n          chat_core.state.prv_send_btn = lastChild;\n          inputBoxDivWrapper.removeChild(lastChild);\n          inputBoxDivWrapper.appendChild(newButton);\n          console.log(\"do we have it here\", msgDiv);\n          newButton.addEventListener(\"click\", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {\n            var input_value, tn, to_user_id, frm_user_id, replyEventPayload, ret_id;\n            return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n              while (1) switch (_context20.prev = _context20.next) {\n                case 0:\n                  input_value = document.querySelector(\"#input-box-div-wrapper > div > div > div:nth-child(2)\").textContent;\n                  console.log(\"shewrwerweinput_value\", input_value);\n                  if (input_value) {\n                    tn = (0,_utility_js__WEBPACK_IMPORTED_MODULE_0__.getNextCorrectLength)(\"chat_box_inner_wrapper\");\n                    console.log(\"areweyethereds?\", _this14.state.activeWindowObj);\n                    to_user_id = _this14.state.activeWindowObj.hasOwnProperty(\"uid\") ? _this14.state.activeWindowObj.uid : _this14.state.activeWindowObj.id;\n                    frm_user_id = _this14.state.loggedInUser.hasOwnProperty(\"uid\") ? _this14.state.loggedInUser.uid : _this14.state.loggedInUser.id;\n                    replyEventPayload = {\n                      room: \"global_for__\" + to_user_id,\n                      type: \"REPLY\",\n                      message: {\n                        msg_id: tn,\n                        timestamp: Date.now(),\n                        status: \"SENT\",\n                        frm_user: {\n                          user: chat_core.state.loggedInUser.full_name || frm_user_id,\n                          id: frm_user_id\n                        },\n                        to_user: {\n                          user: chat_core.state.activeWindowObj.full_name || to_user_id,\n                          id: to_user_id\n                        },\n                        to_msg: {\n                          msg: clonedMsgDiv.children[1].innerText,\n                          msg_id: clonedMsgDiv.id,\n                          by_who: msgDiv.parentElement.parentElement.classList.value == \"me-left\" ? \"You\" : \"Other\"\n                        },\n                        message: input_value\n                      }\n                    };\n                    console.log(\"whewotirewqrdsf\", _this14.state.activeWindowObj.app_name);\n                    // addMessageToLocalReadStorage(this.state.activeWindowObj.app_name, this.state.activeWindowObj.id, replyEventPayload)\n                    chat_core.addMessageToUserChatBox(replyEventPayload, \"REPLY\");\n                    ret_id = replyEventPayload.message.msg_id; // delete replyEventPayload.message.msg_id\n                    replyEventPayload.message.ret_id = ret_id;\n                    _this14.state.socket.emit(\"ON_REPLY_ARRIVAL\", replyEventPayload);\n                    replyEventPayload.app_name = _this14.state.loggedInUser.app_name;\n                    // addChatToDB(replyEventPayload)\n\n                    console.log(\"isit happeing through this\", replyEventPayload);\n                    inputBoxDivWrapper.replaceChild(firstChild, wrapperRplyDiv);\n                    inputBoxDivWrapper.replaceChild(lastChild, newButton);\n                  }\n                case 3:\n                case \"end\":\n                  return _context20.stop();\n              }\n            }, _callee20);\n          })));\n          closeIcToReplyDiv.addEventListener(\"click\", function () {\n            inputBoxDivWrapper.replaceChild(firstChild, wrapperRplyDiv);\n            inputBoxDivWrapper.replaceChild(lastChild, newButton);\n          });\n        }\n      }\n      // this.closeModal()\n    }\n  }, {\n    key: \"sendAMsgToOtherClient\",\n    value: function sendAMsgToOtherClient(msg_id, msg, sw_key) {\n      // console.log(\"cant we just check activeWindow here\",chat_core.state.activeWindowObj)\n      var prv_msg_obj = document.getElementById(msg_id);\n      console.log(\"whatewr ismsg_id\", prv_msg_obj);\n      var prv_full_msg = prv_msg_obj.querySelector(\".\" + \"mine_message\");\n      function updateAmsg(parentDiv, new_msg) {\n        console.log(\"what is it heresdf\", parentDiv);\n        // Select the parent div by its ID\n        // let parentDiv = document.getElementById(\"msg_id__1__message\");\n\n        // Select the span element inside the parent div\n        // let spanElement = parentDiv.querySelector(\"span\");\n        var oldMsgDiv = parentDiv.children[0];\n\n        // Get the text node right before the span\n        // let textNode = spanElement.previousSibling;\n\n        // Get the text node right before the span\n\n        console.log(\"spanElementsdfsadf\", oldMsgDiv);\n        // let textNode = spanElement.previousSibling;\n\n        // Check if the previous sibling is a text node\n        if (oldMsgDiv && oldMsgDiv.nodeType === Node.ELEMENT_NODE) {\n          // let textContent = textNode.textContent.trim();\n          // console.log(\"sdafsadfstextContent\",textContent); // Outputs: \"AAAnylength\"\n          // return textContent\n          oldMsgDiv.textContent = new_msg;\n        } else {\n          console.log(\"The previous sibling is not a text node or it doesn't exist.\");\n        }\n      }\n      var prv_msg = prv_full_msg.children[0];\n      var prv_txt = prv_msg.textContent;\n      updateAmsg(prv_full_msg, msg);\n      console.log(\"whawtusprv_full_msg\", prv_txt);\n      this.state.socket.emit(\"ON_MESSAGE_STATUS_CHANGED\", {\n        action: \"MSG_UPDATED_EVENT\",\n        ret_id: msg_id,\n        // THIS WILL BE DYNAMIC IN NATURE upda\n        room: \"global_for__\" + sw_key,\n        message: msg,\n        to_msg: {\n          msg: prv_txt\n        },\n        timestamp: Date.now()\n      });\n    }\n  }, {\n    key: \"createEditButton\",\n    value: function createEditButton(msg_id, context, target) {\n      console.log(\"here it is\", msg_id);\n      var editBtn = document.createElement(\"div\");\n      editBtn.textContent = \"Edit\";\n      editBtn.addEventListener(\"click\", function (event) {\n        var currentElement = event.target;\n        var inpCont = document.getElementById(\"input-box-div-wrapper\");\n        console.log(\"Is it an input box? If yes, what is the value?\", inpCont, currentElement.firstChild.textContent);\n        var overlay = document.createElement(\"div\");\n        overlay.classList.add(\"editOverlay\");\n        var popup = document.createElement(\"div\");\n        popup.classList.add(\"editConent\");\n        popup.innerHTML = \"\\n      <div class=\\\"popup-container\\\">\\n      <button id=\\\"close-popup-btn\\\" class=\\\"popup-close-btn\\\">\\n      <i class=\\\"fa fa-close\\\"></i>\\n      </button>\\n      <p style=\\\"font-size: 28px; font-weight:600;\\\">Edit this content:</p>\\n      \\n      <div class=\\\"popup-input-wrap\\\">\\n      <input type=\\\"text\\\" id=\\\"edit-input\\\" value=\\\"\".concat(currentElement.textContent, \"\\\" class=\\\"popup-input\\\">\\n      <button id=\\\"send-btn\\\" class=\\\"popup-send-btn\\\">\\n      <i class=\\\"fa fa-paper-plane\\\"></i>\\n\\n      </button>\\n      </div> \\n      </div>\\n      \");\n\n        // Append the popup to the parent element's parent\n        currentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.appendChild(overlay);\n        currentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.appendChild(popup);\n\n        // Handle the send button click\n        document.getElementById(\"send-btn\").addEventListener(\"click\", function () {\n          var inputFieldValue = document.getElementById(\"edit-input\").value;\n          context.sendAMsgToOtherClient(msg_id, inputFieldValue, context.state.activeWindowObj.id);\n          console.log(\"werweqrwqerwqecurrenddtElement\", this, context);\n          // HERE WILL GO\n\n          var editPayload = {\n            msg_id: msg_id,\n            message: inputFieldValue,\n            type: \"message\",\n            app_name: context.state.activeWindowObj.app_name\n          };\n          console.log(\"edit payload\", editPayload);\n          context.addReactionToDB(editPayload);\n          overlay.remove();\n          popup.remove(); // Close the popup after sending the message\n        });\n\n        // Handle the close button click\n        document.getElementById(\"close-popup-btn\").addEventListener(\"click\", function () {\n          overlay.remove();\n          popup.remove();\n        });\n      });\n      return editBtn;\n    }\n  }, {\n    key: \"updateChat\",\n    value: function updateChat(messageObj, newStatus) {\n      console.log(messageObj, \"what is newstatus now\", newStatus);\n      var messageContentDiv = document.getElementById(messageObj.msg_id);\n      console.log(\"let's grab it's first child\", messageContentDiv);\n      if (messageContentDiv) {\n        var tickIcon = newStatus == \"DELIVERED\" ? \"<span style=\\\"color: white;\\\">&#10003;&#10003;</span>\" : newStatus == \"READ\" ? \"<span style=\\\"color: green;\\\">&#10003;&#10003;</span>\" : \"<span style=\\\"color: white;\\\">&#10003;</span>\";\n\n        // just replace tick icon\n\n        console.log(\"wahtis itdsf\", messageObj.msg_id);\n\n        // const tickDiv = messageContentDiv.lastChild.lastChild\n        // const tickDiv = messageContentDiv.querySelector('#' + messageObj.msg_id + '> div:nth-child(2) > div:nth-child(2) > div.status');\n        var tickDiv = messageContentDiv.querySelector(\".status\");\n        console.log(\"what is this messageContentDiv\", tickDiv, messageContentDiv);\n        if (tickDiv) {\n          tickDiv.innerHTML = \"<div>\".concat(tickIcon, \"</div>\");\n        } else {\n          console.error(\"tick icon not found! Kindly Contact Admin!\");\n        }\n      } else {\n        console.log(\"Message with id \" + messageObj.msg_id + \" not found.\");\n      }\n    }\n  }, {\n    key: \"updateMultipleChatStatus\",\n    value: function updateMultipleChatStatus(messageObjs, newStatus) {\n      console.log(newStatus, \"newStatusmessageObjssdafsdfsd\", messageObjs);\n      messageObjs.msg_id.forEach(function (msg_id) {\n        console.log(msg_id, \"what is newstatus nowQQQ\", newStatus);\n        var messageContentDiv = document.getElementById(msg_id);\n        console.log(\"let's grab it's first child\", messageContentDiv);\n        if (messageContentDiv) {\n          var tickIcon = newStatus == \"DELIVERED\" ? \"<span style=\\\"color: white;\\\">&#10003;&#10003;</span>\" : newStatus == \"READ\" ? \"<span style=\\\"color: rgb(149, 255, 143);\\\">&#10003;&#10003;</span>\" : \"<span style=\\\"color: white;\\\">&#10003;</span>\";\n\n          // just replace tick icon\n\n          console.log(\"wahtis itdsf\", msg_id);\n\n          // const tickDiv = messageContentDiv.lastChild.lastChild\n          // const tickDiv = messageContentDiv.querySelector('#' + messageObj.msg_id + '> div:nth-child(2) > div:nth-child(2) > div.status');\n          var tickDiv = messageContentDiv.querySelector(\".status\");\n          console.log(\"what is this messageContentDiv\", tickDiv, messageContentDiv);\n          if (tickDiv) {\n            tickDiv.innerHTML = \"<div>\".concat(tickIcon, \"</div>\");\n          } else {\n            console.error(\"tick icon not found! Kindly Contact Admin!\");\n          }\n        } else {\n          console.log(\"Message with id \" + msg_id + \" not found.\");\n        }\n      });\n    }\n  }, {\n    key: \"updateMessageReactionInLS\",\n    value: function updateMessageReactionInLS(app_name, user_id, msg_id, new_reaction) {\n      // Retrieve the existing data from local storage\n      var data = JSON.parse(localStorage.getItem(\"tezkit_msgs_data_read\"));\n      var matching_msg_obj;\n\n      // Check if the specified app and user exist in the data structure\n      if (data && data[app_name] && data[app_name][user_id]) {\n        // Get the messages array for the specified user\n        var messages = data[app_name][user_id].msgs;\n        console.log(\"egre rwearwer smessages\", messages);\n        // Find the message with the specified msg_id\n        var messageObj = messages.find(function (item) {\n          return item.message && item.message.msg_id === msg_id;\n        });\n\n        // If the message exists, update its reaction\n        if (messageObj) {\n          messageObj.message.reaction = new_reaction;\n          matching_msg_obj = messageObj;\n          // Save the updated data back to local storage\n          // localStorage.setItem('tezkit_msgs_data_read', JSON.stringify(data));\n          console.log(\"Message reaction updated to \\\"\".concat(new_reaction, \"\\\"\"));\n        } else {\n          console.log(\"Message ID not found.\");\n        }\n      } else {\n        console.log(\"App name or user ID not found in data.\");\n      }\n      return matching_msg_obj;\n    }\n  }, {\n    key: \"updateMessageStatusInLS\",\n    value: function updateMessageStatusInLS(app_name, user_id, msg_id, update_to_status) {\n      // Retrieve the existing data from local storage\n      var data = JSON.parse(localStorage.getItem(\"tezkit_msgs_data_read\"));\n      console.log(data, \"xcg which one is wrong app_name, user_id, msg_id, update_to_status\", app_name, user_id, msg_id, update_to_status);\n\n      // Check if the specified app and user exist in the data structure\n      if (data && data[app_name] && data[app_name][user_id]) {\n        // Get the messages array for the specified user\n        var messages = data[app_name][user_id].msgs;\n\n        // Find the message with the specified msg_id\n        var messageObj = messages.find(function (item) {\n          return item.message && item.message.msg_id === msg_id;\n        });\n\n        // If the message exists, update its status\n        if (messageObj) {\n          messageObj.message.status = update_to_status;\n\n          // Save the updated data back to local storage\n          // localStorage.setItem('tezkit_msgs_data_read', JSON.stringify(data));\n          console.log(\"Message status updated to \\\"\".concat(update_to_status, \"\\\"\"));\n        } else {\n          console.log(\"Message ID not found.\");\n        }\n      } else {\n        console.log(\"App name or user ID not found in data.\");\n      }\n    }\n  }, {\n    key: \"insertSingleChat\",\n    value: function insertSingleChat(messageObj, skip_ls) {\n      var frm_top = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      console.log(frm_top, \"New chat message:\", messageObj);\n      if (!messageObj.message.msg_id) {\n        var tn = (0,_utility_js__WEBPACK_IMPORTED_MODULE_0__.getNextCorrectLength)(\"chat_box_inner_wrapper\");\n        messageObj.message.msg_id = tn;\n      }\n      this.addMessageToUserChatBox(messageObj, messageObj.type, frm_top);\n    }\n  }, {\n    key: \"insertBulkChats\",\n    value: function insertBulkChats(messages) {\n      var _this15 = this;\n      var skip_ls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var frm_top = arguments.length > 2 ? arguments[2] : undefined;\n      messages.forEach(function (messageObj) {\n        _this15.insertSingleChat(messageObj, skip_ls, frm_top);\n      });\n    }\n  }]);\n}();\n\n\n//# sourceURL=webpack://magicChatCore/./src/chat_core.js?");

/***/ }),

/***/ "./src/talk_to_human.png":
/*!*******************************!*\
  !*** ./src/talk_to_human.png ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"7b46cd740f32cc9dd8c7.png\";\n\n//# sourceURL=webpack://magicChatCore/./src/talk_to_human.png?");

/***/ }),

/***/ "./src/utility.js":
/*!************************!*\
  !*** ./src/utility.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addChatToDB: () => (/* binding */ addChatToDB),\n/* harmony export */   addToReadMsgsLs: () => (/* binding */ addToReadMsgsLs),\n/* harmony export */   arbitrary_string_to_diff: () => (/* binding */ arbitrary_string_to_diff),\n/* harmony export */   check_if_user_exists: () => (/* binding */ check_if_user_exists),\n/* harmony export */   getNextCorrectLength: () => (/* binding */ getNextCorrectLength),\n/* harmony export */   isKeyTrue: () => (/* binding */ isKeyTrue),\n/* harmony export */   renderErrorPopup: () => (/* binding */ renderErrorPopup),\n/* harmony export */   renderQNA: () => (/* binding */ renderQNA),\n/* harmony export */   setAppData: () => (/* binding */ setAppData)\n/* harmony export */ });\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction isKeyTrue(data, context, key) {\n  console.log(\"dataconterkey\", data, context);\n  console.log(\"erwewqrwerrwertertewrt\", data[context]);\n  return data[context];\n}\nfunction renderErrorPopup(err_msgs) {\n  // Create the error popup container\n  var errorPopup = document.createElement(\"div\");\n  errorPopup.style.position = \"fixed\";\n  errorPopup.style.top = \"20px\";\n  errorPopup.style.right = \"20px\";\n  errorPopup.style.padding = \"20px\";\n  errorPopup.style.backgroundColor = \"#ff4d4d\";\n  errorPopup.style.color = \"#fff\";\n  errorPopup.style.border = \"1px solid #ff1a1a\";\n  errorPopup.style.zIndex = \"10000\";\n  errorPopup.style.borderRadius = \"5px\";\n  errorPopup.style.maxWidth = \"300px\";\n  errorPopup.style.fontFamily = \"Arial, sans-serif\";\n\n  // Create the error title\n  var errorTitle = document.createElement(\"h3\");\n  errorTitle.textContent = \"Error(s) Occurred\";\n  errorPopup.appendChild(errorTitle);\n\n  // Create the error list\n  var errorList = document.createElement(\"ul\");\n\n  // Assume `data.errors` contains the list of errors (adjust accordingly)\n  if (err_msgs) {\n    err_msgs.forEach(function (error) {\n      var listItem = document.createElement(\"li\");\n      listItem.textContent = error;\n      errorList.appendChild(listItem);\n    });\n    errorPopup.appendChild(errorList);\n\n    // Append close button\n    var closeButton = document.createElement(\"button\");\n    closeButton.textContent = \"Close\";\n    closeButton.style.marginTop = \"10px\";\n    closeButton.style.backgroundColor = \"#ff1a1a\";\n    closeButton.style.color = \"#fff\";\n    closeButton.style.border = \"none\";\n    closeButton.style.padding = \"5px 10px\";\n    closeButton.style.cursor = \"pointer\";\n    closeButton.style.borderRadius = \"3px\";\n    closeButton.addEventListener(\"click\", function () {\n      errorPopup.remove();\n    });\n    var resetSettingsBtn = document.createElement(\"button\");\n    resetSettingsBtn.textContent = \"🔄 Reset Settings\";\n\n    // Style the button for better appearance\n    resetSettingsBtn.style.cssText = \"\\n    padding: 10px 20px;\\n    background-color: #007BFF;\\n    color: white;\\n    border: none;\\n    border-radius: 5px;\\n    font-size: 16px;\\n    cursor: pointer;\\n    transition: background-color 0.3s ease, transform 0.2s ease;\\n\";\n\n    // Add hover and active effects\n    resetSettingsBtn.addEventListener(\"mouseover\", function () {\n      resetSettingsBtn.style.backgroundColor = \"#0056b3\";\n    });\n    resetSettingsBtn.addEventListener(\"mouseout\", function () {\n      resetSettingsBtn.style.backgroundColor = \"#007BFF\";\n    });\n    resetSettingsBtn.addEventListener(\"mousedown\", function () {\n      resetSettingsBtn.style.transform = \"scale(0.95)\";\n    });\n    resetSettingsBtn.addEventListener(\"mouseup\", function () {\n      resetSettingsBtn.style.transform = \"scale(1)\";\n    });\n    resetSettingsBtn.addEventListener(\"click\", function () {\n      // window.location.reload();\n      // resetSettingFunc();\n    });\n    errorPopup.appendChild(resetSettingsBtn);\n    errorPopup.appendChild(closeButton);\n\n    // Prepend the error popup to the document body\n    document.body.prepend(errorPopup);\n  } else {\n    console.error(\"no error still error pop up was tried to open, Contact Admin\");\n  }\n}\nvar questionStack = []; // Tracks navigation history\nvar history = []; // Stores clicked questions\nvar currentAnswer = null; // Stores current answer\n\nfunction renderQNA(node) {\n  var isRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  console.log(\"Rendering node:\", node);\n  if (!node) {\n    console.error(\"Invalid node data:\", node);\n    return;\n  }\n  var chatFooter = document.querySelector(\".chat_body_and_footer_wrapper_bot .bot_chat_footer .bot_body\");\n  var chatHistory = document.querySelector(\".chat_body_and_footer_wrapper_bot .chat_bot_history\");\n  if (!chatFooter || !chatHistory) {\n    console.error(\"Required chat elements not found in the DOM\");\n    return;\n  }\n  chatFooter.innerHTML = \"\"; // Clear previous content\n\n  if (isRoot) {\n    rootNode = node; // Store root node reference\n    questionStack = []; // Reset stack\n    history = []; // Reset history\n    currentAnswer = null; // Reset answer\n\n    var rootQuestionElement = document.createElement(\"div\");\n    rootQuestionElement.textContent = node.text || node.statement;\n    rootQuestionElement.classList.add(\"root-question\");\n    rootQuestionElement.addEventListener(\"click\", function () {\n      renderQNA(node, false);\n    });\n    chatFooter.appendChild(rootQuestionElement);\n  } else {\n    if (!history.includes(node.text)) {\n      history.push(node.text);\n      updateHistoryUI();\n    }\n    if (node.subQuestions && Array.isArray(node.subQuestions) && node.subQuestions.length > 0) {\n      questionStack.push(node);\n      attachQNAUIinFooter(node.subQuestions);\n    } else if (node.answer) {\n      currentAnswer = node.answer.text;\n      attachQNAUIinFooter([]);\n      updateAnswerUI(currentAnswer);\n    } else {\n      console.log(\"thuglife\");\n\n      // else if (questions.length === 0) {\n      console.log(\"arewe ever coming here?\");\n      // Create restart button\n      var restartButton = document.createElement(\"button\");\n      restartButton.innerHTML = \"🔄 Start Over\";\n      restartButton.style.cssText = \"\\n          padding: 12px 24px;\\n          background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\\n          color: white;\\n          border: none;\\n          border-radius: 30px;\\n          font-size: 16px;\\n          font-weight: 600;\\n          cursor: pointer;\\n          transition: all 0.3s ease;\\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n          gap: 8px;\\n          margin: 0 auto;\\n        \";\n\n      // Add hover effects\n      restartButton.addEventListener(\"mouseenter\", function () {\n        restartButton.style.transform = \"translateY(-2px)\";\n        restartButton.style.boxShadow = \"0 6px 12px rgba(0, 0, 0, 0.15)\";\n        restartButton.style.background = \"linear-gradient(135deg, #2575fc 0%, #6a11cb 100%)\";\n      });\n      restartButton.addEventListener(\"mouseleave\", function () {\n        restartButton.style.transform = \"translateY(0)\";\n        restartButton.style.boxShadow = \"0 4px 6px rgba(0, 0, 0, 0.1)\";\n        restartButton.style.background = \"linear-gradient(135deg, #6a11cb 0%, #2575fc 100%)\";\n      });\n\n      // Add click handler\n      restartButton.addEventListener(\"click\", function () {\n        if (rootNode) {\n          renderQNA(rootNode, true);\n        } else {\n          console.error(\"Root node not available for restart\");\n        }\n      });\n\n      // Create container for centering\n      var buttonContainer = document.createElement(\"div\");\n      buttonContainer.style.display = \"flex\";\n      buttonContainer.style.justifyContent = \"center\";\n      buttonContainer.style.width = \"100%\";\n      buttonContainer.style.padding = \"15px 0\";\n      buttonContainer.appendChild(restartButton);\n      chatFooter.appendChild(buttonContainer);\n    }\n  }\n}\nfunction updateHistoryUI() {\n  var chatHistory = document.querySelector(\".chat_body_and_footer_wrapper_bot .chat_bot_history\");\n  chatHistory.innerHTML = \"\"; // Clear previous history\n\n  history.forEach(function (entry) {\n    var historyElement = document.createElement(\"div\");\n    historyElement.textContent = entry;\n    historyElement.style.width = \"60%\";\n    historyElement.style.padding = \"10px\";\n    historyElement.style.borderRadius = \"6px\";\n    historyElement.style.backgroundColor = \"rgb(163, 112, 206)\";\n    historyElement.style.color = \"white\";\n    historyElement.style.marginBottom = \"10px\";\n    chatHistory.appendChild(historyElement);\n  });\n}\nfunction updateAnswerUI(answer) {\n  var chatHistory = document.querySelector(\".chat_body_and_footer_wrapper_bot .chat_bot_history\");\n  if (answer) {\n    var answerElement = document.createElement(\"div\");\n    answerElement.textContent = \"\".concat(answer);\n    answerElement.classList.add(\"answer\");\n    chatHistory.appendChild(answerElement);\n  }\n}\nvar rootNode = null; // Store reference to root node\n\nfunction attachQNAUIinFooter(questions) {\n  console.log(\"eventhe rher?\");\n  var chatFooter = document.querySelector(\".chat_body_and_footer_wrapper_bot .bot_chat_footer .bot_body\");\n  chatFooter.innerHTML = \"\"; // Clear footer\n\n  if (questions.length > 0) {\n    var choicesContainer = document.createElement(\"div\");\n    choicesContainer.classList.add(\"choicesContainer\");\n    questions.forEach(function (subQuestion) {\n      var choiceButton = document.createElement(\"button\");\n      choiceButton.textContent = subQuestion.text;\n      choiceButton.classList.add(\"choice\");\n      choiceButton.addEventListener(\"click\", function () {\n        renderQNA(subQuestion, false);\n      });\n      choicesContainer.appendChild(choiceButton);\n    });\n    chatFooter.appendChild(choicesContainer);\n  } else if (questions.length == 0) {\n    console.log(\"thuglife2\");\n\n    // else {\n\n    // else if (questions.length === 0) {\n    console.log(\"arewe ever coming here?\");\n    // Create restart button\n    var restartButton = document.createElement(\"button\");\n    restartButton.innerHTML = \"🔄 Start Over\";\n    restartButton.style.cssText = \"\\n          padding: 12px 24px;\\n          background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\\n          color: white;\\n          border: none;\\n          border-radius: 30px;\\n          font-size: 16px;\\n          font-weight: 600;\\n          cursor: pointer;\\n          transition: all 0.3s ease;\\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n          gap: 8px;\\n          margin: 0 auto;\\n        \";\n\n    // Add hover effects\n    restartButton.addEventListener(\"mouseenter\", function () {\n      restartButton.style.transform = \"translateY(-2px)\";\n      restartButton.style.boxShadow = \"0 6px 12px rgba(0, 0, 0, 0.15)\";\n      restartButton.style.background = \"linear-gradient(135deg, #2575fc 0%, #6a11cb 100%)\";\n    });\n    restartButton.addEventListener(\"mouseleave\", function () {\n      restartButton.style.transform = \"translateY(0)\";\n      restartButton.style.boxShadow = \"0 4px 6px rgba(0, 0, 0, 0.1)\";\n      restartButton.style.background = \"linear-gradient(135deg, #6a11cb 0%, #2575fc 100%)\";\n    });\n\n    // Add click handler\n    restartButton.addEventListener(\"click\", function () {\n      if (rootNode) {\n        renderQNA(rootNode, true);\n      } else {\n        console.error(\"Root node not available for restart\");\n      }\n    });\n\n    // Create container for centering\n    var buttonContainer = document.createElement(\"div\");\n    buttonContainer.style.display = \"flex\";\n    buttonContainer.style.justifyContent = \"center\";\n    buttonContainer.style.width = \"100%\";\n    buttonContainer.style.padding = \"15px 0\";\n    buttonContainer.appendChild(restartButton);\n    chatFooter.appendChild(buttonContainer);\n\n    // }\n  }\n}\nvar arbitrary_string_to_diff = \"j7hD9nXt3QpLvFz1uY6j7m2\";\nfunction generateUniqueId() {\n  return \"\".concat(Date.now().toString().slice(-5)).concat(Math.floor(Math.random() * 10));\n}\n\n// loggedInUser.app_name, p_data.message.frm_user.id\n\nfunction addToReadMsgsLs(p_data) {\n  var tezkit_msgs_read_data = localStorage.getItem(\"tezkit_msgs_read_data\");\n  //WE CAN LATER PUT AN EXTRA CHECK FOR THE api_key match\n  var tezkit_msgs_p_data = JSON.parse(tezkit_msgs_read_data);\n  tezkit_msgs_p_data.msgs.push(p_data);\n  // const prv_msg_data_string_ls = JSON.stringify(tezkit_msgs_p_data);\n  // localStorage.setItem(\"tezkit_msgs_read_data\", prv_msg_data_string_ls);\n}\nfunction addChatToDB(_x) {\n  return _addChatToDB.apply(this, arguments);\n}\nfunction _addChatToDB() {\n  _addChatToDB = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(new_rply_msg_obj) {\n    var loggedInUser,\n      token,\n      tezkit_app_data,\n      tezkit_app_pdata,\n      myHeaders,\n      raw,\n      requestOptions,\n      response,\n      result,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          loggedInUser = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : null;\n          _context2.prev = 1;\n          token = localStorage.getItem(\"tezkit_token\");\n          tezkit_app_data = localStorage.getItem(\"tezkit_app_data\");\n          tezkit_app_pdata = JSON.parse(tezkit_app_data);\n          console.log(\"srrsedfsdfsdtezkit_app_pdata\", tezkit_app_pdata);\n          myHeaders = new Headers();\n          raw = null;\n          new_rply_msg_obj[\"version\"] = tezkit_app_pdata.settings.version;\n          new_rply_msg_obj[\"app_type\"] = tezkit_app_pdata.settings.app_type;\n          new_rply_msg_obj[\"tenant\"] = tezkit_app_pdata.tenant_id;\n          console.log(\"can we add new requirments to  new_rply_msg_obj\");\n          if (tezkit_app_pdata.settings.version === \"V1\") {\n            myHeaders.append(\"Authorization\", token);\n            // myHeaders.append(\"x-api-key\", tezkit_app_pdata.auth_key);\n\n            // \"x-api-key\": tezkit_app_pdata.auth_key,\n\n            raw = JSON.stringify({\n              data: new_rply_msg_obj,\n              uid: loggedInUser.id\n            });\n          } else {\n            raw = JSON.stringify({\n              data: new_rply_msg_obj,\n              uid: loggedInUser.uid\n            });\n          }\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          requestOptions = {\n            method: \"POST\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\"\n          };\n          _context2.next = 17;\n          return fetch(\"https://chats.\".concat(\"addchat.tech\", \"/\").concat(\"dev\", \"/add_chat\"), requestOptions);\n        case 17:\n          response = _context2.sent;\n          _context2.next = 20;\n          return response.text();\n        case 20:\n          result = _context2.sent;\n          console.log(result);\n          _context2.next = 27;\n          break;\n        case 24:\n          _context2.prev = 24;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.error(_context2.t0);\n        case 27:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[1, 24]]);\n  }));\n  return _addChatToDB.apply(this, arguments);\n}\nvar check_if_user_exists = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(api_key, app_name, uid, tenant) {\n    var myHeaders, requestOptions, response, textResult, result;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"X-API-Key\", api_key);\n          requestOptions = {\n            method: \"GET\",\n            headers: myHeaders,\n            redirect: \"follow\"\n          };\n          _context.prev = 3;\n          _context.next = 6;\n          return fetch(\"https://auth.\".concat(\"addchat.tech\", \"/\").concat(\"dev\", \"/does_user_exist?app_name=\").concat(app_name, \"&uid=\").concat(uid, \"&tenant=\").concat(tenant), requestOptions);\n        case 6:\n          response = _context.sent;\n          _context.next = 9;\n          return response.text();\n        case 9:\n          textResult = _context.sent;\n          console.log(\"result\", textResult, _typeof(textResult));\n\n          // Parse the result if it's JSON\n          result = JSON.parse(textResult);\n          console.log(\"Parsed result\", result);\n\n          // if (!result.success) {\n          //   // logged in user does not exist in database\n          //   // HERE RAISE AN ERROR\n          //   throw new Error(\"User does not exist in the database.\");\n          // }\n          return _context.abrupt(\"return\", result);\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](3);\n          console.error(\"Error:\", _context.t0);\n          throw _context.t0;\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[3, 16]]);\n  }));\n  return function check_if_user_exists(_x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\nfunction getNextCorrectLength(id, opt) {\n  console.log(\"hwomanytimes\", opt);\n  // let chat_body = document.getElementById(id);\n\n  // Count all child nodes (including text nodes and comment nodes)\n  // let totalNodes = chat_body.childElementCount;\n  // const next_msg_id = \"msg_id__\" + (totalNodes + 1);\n  // return next_msg_id;\n  var uuid = generateUniqueId();\n  console.log(uuid); // Example: 134561\n  var next_msg_id = \"msg_id__\" + uuid;\n  return next_msg_id;\n}\nfunction setAppData(_x6, _x7) {\n  return _setAppData.apply(this, arguments);\n}\nfunction _setAppData() {\n  _setAppData = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(app_name, api_key) {\n    var reqUrl, headersList, response, data;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(\"was it called??SDFSDFSDF\", app_name, api_key);\n          if (!(!app_name || !api_key)) {\n            _context3.next = 4;\n            break;\n          }\n          console.error(\"app_name not provided to the client!\");\n          return _context3.abrupt(\"return\");\n        case 4:\n          console.log(\"arerewrewre\");\n          reqUrl = \"https://apps.\".concat(\"addchat.tech\", \"/\").concat(\"dev\", \"/get_222app?act_type=user_type&app_name=\").concat(app_name);\n          headersList = {\n            Accept: \"*/*\",\n            \"X-API-Key\": api_key //THIS ONE SHOULD BE PICKED FROM index.html\n          };\n          _context3.prev = 7;\n          _context3.next = 10;\n          return fetch(reqUrl, {\n            method: \"GET\",\n            headers: headersList\n          });\n        case 10:\n          response = _context3.sent;\n          if (response.ok) {\n            _context3.next = 14;\n            break;\n          }\n          console.error(\"Error: \".concat(response.status, \" - \").concat(response.statusText));\n          return _context3.abrupt(\"return\");\n        case 14:\n          _context3.next = 16;\n          return response.json();\n        case 16:\n          data = _context3.sent;\n          console.log(\"APP DATA\", data);\n          // localStorage.setItem(\"tezkit_app_data\", JSON.stringify(data));\n          return _context3.abrupt(\"return\", data);\n        case 21:\n          _context3.prev = 21;\n          _context3.t0 = _context3[\"catch\"](7);\n          console.error(\"Request failed:\", _context3.t0);\n        case 24:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[7, 21]]);\n  }));\n  return _setAppData.apply(this, arguments);\n}\n\n//# sourceURL=webpack://magicChatCore/./src/utility.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/^blob:/, "").replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/chat_core.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});